import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o as s,a}from"./app-DBc2jY3V.js";const d={};function r(o,t){return s(),e("div",null,t[0]||(t[0]=[a(`<h1 id="_13-事件与事件的处理函数" tabindex="-1"><a class="header-anchor" href="#_13-事件与事件的处理函数" aria-hidden="true">#</a> 13.事件与事件的处理函数</h1><p>事件(event)和前文所介绍的经常用的信号一样,也是实现可视化控件之间联动的重要方法。</p><p>事件是程序收到外界的输入,处于某种状态时自动发送的信号。</p><p>事件有固定的类型每种类型有自己的处理函数,用户只要重写这些函数,即可达到特定的目的。</p><p>通过事件可以用一个控件监测另外一个控件,并可过滤被监测控件发出的事件。</p><h2 id="事件的类型与处理函数" tabindex="-1"><a class="header-anchor" href="#事件的类型与处理函数" aria-hidden="true">#</a> 事件的类型与处理函数</h2><h3 id="事件的概念" tabindex="-1"><a class="header-anchor" href="#事件的概念" aria-hidden="true">#</a> 事件的概念</h3><p>可视化应用程序在接受外界输入设备的输入时,例如鼠标、键盘等的操作,会对输入设备输入的信息进行分类,根据分类的不同,用不同的函数进行处理,做出不同的反应。</p><p>外界对 PySide程序进行输人信息的过程称为事件,例如在窗口上单击鼠标、用鼠标拖动窗口在输人框中输人数据等,这些都是外界对程序的输人,都可以称为事件。</p><p>PySide 程序对外界的输人进行处理的过程称为事件处理,根据外界输入信息的不同,处理事件的函数也不同。</p><p>前面编制的可视化程序中,在主程序中都会创建一个 QApplication 的应用程序实例对象,然后调用实例对象的 exec()函数,这将使应用程序进入一个循环,不断监听外界输入的信息。当输人的信息满足某种分类时,将会产生一个事件对象 QEvent(),事件对象中记录了外界输人的信息,并将事件对象发送给处理该事件对象的函数进行处理。</p><p>事件与前面讲过的信号与槽相似,但是又有不同。信号是指控件或窗口本身满足一定条件时,发送一个带数据的信息或不带数据的信息,需要编程人员为这个信息单独写处理这个信息的槽函数,并将信号和槽函数关联,发送信号时,自动执行与之关联的槽函数。而事件是外界对程序的输人,将外界的输人进行分类后交给函数处理,处理事件的函数是固定的,只需要编程人员把处理事件的函数重写,来达到处理外界输入的目的,而不需要将事件与处理事件的函数进行连接,系统会自动调用能处理事件的函数,并把相关数据作为实参传递给处理事件的函数。</p><p>下面是一个处理鼠标单击事件的程序,在窗口的空白处单击鼠标左键,在 QLineEdit 控件上显示出鼠标单击点处的窗口坐标值,单击鼠标右键,显示右键单击处屏幕坐标值。</p><p>单击鼠标左键或右键将会产生QMouseEvent 事件,QMouseEvent事件的实例对象中有与鼠标事件相关的属性,如 button()方法获取单击的是左键还是右键,x()和 y()方法取鼠标单击点处窗口坐值,globalX()和 globalY()方法获取鼠标单击点处屏幕坐标值。</p><p>QWidget窗口处理 QMouseEvent 事件的函数有:</p><ul><li>mouseDoubleClickEvent(QMouseEvent)</li><li>mouseMoveEvent(QMouseEvent)</li><li>mousePressEvent(QMouseEvent)</li><li>mouseReleaseEvent(QMouseEvent)</li><li>moveEvent(QMoveEvent)</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: UTF-8 -*-</span>
<span class="token comment"># File date: Hi_2023/3/1 20:31</span>
<span class="token comment"># File_name: 01-简单的鼠标点击事件.py</span>
<span class="token keyword">import</span> PySide6<span class="token punctuation">.</span>QtGui
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> QApplication<span class="token punctuation">,</span> QWidget<span class="token punctuation">,</span> QLabel
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> Qt
<span class="token keyword">import</span> sys


<span class="token keyword">class</span> <span class="token class-name">MyWindow</span><span class="token punctuation">(</span>QWidget<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>parent<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>qlabel <span class="token operator">=</span> QLabel<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>qlabel<span class="token punctuation">.</span>setGeometry<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>qlabel<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&quot;请点击&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">mousePressEvent</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtGui<span class="token punctuation">.</span>QMouseEvent<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>  <span class="token comment"># 重写处理mousePress 事件的函数</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mousePressEvent<span class="token punctuation">(</span>event<span class="token punctuation">)</span>

        template1 <span class="token operator">=</span> <span class="token string">&quot;单击点的窗口坐标是x:{} y:{}&quot;</span>
        template2 <span class="token operator">=</span> <span class="token string">&quot;单击点的屏幕坐标是x:{} y:{}&quot;</span>

        <span class="token keyword">if</span> event<span class="token punctuation">.</span>button<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> Qt<span class="token punctuation">.</span>LeftButton<span class="token punctuation">:</span>  <span class="token comment"># button()获取键或右键</span>
            string <span class="token operator">=</span> template1<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>position<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>x<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span>position<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>y<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># x()和()获取窗口坐标</span>
            self<span class="token punctuation">.</span>qlabel<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>string<span class="token punctuation">)</span>

        <span class="token keyword">if</span> event<span class="token punctuation">.</span>button<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> Qt<span class="token punctuation">.</span>RightButton<span class="token punctuation">:</span>  <span class="token comment"># globalX()和globalY()获取全局坐标</span>
            string <span class="token operator">=</span> template2<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>globalPosition<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>x<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span>globalPosition<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>y<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>qlabel<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>string<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
    win <span class="token operator">=</span> MyWindow<span class="token punctuation">(</span><span class="token punctuation">)</span>

    win<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="qevent类" tabindex="-1"><a class="header-anchor" href="#qevent类" aria-hidden="true">#</a> QEvent类</h3><p>QEvent类是所有事件的基类,它在 QtCore 模块中。</p><p>外界输人给序的信息首先交给QEvent 进行分类,得到不同类型的事件,然后系统将事件及相关信息交给控件或窗口的事件处理函数进行处理,得到对外界输人的响应QEvent 类的属性只有 accepted。</p><p>常用方法如表所示,主要方法介绍如下:</p><table><thead><tr><th>QEvent的方法及参数类型</th><th>返回值的类型</th><th>说明</th></tr></thead><tbody><tr><td>accept()</td><td>None</td><td>事件被接受</td></tr><tr><td>ignore()</td><td>None</td><td>事件被拒绝</td></tr><tr><td>isAccepted()</td><td>bool</td><td>事件是否被接受</td></tr><tr><td>setAccepted(accepted: bool)</td><td>None</td><td>设置事件是否被接受</td></tr><tr><td>clone()</td><td>QEvent</td><td>重写该函数,返回事件的复本</td></tr><tr><td>isPointerEvent()</td><td>bool</td><td>是QPointerEvent 事件时返回True</td></tr><tr><td>isSinglePointEvent()</td><td>bool</td><td>是 QSinglePointEvent事件时返回True</td></tr><tr><td>spontaneous()</td><td>bool</td><td>获取事件是否立即被处理</td></tr><tr><td>type()</td><td>QEvent.Type</td><td>获取事件的类型</td></tr><tr><td>[static]registerEventType(hint: int=—1)</td><td>int</td><td>注册新的事件类型</td></tr></tbody></table><blockquote><ul><li>用accept()或 setAccepted(True)方法接受一个事件</li><li>用ignore()或 setAccepted(False)方法拒绝一个事件。</li><li>被接受的事件不会再传递给其他对象;被拒绝的事件会传递给其他对象处理,如果没有对象处理,则该事件会被丢弃。</li></ul></blockquote><blockquote><ul><li>如果事件被QWidget的event()函数进行了处理则用spontaneous()方法的返回值是True,否则返回值是False。</li><li>event()函数根据事件类型起到分发事件到指定处理函数的作用,可以在event()函数中对事件进行处理 <ul><li>用registerEventType(hint:int=-1)方法可以注册一个新事件类型其中hint的取值介于QEventUser(1000)和 QEvent.MaxUser(65535)之间,返回新事件的D号。</li></ul></li></ul></blockquote><p>用type()方法可以返回事件的类型。QEvent中定义了事件的类型,QEent定义的主要事件类型如表所示:</p><table><thead><tr><th>事件类型常量(QEvent.Type)</th><th>值</th><th>所属事件类</th><th>说明</th></tr></thead><tbody><tr><td>QEvent.None</td><td>0</td><td>-</td><td>不是一个事件</td></tr><tr><td>QEvent.ActivationChange</td><td>99</td><td>-</td><td>顶层窗口激活状态发生变化</td></tr><tr><td>QEvent.ApplicationFontChange</td><td>36</td><td>-</td><td>程序的默认字体发生变化</td></tr><tr><td>QEvent.ApplicationPaletteChange</td><td>38</td><td>-</td><td>程序的默认调色板发生变化</td></tr><tr><td>QEvent.ApplicationStateChange</td><td>214</td><td>-</td><td>应用程序的状态发生变化</td></tr><tr><td>QEvent.ApplicationWindowIconChange</td><td>35</td><td>-</td><td>应用程序的图标发生变化</td></tr><tr><td>QEvent.Clipboard</td><td>40</td><td>-</td><td>剪贴板的内容发生改变</td></tr><tr><td>QEvent.ContentsRectChange</td><td>178</td><td>-</td><td>控件内容区外边距发生改变</td></tr><tr><td>QEvent.CursorChange</td><td>183</td><td>-</td><td>控件的鼠标指针发生改变</td></tr><tr><td>QEvent.DynamicPropertyChange</td><td>170</td><td>-</td><td>动态属性已添加、更改或删除</td></tr><tr><td>QEvent.EnabledChange</td><td>98</td><td>-</td><td>控件的enabled状态已更改</td></tr><tr><td>QEvent.EnterEditFocus</td><td>150</td><td>-</td><td>编辑控件获得焦点进行编辑</td></tr><tr><td>QEvent.FontChange</td><td>97</td><td>-</td><td>控件的字体发生改变</td></tr><tr><td>QEvent.GrabKeyboard</td><td>188</td><td>-</td><td>item获得键盘抓取(仅限QGraphicsItem)</td></tr><tr><td>QEvent.GrabMouse</td><td>186</td><td>-</td><td>item获得鼠标抓取(仅限QGraphicsItem)</td></tr><tr><td>QEvent.KeyboardLayoutChange</td><td>169</td><td>-</td><td>键盘布局已更改</td></tr><tr><td>QEvent.LanguageChange</td><td>89</td><td>-</td><td>应用程序翻译发生改变</td></tr><tr><td>QEvent.LayoutDirectionChange</td><td>90</td><td>-</td><td>布局的方向发生改变</td></tr><tr><td>QEvent.LayoutRequest</td><td>76</td><td>-</td><td>控件的布局需要重做</td></tr><tr><td>QEvent.Leave</td><td>11</td><td>-</td><td>光标离开控件的边界</td></tr><tr><td>QEvent.LeaveWhatsThisMode</td><td>125</td><td>-</td><td>程序离开&quot;What&#39;sThis?&quot;模式</td></tr><tr><td>QEvent.LLeaveEditFocus</td><td>151</td><td>-</td><td>编辑控件失去编辑的焦点</td></tr><tr><td>QEvent.LocaleChange</td><td>88</td><td>-</td><td>系统区域设置发生改变</td></tr><tr><td>QEvent.ModifiedChange</td><td>102</td><td>-</td><td>控件修改状态发生改变</td></tr><tr><td>QEvent.MouseTrackingChange</td><td>109</td><td>-</td><td>鼠标跟踪状态发生改变</td></tr><tr><td>QEvent.NonClientAreaMouseMove</td><td>173</td><td>-</td><td>光标移动发生在客户区域外</td></tr><tr><td>QEvent.PaletteChange</td><td>39</td><td>-</td><td>控件的调色板发生改变</td></tr><tr><td>QEvent.ParentAboutToChange</td><td>131</td><td>-</td><td>控件的parent将要更改</td></tr><tr><td>QEvent.ParentChange</td><td>21</td><td>-</td><td>控件的parent发生改变</td></tr><tr><td>QEvent.PlatformPanel</td><td>212</td><td>-</td><td>请求-个特定于平台的面板</td></tr><tr><td>QEvent.Polish</td><td>75</td><td>-</td><td>控件被抛光</td></tr><tr><td>QEvent.PolishRequest</td><td>74</td><td>-</td><td>控件应该被抛光</td></tr><tr><td>QEvent.ReadOnlyChange</td><td>106</td><td>-</td><td>控件的read-only状态发生改变</td></tr><tr><td>QEvent.ShowToParent</td><td>26</td><td>-</td><td>子控件被显示</td></tr><tr><td>QEvent.StyleChange</td><td>100</td><td>-</td><td>控件的样式发生改变</td></tr><tr><td>QEvent.ToolTipChange</td><td>184</td><td>-</td><td>控件的tooltip发生改变</td></tr><tr><td>QEvent.UngrabMouse</td><td>187</td><td>-</td><td>Item失去鼠标抓取(QGraphicsItemQQuickItem)</td></tr><tr><td>QEvent.UpdateRequest</td><td>77</td><td>-</td><td>控件应该被重绘</td></tr><tr><td>QEvent.WhatsThisClicked</td><td>118</td><td>-</td><td>&quot;What&#39;sThis&quot;帮助链接被单击</td></tr><tr><td>QEvent.WindowActivate</td><td>24</td><td>-</td><td>窗口已激活</td></tr><tr><td>QEvent.WindowBlocked</td><td>103</td><td>-</td><td>窗口被模式对话框阻塞</td></tr><tr><td>QEvent.WindowDeactivate</td><td>25</td><td>-</td><td>窗户被停用</td></tr><tr><td>QEvent.WindowIconChange</td><td>34</td><td>-</td><td>窗口的图标发生改变</td></tr><tr><td>QEvent.WindowTitleChange</td><td>33</td><td>-</td><td>窗口的标题发生改变.</td></tr><tr><td>QEvent.ActionAdded</td><td>114</td><td>QActionEvent</td><td>一个新QAction被添加</td></tr><tr><td>QEvent.ActionChanged</td><td>113</td><td>QActionEvent</td><td>一个QAction被改变</td></tr><tr><td>QEvent.ActionRemoved</td><td>115</td><td>QActionEvent</td><td>一个QAction被移除</td></tr><tr><td>QEvent.ChildAdded</td><td>68</td><td>QChildEvent</td><td>一个对象获得孩子</td></tr><tr><td>QEvent.ChildPolished</td><td>69</td><td>QChildEvent</td><td>一个控件的孩子被抛光</td></tr><tr><td>QEvent.ChildRemoved</td><td>71</td><td>QChildEvent</td><td>一个对象失去孩子</td></tr><tr><td>QEvent.Close</td><td>19</td><td>QCloseEvent</td><td>Widget被关闭</td></tr><tr><td>QEvent.ContextMenu</td><td>82</td><td>QContextMenuEvent</td><td>上下文弹出菜单</td></tr><tr><td>QEvent.DeferredDelete</td><td>52</td><td>QDeferredDeleteEvent</td><td>对象被清除后将被删除</td></tr><tr><td>QEvent.DragEnter</td><td>60</td><td>QDragEnterEvent</td><td>拖放操作时光标进入控件</td></tr><tr><td>QEvent.DragLeave</td><td>62</td><td>QDragLeaveEvent</td><td>拖放操作时光标离开控件</td></tr><tr><td>QEvent.DragMove</td><td>61</td><td>QDragMoveEvent</td><td>拖放操作正在进行</td></tr><tr><td>QEvent.Drop</td><td>63</td><td>QDropEvent</td><td>拖放操作完成</td></tr><tr><td>QEvent.Enter</td><td>10</td><td>QEnterEvent</td><td>光标进人控件的边界</td></tr><tr><td>QEvent.FileOpen</td><td>116</td><td>QFileOpenEvent</td><td>文件打开请求</td></tr><tr><td>QEvent.FocusIn</td><td>8</td><td>QFocusEvent</td><td>控件或窗口获得键盘焦点</td></tr><tr><td>QEvent.FocusOut</td><td>9</td><td>QFocusEvent</td><td>控件或窗口失去键盘焦点</td></tr><tr><td>QEvent.FocusAboutToChange</td><td>23</td><td>QFocusEvent</td><td>控件或窗口焦点即将改变</td></tr><tr><td>QEvent.Gesture</td><td>198</td><td>QGestureEvent</td><td>触发了-个手势</td></tr><tr><td>QEvent.GestureOverride</td><td>202</td><td>QGestureEvent</td><td>触发了手势覆盖</td></tr><tr><td>QEvent.UngrabKeyboard</td><td>189</td><td>QGraphicsItem</td><td>Item失去键盘抓取</td></tr><tr><td>QEvent.GraphicsSceneContextMenu</td><td>159</td><td>QGraphicsSceneConte-xtMenuEvent</td><td>在图形场景上弹出右键菜单</td></tr><tr><td>QEvent.GraphicsSceneDragLeave</td><td>166</td><td>QGraphicsSceneDrag-DropEvent</td><td>拖放操作时光标离开场景</td></tr><tr><td>QEvent.GraphicsSceneDragMove</td><td>165</td><td>QGraphicsSceneDrag-DropEvent</td><td>在场景上正在进行拖放操作</td></tr><tr><td>QEvent.GraphicsSceneDrop</td><td>167</td><td>QGraphicsSceneDrag-DropEvent</td><td>在场景上完成拖放操作</td></tr><tr><td>QEvent.GraphicsSceneDragEnter</td><td>164</td><td>QGraphicsScene-DragDropEvent</td><td>拖放操作时光标进入场景</td></tr><tr><td>QEvent.GraphicsSceneHoverEnter</td><td>160</td><td>QGraphicsSceneHoverEvent</td><td>光标进入图形场景中的悬停项</td></tr><tr><td>QEvent.GraphicsSceneHoverLeave</td><td>162</td><td>QGraphicsSceneHover-Event</td><td>光标离开图形场景-个悬停项</td></tr><tr><td>QEvent.GraphicsSceneHoverMove</td><td>161</td><td>QGraphicsSceneHover-Event</td><td>光标在场景的悬停项内移动</td></tr><tr><td>QEvent.GraphicsSceneMouseDoubleClick</td><td>158</td><td>QGraphicsSceneMouseEvent</td><td>光标在图形场景中双击</td></tr><tr><td>QEvent.GraphicsSceneMouseMove</td><td>155</td><td>QGraphicsSceneMouseEvent</td><td>光标在图形场景中移动</td></tr><tr><td>QEvent.GraphicsSceneMousePress</td><td>156</td><td>QGraphicsSceneMouse-Event</td><td>光标在图形场景中按下</td></tr><tr><td>QEventGraphicsSceneMouseRelease</td><td>157</td><td>QGraphicsSceneMouse-Event</td><td>光标在图形场景中释放</td></tr><tr><td>QEvent.GraphicsSceneMove</td><td>182</td><td>QGraphicsSceneMove-Event</td><td>控件被移动</td></tr><tr><td>QEvent.GraphicsSceneResize</td><td>181</td><td>QGraphicsSceneResize-Event</td><td>控件已调整大小</td></tr><tr><td>QEvent.GraphicsSceneWheel</td><td>168</td><td>QGraphicsSceneWheel-Event</td><td>鼠标滚轮在图形场景中滚动</td></tr><tr><td>QEvent.GraphicsSceneHelp</td><td>163</td><td>QHelpEvent</td><td>用户请求图形场景的帮助</td></tr><tr><td>QEvent.ToolTip</td><td>110</td><td>QHelpEvent</td><td>#NAME?</td></tr><tr><td>QEvent.WhatsThis</td><td>111</td><td>QHelpEvent</td><td>控件显示&quot;What&#39;sThis&quot;帮助</td></tr><tr><td>QEvent.Hide</td><td>18</td><td>QHideEvent</td><td>控件被隐藏</td></tr><tr><td>QEvent.HideToParent</td><td>27</td><td>QHideEvent</td><td>子控件被隐藏</td></tr><tr><td>QEvent.HoverEnter</td><td>127</td><td>QHoverEvent</td><td>光标进入悬停控件</td></tr><tr><td>QEvent.HoverLeave</td><td>128</td><td>QHoverEvent</td><td>光标离开悬停控件</td></tr><tr><td>QEvent.HoverMove</td><td>129</td><td>QHoverEvent</td><td>光标在悬停控件内移动</td></tr><tr><td>QEvent.IconDrag</td><td>96</td><td>QIconDragEvent</td><td>窗口的主图标被拖走</td></tr><tr><td>QEvent.InputMethod</td><td>83</td><td>QInputMethodEvent</td><td>正在使用输人法</td></tr><tr><td>QEvent.InputMethodQuery</td><td>207</td><td>QInputMethodQuery-Event</td><td>输人法查询事件</td></tr><tr><td>QEvent.KeyPress</td><td>6</td><td>QKeyEvent</td><td>键盘按下</td></tr><tr><td>QEvent.KeyRelease</td><td>7</td><td>QKeyEvent</td><td>键盘释放</td></tr><tr><td>QEvent.ShortcutOverride</td><td>51</td><td>QKeyEvent</td><td>按下按键.用于覆盖快捷键</td></tr><tr><td>QEvent.MouseButtonDblClick</td><td>4</td><td>QMouseEvent</td><td>鼠标再次按下</td></tr><tr><td>QEvent.MouseButtonPress</td><td>2</td><td>QMouseEvent</td><td>鼠标按下</td></tr><tr><td>QEvent.MouseButtonRelease</td><td>3</td><td>QMouseEvent</td><td>鼠标释放</td></tr><tr><td>QEvent.MouseMove</td><td>5</td><td>QMouseEvent</td><td>鼠标移动</td></tr><tr><td>QEvent.Move</td><td>13</td><td>QMoveEvent</td><td>控件的位置发生改变</td></tr><tr><td>QEvent.NativeGesture</td><td>197</td><td>QNativeGestureEvent</td><td>系统检测到手势</td></tr><tr><td>QEvent.Paint</td><td>12</td><td>QPaintEvent</td><td>需要屏幕更新</td></tr><tr><td>QEvent.Resize</td><td>14</td><td>QResizeEvent</td><td>控件的大小发生改变</td></tr><tr><td>QEvent.Scroll</td><td>205</td><td>QScrollEvent</td><td>对象需要滚动到提供的位置</td></tr><tr><td>QEvent.ScrollPrepare</td><td>204</td><td>QScrollPrepareEvent</td><td>对象需要填充它的几何信息</td></tr><tr><td>QEvent.Shortcut</td><td>117</td><td>QShortcutEvent</td><td>快捷键处理</td></tr><tr><td>QEvent.Show</td><td>17</td><td>QShowEvent</td><td>控件显示在屏幕上</td></tr><tr><td>QEvent.StatusTip</td><td>112</td><td>QStatusTipEvent</td><td>状态提示请求</td></tr><tr><td>QEvent.TabletMove</td><td>87</td><td>QTabletEvent</td><td>Wacom写字板移动</td></tr><tr><td>QEvent.TabletPress</td><td>92</td><td>QTabletEvent</td><td>Wacom写字板按下</td></tr><tr><td>QEvent.TabletRelease</td><td>93</td><td>QTabletEvent</td><td>Wacom写字板释放</td></tr><tr><td>QEvent.Timer</td><td>1</td><td>QTimerEvent</td><td>定时器事件</td></tr><tr><td>QEvent.TouchBegin</td><td>194</td><td>QTouchEvent</td><td>触摸屏或轨迹板序列的开始</td></tr><tr><td>QEvent.TouchCancel</td><td>209</td><td>QTouchEvent</td><td>取消触摸事件序列</td></tr><tr><td>QEvent.TouchEnd</td><td>196</td><td>QTouchEvent</td><td>触摸事件序列结束</td></tr><tr><td>QEvent.TouchUpdate</td><td>195</td><td>QTouchEvent</td><td>触摸屏事件</td></tr><tr><td>QEvent.Wheel</td><td>31</td><td>QWheelEvent</td><td>鼠标滚轮滚动</td></tr><tr><td>QEvent.WindowStateChange</td><td>105</td><td>QWindowStateChangeEvent</td><td>窗口的状态(最小化、最大化或全屏)发生改变</td></tr></tbody></table><h3 id="event-函数" tabindex="-1"><a class="header-anchor" href="#event-函数" aria-hidden="true">#</a> event()函数</h3><p>当GUI应用程序捕捉到事件发生后,会首先将其发送到 QWidget 或子类的event(QEvent)函数中进行数据处理,如果没有重写event()函数进行事件处,理事件将会分发到事件默认的处理函数中,因此event()函数是事件的集散地。</p><p>如果重写了 event()函数当event()函数的返回值是True 时,表示事件已经处理完毕事件不会再发送给其他处理函数;当event()函数的返回值是 False时,表示事件还没有处理完毕。event()函数可以截获某些类型的事件,并处理事件</p><p>下面的程序是将上节中的例子做了改动将鼠标的单击事件放到event()函数中进行处理,只截获QEvent.MouseButtonPress事件,通过 super()函数调用父类的 event()函数其他类型的事件仍交由QWidget 的event()函数处理和分发。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: UTF-8 -*-</span>
<span class="token comment"># File date: Hi_2023/3/1 21:18</span>
<span class="token comment"># File_name: 02-event()函数.py</span>
<span class="token keyword">import</span> sys
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> QApplication<span class="token punctuation">,</span> QWidget<span class="token punctuation">,</span> QLineEdit
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> QEvent<span class="token punctuation">,</span> Qt


<span class="token keyword">class</span> <span class="token class-name">MyWindow</span><span class="token punctuation">(</span>QWidget<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>parent<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>lineEdit <span class="token operator">=</span> QLineEdit<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>lineEdit<span class="token punctuation">.</span>setGeometry<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">event</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> even<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 重写event函数</span>
        <span class="token keyword">if</span> even<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> QEvent<span class="token punctuation">.</span>MouseButtonPress<span class="token punctuation">:</span>  <span class="token comment"># 按键的情况</span>
            template1 <span class="token operator">=</span> <span class="token string">&quot;单击点的窗口坐标是x:{} y:{}&quot;</span>
            template2 <span class="token operator">=</span> <span class="token string">&quot;单击点的屏幕坐标是x:{} y:{}&quot;</span>

            <span class="token keyword">if</span> even<span class="token punctuation">.</span>button<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> Qt<span class="token punctuation">.</span>LeftButton<span class="token punctuation">:</span>  <span class="token comment"># button()获取键或右键</span>
                string <span class="token operator">=</span> template1<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>even<span class="token punctuation">.</span>position<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>x<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> even<span class="token punctuation">.</span>position<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>y<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># x()和()获取窗口坐标</span>
                self<span class="token punctuation">.</span>lineEdit<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>string<span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token boolean">True</span>

            <span class="token keyword">elif</span> even<span class="token punctuation">.</span>button<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> Qt<span class="token punctuation">.</span>RightButton<span class="token punctuation">:</span>  <span class="token comment"># globalX()和globalY()获取全局坐标</span>
                string <span class="token operator">=</span> template2<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>even<span class="token punctuation">.</span>globalPosition<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>x<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> even<span class="token punctuation">.</span>globalPosition<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>y<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                self<span class="token punctuation">.</span>lineEdit<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>string<span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token boolean">True</span>

            <span class="token keyword">else</span><span class="token punctuation">:</span>  <span class="token comment"># 按中键的情况</span>
                <span class="token keyword">return</span> <span class="token boolean">True</span>

        <span class="token keyword">else</span><span class="token punctuation">:</span>  <span class="token comment"># 对于不是按鼠标键的事件,交给 owidget 来处理</span>
            finished <span class="token operator">=</span> <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>event<span class="token punctuation">(</span>even<span class="token punctuation">)</span>  <span class="token comment"># super()函数调用父类丽数</span>
            <span class="token keyword">return</span> finished


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
    win <span class="token operator">=</span> MyWindow<span class="token punctuation">(</span><span class="token punctuation">)</span>

    win<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="常用事件的处理函数" tabindex="-1"><a class="header-anchor" href="#常用事件的处理函数" aria-hidden="true">#</a> 常用事件的处理函数</h3><p>窗口或控件中用于常用事件的处理函数及参数类型如表所示,传递的参数是对应类的实例对象,参数所代表的类的使用方法在后续内容中进行介绍</p><table><thead><tr><th>常用事件的处理函数及参数类型</th><th>说 明</th></tr></thead><tbody><tr><td>actionEvent(QActionEvent)</td><td>当增加、插人、删除QAction时调用该函数</td></tr><tr><td>changeEvent(QEvent)</td><td>状态发生改变时调用该函数,事件类型包括:<br>QEvent.ToolBarChange、QEvent.ActivationChange、QEvent.EnabledChange、 QEvent.FontChange、QEvent.StyleChange、QEvent.PaletteChange、 QEvent.WindowTitleChange、QEvent.IconTextChange、QEvent.ModifiedChange、QEvent.MouseTrackingChange、QEvent.ParentChange、 QEvent.WindowStateChange、QEvent.LanguageChange、QEvent.LocaleChange、QEvent.LayoutDirectionChange、QEvent.ReadOnlyChange</td></tr><tr><td>childEvent(QChildEvent)</td><td>容器控件中添加或移除控件时调用该函数</td></tr><tr><td>closeEvent(QCloseEvent)</td><td>关闭窗口时调用该函数</td></tr><tr><td>contextMenuEvent(QContextMenuEvent)</td><td>当窗口或控件的contextMenuPolicy 属性值是 Qt.DefaultContextMenu,单击右键弹出右键菜单时调用该函数</td></tr><tr><td>dragEnterEvent(QDragEnterEvent)</td><td>用鼠标拖拽物体进入窗口或控件时调用该函数</td></tr><tr><td>dragLeaveEvent(QDragLeaveEvent)</td><td>用鼠标拖拽物体离开窗口或控件时调用该函数</td></tr><tr><td>dragMoveEvent(QDragMoveEvent)</td><td>用鼠标拖拽物体在窗口或控件中移动时调用该函数</td></tr><tr><td>dropEvent(QDropEvent)</td><td>用鼠标拖拽物体在窗口或控件中释放时调用该函数</td></tr><tr><td>enterEvent(QEnterEvent)</td><td>光标进人窗口或控件时调用该函数</td></tr><tr><td>focusInEvent(QFocusEvent)</td><td>用键盘使窗口或控件获得焦点时调用该函数</td></tr><tr><td>focusOutEvent(QFocusEvent)</td><td>用键盘使窗口或控件失去焦点时调用该函数</td></tr><tr><td>hideEvent(QHideEvent)</td><td>隐藏或最小化窗口时调用该函数</td></tr><tr><td>inputMethodEvent(QInputMethodEvent)</td><td>输人方法的状态发生改变时调用该数</td></tr><tr><td>keyPressEvent(QKeyEvent)</td><td>按下键盘的按键时调用该函数</td></tr><tr><td>keyReleaseEvent(QKeyEvent)</td><td>释放键盘的按键时调用该函数</td></tr><tr><td>leaveEvent(QEvent)</td><td>光标离开窗口或控件时调用该函数</td></tr><tr><td>mouseDoubleClickEvent(QMouseEvent)</td><td>双击鼠标时调用该函数</td></tr><tr><td>mouseMoveEvent(QMouseEvent)</td><td>光标在窗口或控件中移动时调用该函数</td></tr><tr><td>mousePressEvent(QMouseEvent)</td><td>按下鼠标的按键时调用该函数</td></tr><tr><td>mouseReleaseEvent(QMouseEvent)</td><td>释放鼠标的按键时调用该函数</td></tr><tr><td>moveEvent(QMoveEvent)</td><td>移动窗口或控件时调用该函数</td></tr><tr><td>paintEvent(QPaintEvent)</td><td>控件或窗口需要重新绘制时调用该函数</td></tr><tr><td>resizeEvent(QResizeEvent)</td><td>窗口或控件的尺寸(长度或宽度)发生改变时调用该函数</td></tr><tr><td>showEvent(QShowEvent)</td><td>显示窗口或从最小化恢复到原窗口状态时调用该函数 .</td></tr><tr><td>tabletEvent(QTabletEvent)</td><td>平板电脑处理事件</td></tr><tr><td>timerEvent(QTimerEvent)</td><td>用窗口或控件的 startTimer(interval: int, timerType:Qt.CoarseTimer)方法启动一个定时器时调用该函数</td></tr><tr><td>wheelEvent(QWheelEvent)</td><td>转动鼠标的滚轮时调用该函数</td></tr></tbody></table><p>每个窗口或控件的功能是不同的,因此窗口和控件的事件也不同,用于处理事件的函数也不同。</p><p>下面介绍的窗口或常用控件的事件处理函数如表所示。要调用窗口或控件的事件处理函数,需要继承窗口类或控件类创建其子类,在子类中重写事件处理函数。</p><table><thead><tr><th>窗口或控件</th><th>窗口或控件的事件处理函数</th></tr></thead><tbody><tr><td>QWidget</td><td>actionEvent()<br>changeEvent()<br>closeEvent()<br>contextMenuEvent()<br>dragEnterEvent()<br>dragLeaveEvent()<br>dragMoveEvent()<br>dropEvent()<br>enterEvent()<br>focusInEvent()<br>focusOutEvent()<br>hideEvent()<br>inputMethodEvent()<br>keyPressEvent()<br>leaveEvent()<br>keyReleaseEvent()<br>mouseDoubleClickEvent()<br>mouseMoveEvent()<br>showEvent()<br>mousePressEvent()<br>mouseReleaseEvent()<br>moveEvent()<br>paintEvent()<br>event()resizeEvent()<br>tabletEvent()<br>wheelEvent()</td></tr><tr><td>QMainWindo</td><td>contextMenuEvent()<br>event()</td></tr><tr><td>QDialog</td><td>showEvent()<br>closeEvent()<br>contextMenuEvent()<br>eventFilter()<br>keyPressEvent()<br>resizeEvent()</td></tr><tr><td>QLabel</td><td>changeEvent()<br>contextMenuEvent()<br>event()<br>focusInEvent()<br>focusutEvent()<br>keyPressEyent()<br>mouseMoveEvent()<br>mousePressEvent()<br>mouseReleaseEvent()<br>paintEyent()</td></tr><tr><td>QLineEdit</td><td>changeEvent()<br>contextMenuEvent()<br>dragEnterEvent()<br>dragleaveEvent()<br>dragMoveEvent()<br>dropEvent()<br>focusInEvent()<br>focusutEvent()<br>paintEvent()<br>inputMethodEvent()<br>keyPressEvent()<br>keyReleaseEvent()<br>mouseMoveEvent()<br>mouseDoubleClickEvent()<br>mousePressEvent()<br>rouseReleaseEvent()</td></tr><tr><td>QTextEdit</td><td>changeEvent()<br>contextMenuEvent()<br>dragEnterEvent()<br>dragLeaveEvent()<br>dragMoveEvent()<br>dropEvent()<br>focusInEvent()<br>focusCutEvent()<br>showEvent()<br>inputMethodEvent()<br>keyPressEvent()<br>keyReleaseEvent()<br>resizeEvent()<br>mouseDoubleClickEvent()<br>mouseMoyeEvent()<br>mousePressEvent()<br>paintEvent()<br>mouseReleaseEvent()<br>wheelEvent()</td></tr><tr><td>QPlainTextEdit</td><td>changeEvent()<br>contextMenuEvent()<br>dragEnterEvent()<br>dragLeaveEvent()<br>dragMoveEvent()<br>dropEvent()<br>focusInEvent()<br>focusOutEvent()<br>paintEvent()<br>inputMethodEvent()<br>keyPressEvent()<br>keyReleaseEvent()<br>resizeEvent()<br>mouseDoubleClickEvent()<br>mouseMoveEvent()<br>mousePressEvent()<br>showEvent()<br>mouseReleaseEvent()<br>wheelEvent()</td></tr><tr><td>QTextBrowser</td><td>event()<br>focusOutEvent()<br>keyPressEvent()<br>mouseMoveEvent()<br>paintEvent()<br>mousePressEvent()<br>mouseReleaseEvent()</td></tr><tr><td>QComboBox</td><td>changeEvent()<br>contextMenuEvent()<br>focusInEvent()<br>focusOutEvent()<br>hideEvent()<br>inputMethodEvent()<br>keyPressEvent()<br>keyReleaseEvent()<br>musePressEvent()<br>mouseReleaseEvent()<br>paintEvent()<br>resizeEvent()<br>showEvent()<br>wheelEvent()</td></tr><tr><td>QScrollBar</td><td>event()<br>contextMenuEvent()<br>hideEvent()<br>mouseMoveEvent()<br>paintEvent()<br>mousePressEvent()<br>mouseReleaseEvent()<br>wheelEvent()</td></tr><tr><td>QSlider</td><td>event()<br>mouseMoveEvent()<br>mousePressEvent()<br>mouseReleaseEvent()<br>paintEvent()</td></tr><tr><td>QDial</td><td>event()<br>mouseMoveEvent()<br>mousePressEvent()<br>mouseReleaseEvent()<br>paintEvent()<br>resizeEvent()</td></tr><tr><td>QProgressBar</td><td>event()<br>paintEvent()</td></tr><tr><td>QPushButton</td><td>event()<br>focusInEvent()<br>focusOutEvent()<br>keyPressEvent()<br>mouseMoveEvent()<br>paintEvent()</td></tr><tr><td>QCheckBox</td><td>event()<br>mouseMoveEvent()<br>paintEvent()</td></tr><tr><td>QRadioButton</td><td>event()<br>mouseMoveEvent()<br>paintEvent()</td></tr><tr><td>OCalendarWidget</td><td>event()<br>eventFilter(t)<br>keyPressEvent()<br>mousePressEvent()<br>resizeEvent()</td></tr><tr><td>QLCDNumber</td><td>event()<br>paintEvent()</td></tr><tr><td>QDateTimeEdit</td><td>focusInEvent()<br>keyPressEvent()<br>mousePressEvent()<br>paintEvent()<br>wheelEvent()</td></tr><tr><td>QGroupBox</td><td>changeEvent()<br>childEvent(QChildEvent)<br>event()<br>focusInEvent()<br>resizeEvent()<br>mouseMoveEvent()<br>mousePressEvent()<br>mouseReleaseEvent()<br>paintEvent()</td></tr><tr><td>QFrame</td><td>changeEvent()<br>event()<br>paintEvent()</td></tr><tr><td>QScrollArea</td><td>event()<br>eventFilter(QObject,<br>QEvent)<br>resizeEvent()</td></tr><tr><td>QTabWidget</td><td>changeEvent()<br>event()<br>keyPressEvent()<br>paintEvent()<br>resizeEvent()<br>showEvent()</td></tr><tr><td>QToolBox</td><td>changeEvent()<br>closeEvent()<br>event()<br>paintEvent()</td></tr><tr><td>QSplitter</td><td>childEvent(QChildEvent)<br>event()<br>eventFilter()<br>paintEvent()<br>resizeEvent()<br>showEvent()<br>timerEvent()<br>viewportEvent()</td></tr><tr><td>QWebEngineView</td><td>closeEvent()<br>contextMenuEvent()<br>dragEnterEvent()<br>dragLeaveEvent()<br>dragMoveEvent()<br>dropEvent()<br>event()<br>hideEvent()<br>showEvent()</td></tr><tr><td>QDockWidget</td><td>changeEvent()<br>closeEvent()<br>event()<br>paintEvent()</td></tr><tr><td>QMdiArea</td><td>childEvent(QChildEvent)<br>event()<br>eventFilter()<br>paintEvent()<br>resizeEvent()<br>showEvent()<br>timerEvent()<br>viewportEvent()</td></tr><tr><td>QMdiSubWindow</td><td>changeEvent()<br>childEvent(QChildEvent)<br>closeEvent()<br>contextMenuEvent()<br>event()<br>eventFilter()<br>focusInEvent()<br>focusOutEvent()<br>hideEvent()<br>timerEvent()<br>keyPressEvent()<br>leaveEvent()<br>mouseDoubleClickEvent()<br>mouseMoveEvent()<br>mousePressEvent()<br>mouseReleaseEvent()<br>moveEvent()<br>paintEvent()<br>resizeEvent()showEvent()</td></tr><tr><td>QToolButton</td><td>actionEvent()<br>changeEvent()<br>enterEvent()<br>event()<br>leaveEvent()<br>timerEvent()<br>mousePressEvent()<br>mouseReleaseEvent()<br>paintEvent()</td></tr><tr><td>QToolBar</td><td>actionEvent()<br>changeEvent()<br>event()<br>paintEvent()</td></tr><tr><td>QMenuBar</td><td>actionEvent()<br>changeEvent()<br>event()<br>eventFilter()<br>focusnEvent()<br>leaveEvent()<br>focusOutEvent()<br>keyPressEvent()<br>nouseMoveEvent()<br>mousePressEvent()<br>mouseReleaseEvent()<br>paintEvent()<br>resizeEvent()<br>timerEvent(QTimerEvent)</td></tr><tr><td>QStatusBar</td><td>event()<br>paintEvent()<br>resizeEvent()<br>showEvent()</td></tr><tr><td>QTabBar</td><td>changeEvent()event()<br>hideEvent()<br>keyPressEvent()<br>mouseDoubleClickEvent()<br>mouseMoveEvent()<br>mousePressEyent()<br>ouseReleaseEvent()<br>paintEyent()<br>resizeEvent()<br>showEvent()<br>timerEyent(QTimerEvent)<br>wheelEvent()</td></tr><tr><td>QListWidget</td><td>dropEvent()<br>event()</td></tr><tr><td>QTableWidget</td><td>dropEvent()<br>event()</td></tr><tr><td>QTreeWidget</td><td>dropEvent()<br>event()</td></tr><tr><td>QListView</td><td>dragLeaveEvent()<br>dragMoveEvent()<br>dropEvent()<br>event()<br>mouseMoveEvent()<br>mouseReleaseEvent()<br>paintEvent()<br>resizeEvent()<br>timerEvent(QTimerEvent)<br>wheelEvent()</td></tr><tr><td>QTreeView</td><td>changeEvent()<br>dragMoveEvent()<br>keyPressEvent()<br>mouseDoubleClickEvent()<br>mouseMoveEvent()<br>mousePressEvent()<br>mouseReleaseEvent()<br>paintEvent()<br>timerEvent(QTimerEvent)<br>viewportEvent()</td></tr><tr><td>QTableView</td><td>paintEyent()<br>timerEvent(QTimerEvent)</td></tr><tr><td>QVideoWidget</td><td>event()<br>hideEvent()<br>moveEvent()<br>resizeEvent()<br>showEvent()</td></tr><tr><td>QGraphicsView</td><td>contextMenuEvent()<br>dragEnterEvent()<br>dragLeaveEvent()<br>ragMoveEvent()<br>dropEvent()<br>event()<br>focusInEvent()<br>focusOutEvent()<br>inputMethodEvent()<br>keyPressEvent()<br>keyReleaseEvent()<br>mouseDoubleClickEvent()<br>paintEvent()<br>mouseMoveEyent()<br>mousePressEyent()<br>mouseReleaseEvent()<br>resizeEvent()<br>showEvent()<br>viewportEvent()<br>wheelEvent()</td></tr><tr><td>QGraphicsScene</td><td>event()<br>focusInEyent()<br>focusOutEvent()<br>keyPressEvent()<br>keyReleaseEvent()<br>eventFilter(QObject,<br>QEvent)<br>inputMethodEvent()<br>helpEvent(QGraphicsSceneHelpEvent)<br>wheelEvent(QGraphicsSceneWheelEvent)<br>contextMenuEvent(QGraphicsSceneContextMenuEvent)<br>dragEnterEyent(QGraphicsSceneragDropEvent)<br>dragleaveEvent(QGraphicsSceneDragDropEvent)<br>dragMoveEvent(QGraphicsSceneDragDropEvent)<br>dropEvent(QGraphicsSceneDragDropEvent)<br>mouseDoubleClickEvent(QCraphicsSceneMouseEvent)<br>mouseMoveEvent(QGraphicsSceneMouseEvent)<br>mousePressEvent(QGraphicsSceneMouseEvent)<br>mouseReleaseEvent(QGraphicsSceneMouseEvent)</td></tr><tr><td>QGraphicsWidget</td><td>changeEyent()<br>closeEvent()<br>hideEvent()<br>showEvent()<br>polishEvent()<br>grabKeyboardEvent(QEvent)<br>grabMouseEvent(QEvent)<br>ungrabKeyboardEventQEvent)<br>ungrabMouseEvent(QEvent)<br>windowFrameEvent(QEvent)<br>moveEventQGraphicsSceneMoveEvent)<br>rasizeEvent(QGraphicsSceneResizeEvent)</td></tr><tr><td>QGraphicsItem</td><td>focusInEvent()<br>focusOutEvent()<br>inputMethodEvent()<br>keyPressEvent()<br>QEvent()<br>keyReleaseEvent()<br>sceneEvent()<br>dropEvent(QGraphicsSceneDragDropEvent)<br>sceneEventFilter(QGraphicsItem,<br>QEvent)<br>wheelEvent(QGraphicsSceneWheelEvent)<br>contextMenuEvent(QGraphicsSceneContextMenuEvent)<br>dragEnterEvent(QGraphicsSceneDragDropEvent)<br>dragLeaveEvent(QGraphicsSceneDragDropEvent)<br>dragMoveEvent(QGraphicsSceneDragDropEvent)<br>hoverEnterEvent(QGraphicsSceneHoverEvent)<br>hoverLeaveEvent(QGraphicsSceneHoverEvent)<br>hoverMoveEvent(QGraphicsSceneHoverEvent)<br>mouseDoubleClickEvent(GraphicsSceneMouseEvent)<br>mouseMoveEvent(QGraphicsSceneMouseEvent)<br>mousePressEvent(QGraphics-SceneMouseEvent)<br>mouseReleaseEvent(QGraphicsSceneMoGseEvent)</td></tr></tbody></table>`,37)]))}const v=n(d,[["render",r],["__file","13事件与事件的处理函数.html.vue"]]);export{v as default};
