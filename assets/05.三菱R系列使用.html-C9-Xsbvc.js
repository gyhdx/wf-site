import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o as t,a as s}from"./app-DBc2jY3V.js";const n="/wf-site/assets/image-20250219111447216-Cw2FLXon.png",g="/wf-site/assets/image-20250217172919905-Nzzx4S2N.png",r="/wf-site/assets/image-20250217172942326-Cr__PQF0.png",o="/wf-site/assets/image-20250217173105416-B40vtuP3.png",p="/wf-site/assets/image-20250217173314415-BNj3iWWS.png",c="/wf-site/assets/image-20250217173132906-CdMLHqEs.png",d="/wf-site/assets/image-20250217173413076-1739784854236-1-DBFJCRCf.png",l="/wf-site/assets/image-20250217173637787-Bayy-nJn.png",f="/wf-site/assets/image-20250218113530764-D_JyFxSk.png",m="/wf-site/assets/image-20250218133429366-Cjd7wnWx.png",h="/wf-site/assets/image-20250217173801415-C5a0uC8w.png",u="/wf-site/assets/image-20250218101806377-JYjYnPTS.png",_="/wf-site/assets/image-20250218104724083-DqAg05yd.png",b="/wf-site/assets/image-20250218102803115-BsUB6If0.png",x="/wf-site/assets/image-20250218110020386-wP9J-vjn.png",y="/wf-site/assets/image-20250218111711581-zujs3TVm.png",z="/wf-site/assets/image-20250218111814117-BXeZdE3R.png",w="/wf-site/assets/image-20250218134223793-D6xY77Q5.png",C="/wf-site/assets/image-20250218134402088-DfHfanHb.png",O="/wf-site/assets/image-20250218134438047-BUfGJGV0.png",B="/wf-site/assets/image-20250218134716016-CHdgWZlK.png",R="/wf-site/assets/image-20250218140930180-Bzf632f6.png",T="/wf-site/assets/image-20250218140948022-Bx42QR_X.png",F="/wf-site/assets/image-20250218140720762-CKmjtTZ_.png",k="/wf-site/assets/image-20250218141629236-CL1qOB0v.png",P="/wf-site/assets/image-20250218144610719-rFkxwOlO.png",E="/wf-site/assets/image-20250218144646084-BLIuib_E.png",I="/wf-site/assets/image-20250218145640065-B0RjeH2D.png",N="/wf-site/assets/image-20250218145944384-Den7VK1K.png",D="/wf-site/assets/image-20250218150102794-Cd7kMUnq.png",M="/wf-site/assets/image-20250218155421588-Driqy0Dy.png",L="/wf-site/assets/image-20250218155455413-5ROWhfk_.png",v="/wf-site/assets/image-20250218155942945-Bk8y-1P-.png",S="/wf-site/assets/image-20250218160002222-DYTLyGYp.png",U="/wf-site/assets/image-20250218160023683-W4AS2dHJ.png",H="/wf-site/assets/image-20250218160048306-CRz3d7Um.png",j="/wf-site/assets/image-20250218172836350--2BET77_.png",G="/wf-site/assets/image-20250218173149921-jlkHYY5J.png",W="/wf-site/assets/image-20250218172717467-BqlsKyjZ.png",J="/wf-site/assets/image-20250218173725789-DLe2Zau4.png",K="/wf-site/assets/image-20250218180355199-Kz4aWzRC.png",V="/wf-site/assets/image-20250219124857900-DnoQMd08.png",Y="/wf-site/assets/image-20250219130821394-DIRRA6Bj.png",q="/wf-site/assets/image-20250219131541655-SNOssb_R.png",A="/wf-site/assets/image-20250219131602941-DRfUx7-l.png",X="/wf-site/assets/image-20250219131625939-CXdqNiGz.png",Z="/wf-site/assets/image-20250219131646279-S1Kj2L42.png",Q="/wf-site/assets/image-20250219131759555-BVnE9CAE.png",$="/wf-site/assets/image-20250219131815873-mu9OlH80.png",ii="/wf-site/assets/image-20250219132128411-Bql_O9Rl.png",ai="/wf-site/assets/image-20250219132211180-BQyUE7NC.png",ei="/wf-site/assets/image-20250219132339703-BTPsO7BJ.png",ti="/wf-site/assets/image-20250219132421320-Bbdo7gRR.png",si="/wf-site/assets/image-20250219140627058-DHEmJK5F.png",ni="/wf-site/assets/image-20250219140946417-2hjXSKlp.png",gi="/wf-site/assets/image-20250219155310844-B_E6X3vC.png",ri="/wf-site/assets/image-20250219134846103-DFxRB1qQ.png",oi="/wf-site/assets/image-20250219154649882-DtXZRWSp.png",pi="/wf-site/assets/image-20250219130947282-BxZcyx9j.png",ci="/wf-site/assets/image-20250219131042190-1739941842982-1-D3I-oLaa.png",di="/wf-site/assets/image-20250219155542105-zITCuUgR.png",li="/wf-site/assets/image-20250219155600859--J9Sm7Zn.png",fi="/wf-site/assets/image-20250219155622683-DGH4LAD_.png",mi="/wf-site/assets/image-20250219155637176-CKWn4gTk.png",hi="/wf-site/assets/image-20250219145837792-CvAkKPll.png",ui="/wf-site/assets/image-20250219145846936-eSzfG4-x.png",_i="/wf-site/assets/image-20250219145858254-BRKbnNZP.png",bi="/wf-site/assets/image-20250219152203955-CWppc0TC.png",xi="/wf-site/assets/image-20250219152220279-Cun6H7Tj.png",yi="/wf-site/assets/image-20250225190141427-C19ShSGj.png",zi="/wf-site/assets/image-20250225190301445-BBUoo4Z3.png",wi="/wf-site/assets/image-20250225190342122-0dGXEOEK.png",Ci="/wf-site/assets/image-20250225190421441-8-hhnU6n.png",Oi="/wf-site/assets/image-20250225190541221-DWEr05Yo.png",Bi="/wf-site/assets/image-20250225191313601-BAT7TDQt.png",Ri="/wf-site/assets/image-20250225191540131-DIeV1NQi.png",Ti="/wf-site/assets/image-20250225191629808-DMVrVI5k.png",Fi="/wf-site/assets/image-20250225191755152-DYriWePT.png",ki="/wf-site/assets/image-20250225191849145-MP8a1OG_.png",Pi="/wf-site/assets/image-20250225191925563-B_Vt3lE9.png",Ei="/wf-site/assets/image-20250225192005636-B2nqRASJ.png",Ii={};function Ni(Di,i){return t(),e("div",null,i[0]||(i[0]=[s('<h2 id="_1-新建工程" tabindex="-1"><a class="header-anchor" href="#_1-新建工程" aria-hidden="true">#</a> 1.新建工程</h2><h3 id="修复fb显示异常的问题" tabindex="-1"><a class="header-anchor" href="#修复fb显示异常的问题" aria-hidden="true">#</a> 修复FB显示异常的问题</h3><figure><img src="'+n+'" alt="image-20250219111447216" tabindex="0" loading="lazy"><figcaption>image-20250219111447216</figcaption></figure><h3 id="新建项目" tabindex="-1"><a class="header-anchor" href="#新建项目" aria-hidden="true">#</a> 新建项目</h3><p>新建项目</p><figure><img src="'+g+'" alt="image-20250217172919905" tabindex="0" loading="lazy"><figcaption>image-20250217172919905</figcaption></figure><figure><img src="'+r+'" alt="image-20250217172942326" tabindex="0" loading="lazy"><figcaption>image-20250217172942326</figcaption></figure><p>添加主机板，移到CPU到基板上，再添加电源，CPU扩展模块，输入模块，输出模块。</p><figure><img src="'+o+'" alt="image-20250217173105416" tabindex="0" loading="lazy"><figcaption>image-20250217173105416</figcaption></figure><p>右键检测电源容量与系统配置。</p><figure><img src="'+p+'" alt="image-20250217173314415" tabindex="0" loading="lazy"><figcaption>image-20250217173314415</figcaption></figure><figure><img src="'+c+'" alt="image-20250217173132906" tabindex="0" loading="lazy"><figcaption>image-20250217173132906</figcaption></figure><p>检测完成，无错误说明电源可以供应所有负载使用。系统无错误。模块添加完成。</p><figure><img src="'+d+'" alt="image-20250217173413076" tabindex="0" loading="lazy"><figcaption>image-20250217173413076</figcaption></figure><p>确定已添加的各个参数。将配置保存到项目。</p><figure><img src="'+l+'" alt="image-20250217173637787" tabindex="0" loading="lazy"><figcaption>image-20250217173637787</figcaption></figure><p>可以模拟测试启动PLC。</p><h3 id="链接实体plc" tabindex="-1"><a class="header-anchor" href="#链接实体plc" aria-hidden="true">#</a> 链接实体PLC</h3><figure><img src="'+f+'" alt="image-20250218113530764" tabindex="0" loading="lazy"><figcaption>image-20250218113530764</figcaption></figure><p>设置通过网线连接PLC读取在线配置</p><figure><img src="'+m+'" alt="image-20250218133429366" tabindex="0" loading="lazy"><figcaption>image-20250218133429366</figcaption></figure><p>当与实际PLC连接以后可以通过读取系统参数的方式快速获取上述配置。</p><h3 id="注意1-编程模式" tabindex="-1"><a class="header-anchor" href="#注意1-编程模式" aria-hidden="true">#</a> 注意1-编程模式</h3><figure><img src="'+h+'" alt="image-20250217173801415" tabindex="0" loading="lazy"><figcaption>image-20250217173801415</figcaption></figure><p>若想再gxwork3中正常编程，必须使此次处在写入模块。</p><h2 id="_2-r系列锁存功能" tabindex="-1"><a class="header-anchor" href="#_2-r系列锁存功能" aria-hidden="true">#</a> 2.R系列锁存功能</h2><p>1.CPU模块的各个软元件的内容将在下列情况下被清理变为默认值。</p><ul><li>cpu模块的电源OFF-&gt;ON时</li><li>复位时</li><li>超过允许瞬停的停电时。</li></ul><p>进行锁存设置的各个元件的内容即使在上述情况下，也能通过CPU本体的电池保存供电，因此在连续控制中进行数据管理时，即使发生CPU模块电源OFF超过允许时间的停电，也可以保存各数据并继续控制。</p><p>要点：</p><p>R00CPU、R01CPU、R02CPU在没有电池的情况下，停电时会对锁存设置的各软元件内容进行保存。</p><p>通过将无电池选项卡安装至CPU模块，这三个CPU以外的CPU在没有电池的情况下，停电会对进行锁存的各软元件内容进行保持</p><h2 id="_3-远程口令" tabindex="-1"><a class="header-anchor" href="#_3-远程口令" aria-hidden="true">#</a> 3.远程口令</h2><figure><img src="'+u+'" alt="image-20250218101806377" tabindex="0" loading="lazy"><figcaption>image-20250218101806377</figcaption></figure><p>对程序设置口令后，打开该程序时必须输入口令才能查看程序内容。</p><h2 id="_4-不同程序的类型" tabindex="-1"><a class="header-anchor" href="#_4-不同程序的类型" aria-hidden="true">#</a> 4.不同程序的类型</h2><p>在三菱R系列PLC中，程序执行类型决定了程序何时以及如何被执行。以下是各种执行类型的详细说明：</p><h3 id="_1-初始执行类型" tabindex="-1"><a class="header-anchor" href="#_1-初始执行类型" aria-hidden="true">#</a> 1. <strong>初始执行类型</strong></h3><p>初始执行类型（Initial Execution Type）</p><ul><li><strong>说明</strong>：初始执行类型的程序在PLC启动或从停止状态切换到运行状态时执行一次。通常用于初始化变量、设置初始状态等。</li><li><strong>应用</strong>：适用于需要在系统启动时进行一次性的初始化操作。</li></ul><h3 id="_2-扫描执行类型" tabindex="-1"><a class="header-anchor" href="#_2-扫描执行类型" aria-hidden="true">#</a> 2. <strong>扫描执行类型</strong></h3><p>扫描执行类型（Scan Execution Type）</p><ul><li><strong>说明</strong>：扫描执行类型的程序在每个扫描周期内都会执行一次。这是最常见的执行类型，适用于需要持续监控和控制的逻辑。</li><li><strong>应用</strong>：适用于大多数常规控制逻辑，如顺序控制、逻辑判断等。</li></ul><h3 id="_3-恒定周期执行类型" tabindex="-1"><a class="header-anchor" href="#_3-恒定周期执行类型" aria-hidden="true">#</a> 3. <strong>恒定周期执行类型</strong></h3><p>恒定周期执行类型（Constant Cycle Execution Type）</p><ul><li><strong>说明</strong>：恒定周期执行类型的程序按照设定的固定时间间隔执行，不受扫描周期的影响。适用于需要精确时间控制的场合。</li><li><strong>应用</strong>：适用于需要精确时间控制的任务，如定时数据采集、定时输出等。</li></ul><h3 id="_4-时间执行类型" tabindex="-1"><a class="header-anchor" href="#_4-时间执行类型" aria-hidden="true">#</a> 4. <strong>时间执行类型</strong></h3><p>时间执行类型（Time Execution Type）</p><ul><li><strong>说明</strong>：时间执行类型的程序在指定的时间点执行，可以是每天、每周或每月的特定时间。适用于需要定时执行的任务。</li><li><strong>应用</strong>：适用于定时任务，如定时报表生成、定时设备维护等。</li></ul><h3 id="_5-待机执行类型" tabindex="-1"><a class="header-anchor" href="#_5-待机执行类型" aria-hidden="true">#</a> 5. <strong>待机执行类型</strong></h3><p>待机执行类型（Standby Execution Type）</p><ul><li><strong>说明</strong>：待机执行类型的程序在PLC处于待机状态时执行。待机状态通常是指PLC处于运行状态但没有执行其他任务时。</li><li><strong>应用</strong>：适用于需要在系统空闲时执行的任务，如后台数据处理、系统自检等。</li></ul><h3 id="_6-无执行类型指定" tabindex="-1"><a class="header-anchor" href="#_6-无执行类型指定" aria-hidden="true">#</a> 6. <strong>无执行类型指定</strong></h3><p>无执行类型指定（No Execution Type Specified）</p><ul><li><strong>说明</strong>：无执行类型指定的程序不会自动执行，需要由其他程序调用或通过外部事件触发。适用于需要手动或条件触发的任务。</li><li><strong>应用</strong>：适用于需要通过特定条件或外部事件触发的任务，如手动操作、事件响应等。</li></ul><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h3><p>三菱R系列PLC提供了多种程序执行类型，包括初始、扫描、恒定周期、时间、待机和无执行类型指定。用户可以根据具体需求选择合适的执行类型，以实现不同的控制逻辑和任务调度。</p><h3 id="程序执行顺序" tabindex="-1"><a class="header-anchor" href="#程序执行顺序" aria-hidden="true">#</a> 程序执行顺序</h3><figure><img src="'+_+'" alt="image-20250218104724083" tabindex="0" loading="lazy"><figcaption>image-20250218104724083</figcaption></figure><h3 id="初始" tabindex="-1"><a class="header-anchor" href="#初始" aria-hidden="true">#</a> 初始</h3><p>是CPU模块RUn的状态时，只执行一次。</p><h3 id="扫描" tabindex="-1"><a class="header-anchor" href="#扫描" aria-hidden="true">#</a> 扫描</h3><p>会根据程序编写的步数，及软元件的导通数量自动计算程序的执行时间。顺序从上往下、从左往右执行，主逻辑程序放在这里</p><h3 id="恒定周期" tabindex="-1"><a class="header-anchor" href="#恒定周期" aria-hidden="true">#</a> 恒定周期</h3><p>是指定时间执行的中断程序，但是与通常的中断程序不同，无需记述中断指针及IRET指令，而是以程序文件为单位执行。</p><p>要点：执行恒定周期执行类程序时，需要通过EI指令设置为中断允许状态</p><figure><img src="'+b+'" alt="image-20250218102803115" tabindex="0" loading="lazy"><figcaption>image-20250218102803115</figcaption></figure><h4 id="注意" tabindex="-1"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意</h4><p>如果恒定周期程序的执行周期小于扫描周期，则该恒定周期程序将不会被执行。</p><p>恒定周期程序与中断程序一样，只有在EI到DI之间执行中断时才会被执行。</p><h2 id="_5-标签" tabindex="-1"><a class="header-anchor" href="#_5-标签" aria-hidden="true">#</a> 5.标签</h2><h3 id="局部标签的类型" tabindex="-1"><a class="header-anchor" href="#局部标签的类型" aria-hidden="true">#</a> 局部标签的类型</h3><figure><img src="'+x+'" alt="image-20250218110020386" tabindex="0" loading="lazy"><figcaption>image-20250218110020386</figcaption></figure><h2 id="_6-运动控制模块" tabindex="-1"><a class="header-anchor" href="#_6-运动控制模块" aria-hidden="true">#</a> 6.运动控制模块</h2><figure><img src="'+y+'" alt="image-20250218111711581" tabindex="0" loading="lazy"><figcaption>image-20250218111711581</figcaption></figure><p>先添加运动控制模块RD77MS2.</p><p>双击<img src="'+z+'" alt="image-20250218111814117" loading="lazy"></p><p>就可以打开运动控制的配置界面</p><h3 id="_1-基本参数设置" tabindex="-1"><a class="header-anchor" href="#_1-基本参数设置" aria-hidden="true">#</a> 1.基本参数设置</h3><figure><img src="'+w+'" alt="image-20250218134223793" tabindex="0" loading="lazy"><figcaption>image-20250218134223793</figcaption></figure><figure><img src="'+C+'" alt="image-20250218134402088" tabindex="0" loading="lazy"><figcaption>image-20250218134402088</figcaption></figure><figure><img src="'+O+'" alt="image-20250218134438047" tabindex="0" loading="lazy"><figcaption>image-20250218134438047</figcaption></figure><h3 id="伺服参数设置" tabindex="-1"><a class="header-anchor" href="#伺服参数设置" aria-hidden="true">#</a> 伺服参数设置</h3><figure><img src="'+B+'" alt="image-20250218134716016" tabindex="0" loading="lazy"><figcaption>image-20250218134716016</figcaption></figure><h3 id="参数查看" tabindex="-1"><a class="header-anchor" href="#参数查看" aria-hidden="true">#</a> 参数查看</h3><figure><img src="'+R+'" alt="image-20250218140930180" tabindex="0" loading="lazy"><figcaption>image-20250218140930180</figcaption></figure><figure><img src="'+T+'" alt="image-20250218140948022" tabindex="0" loading="lazy"><figcaption>image-20250218140948022</figcaption></figure><p>起始XY地址</p><h2 id="_7-模块地址分配" tabindex="-1"><a class="header-anchor" href="#_7-模块地址分配" aria-hidden="true">#</a> 7.模块地址分配</h2><figure><img src="'+F+'" alt="image-20250218140720762" tabindex="0" loading="lazy"><figcaption>image-20250218140720762</figcaption></figure><p>每个模块都有一个编号，这个编号就是该模块的起始IO地址，比如此次简单运动控制的编号为70，那么其IO起始就是X70开始。</p><h3 id="简单测试程序" tabindex="-1"><a class="header-anchor" href="#简单测试程序" aria-hidden="true">#</a> 简单测试程序</h3><figure><img src="'+k+'" alt="image-20250218141629236" tabindex="0" loading="lazy"><figcaption>image-20250218141629236</figcaption></figure><p>运行后，此时伺服会显示D01.</p><h2 id="_8-jog测试" tabindex="-1"><a class="header-anchor" href="#_8-jog测试" aria-hidden="true">#</a> 8.JOG测试</h2><figure><img src="'+P+'" alt="image-20250218144610719" tabindex="0" loading="lazy"><figcaption>image-20250218144610719</figcaption></figure><p>相关的伺服参数都可以在</p><figure><img src="'+E+'" alt="image-20250218144646084" tabindex="0" loading="lazy"><figcaption>image-20250218144646084</figcaption></figure><p>中找到。</p><h3 id="注意-1" tabindex="-1"><a class="header-anchor" href="#注意-1" aria-hidden="true">#</a> 注意</h3><p><strong>先触发速度设置后在触发正反转命令，如果两个命令同时触发可能会导致当前的速度不会在此时的正反转命令中起作用。</strong></p><h3 id="加速时间与减速时间" tabindex="-1"><a class="header-anchor" href="#加速时间与减速时间" aria-hidden="true">#</a> 加速时间与减速时间</h3><figure><img src="'+I+'" alt="image-20250218145640065" tabindex="0" loading="lazy"><figcaption>image-20250218145640065</figcaption></figure><p>可以通过pr32，33参数来选择启用了哪一组加减速参数。</p><p>下面是选择第二组加减速参数的代码</p><figure><img src="'+N+'" alt="image-20250218145944384" tabindex="0" loading="lazy"><figcaption>image-20250218145944384</figcaption></figure><h3 id="设置上下限与原点信号" tabindex="-1"><a class="header-anchor" href="#设置上下限与原点信号" aria-hidden="true">#</a> 设置上下限与原点信号</h3><figure><img src="'+D+'" alt="image-20250218150102794" tabindex="0" loading="lazy"><figcaption>image-20250218150102794</figcaption></figure><h2 id="_9-伺服回原" tabindex="-1"><a class="header-anchor" href="#_9-伺服回原" aria-hidden="true">#</a> 9.伺服回原</h2><figure><img src="'+M+'" alt="image-20250218155421588" tabindex="0" loading="lazy"><figcaption>image-20250218155421588</figcaption></figure><p>确保此次设置无误</p><figure><img src="'+L+'" alt="image-20250218155455413" tabindex="0" loading="lazy"><figcaption>image-20250218155455413</figcaption></figure><h3 id="示波器监控回原" tabindex="-1"><a class="header-anchor" href="#示波器监控回原" aria-hidden="true">#</a> 示波器监控回原</h3><figure><img src="'+v+'" alt="image-20250218155942945" tabindex="0" loading="lazy"><figcaption>image-20250218155942945</figcaption></figure><p>配置</p><figure><img src="'+S+'" alt="image-20250218160002222" tabindex="0" loading="lazy"><figcaption>image-20250218160002222</figcaption></figure><p>设置探针</p><figure><img src="'+U+'" alt="image-20250218160023683" tabindex="0" loading="lazy"><figcaption>image-20250218160023683</figcaption></figure><p>设置探针采样</p><figure><img src="'+H+'" alt="image-20250218160048306" tabindex="0" loading="lazy"><figcaption>image-20250218160048306</figcaption></figure><p>添加探针颜色。</p><h3 id="不同回原方式" tabindex="-1"><a class="header-anchor" href="#不同回原方式" aria-hidden="true">#</a> 不同回原方式</h3><ul><li>0:近点DOG型</li><li>4:计数型0</li><li>5:计数型®</li><li>6:数据设定型</li><li>7:刻度原点信号检测型</li></ul><p>近DOG点在回原中，第一次收到dog信号后会离开dog信号，最终回原</p><p>计数型在第一次收到dog信号后不会离开东莞信号</p><p>数据设定型：收到回原命令后会把当前位置设置为原点。</p><h2 id="_10-定位" tabindex="-1"><a class="header-anchor" href="#_10-定位" aria-hidden="true">#</a> 10.定位</h2><figure><img src="'+j+'" alt="image-20250218172836350" tabindex="0" loading="lazy"><figcaption>image-20250218172836350</figcaption></figure><p>定位功能是依靠该定位表实现的，表中的数据可以直接在表中设定也可以在代码中直接写相应的寄存器。</p><figure><img src="'+G+'" alt="image-20250218173149921" tabindex="0" loading="lazy"><figcaption>image-20250218173149921</figcaption></figure><h3 id="单次定位" tabindex="-1"><a class="header-anchor" href="#单次定位" aria-hidden="true">#</a> 单次定位</h3><figure><img src="'+W+'" alt="image-20250218172717467" tabindex="0" loading="lazy"><figcaption>image-20250218172717467</figcaption></figure><p>想要完成定位的移动，首先要启用轴，并在第一次运行定位时进行一次伺服回原。</p><h3 id="直接单次运行-表中2号定位数据" tabindex="-1"><a class="header-anchor" href="#直接单次运行-表中2号定位数据" aria-hidden="true">#</a> 直接单次运行 表中2号定位数据</h3><figure><img src="'+J+'" alt="image-20250218173725789" tabindex="0" loading="lazy"><figcaption>image-20250218173725789</figcaption></figure><h3 id="连续运行" tabindex="-1"><a class="header-anchor" href="#连续运行" aria-hidden="true">#</a> 连续运行</h3><figure><img src="'+K+'" alt="image-20250218180355199" tabindex="0" loading="lazy"><figcaption>image-20250218180355199</figcaption></figure><p>要连续运行直接把要开始运行的编号写入到轴启动号即可。</p><h3 id="运行模式" tabindex="-1"><a class="header-anchor" href="#运行模式" aria-hidden="true">#</a> 运行模式</h3><p>运行模式有三种模式：</p><ul><li>结束</li><li>连续</li><li>轨迹</li></ul><p>结束是指执行定位后直接结束不进行其他操作</p><p>轨迹与连续在执行完成之后会继续执行下一条表的定位数据，直至执行到一条运行模式是结束的数据位置。</p><p>连续是指当前定位结束后轴速度会减至0，在执行下一条数据是重新加速。轨迹是指执行当前数据后，不减速直接加速至下一条数据的速度。</p><h2 id="_11-modbus通信" tabindex="-1"><a class="header-anchor" href="#_11-modbus通信" aria-hidden="true">#</a> 11.modbus通信</h2><h3 id="接线" tabindex="-1"><a class="header-anchor" href="#接线" aria-hidden="true">#</a> 接线</h3><figure><img src="'+V+'" alt="image-20250219124857900" tabindex="0" loading="lazy"><figcaption>image-20250219124857900</figcaption></figure><p>双线接法是：sda与rda短接再接对象设备的a项，sdb与rdb短接再与对象b项连接。</p><h3 id="plc相关配置" tabindex="-1"><a class="header-anchor" href="#plc相关配置" aria-hidden="true">#</a> plc相关配置</h3><figure><img src="'+Y+'" alt="image-20250219130821394" tabindex="0" loading="lazy"><figcaption>image-20250219130821394</figcaption></figure><p>配置通信模式</p><p>首先将plc链接改为串行通信</p><figure><img src="'+q+'" alt="image-20250219131541655" tabindex="0" loading="lazy"><figcaption>image-20250219131541655</figcaption></figure><figure><img src="'+A+'" alt="image-20250219131602941" tabindex="0" loading="lazy"><figcaption>image-20250219131602941</figcaption></figure><figure><img src="'+X+'" alt="image-20250219131625939" tabindex="0" loading="lazy"><figcaption>image-20250219131625939</figcaption></figure><figure><img src="'+Z+'" alt="image-20250219131646279" tabindex="0" loading="lazy"><figcaption>image-20250219131646279</figcaption></figure><figure><img src="'+Q+'" alt="image-20250219131759555" tabindex="0" loading="lazy"><figcaption>image-20250219131759555</figcaption></figure><p>添加协议</p><figure><img src="'+$+'" alt="image-20250219131815873" tabindex="0" loading="lazy"><figcaption>image-20250219131815873</figcaption></figure><h4 id="协议编辑" tabindex="-1"><a class="header-anchor" href="#协议编辑" aria-hidden="true">#</a> 协议编辑</h4><figure><img src="'+ii+'" alt="image-20250219132128411" tabindex="0" loading="lazy"><figcaption>image-20250219132128411</figcaption></figure><p>修改为可以编辑协议，可以删除多余的配置</p><figure><img src="'+ai+'" alt="image-20250219132211180" tabindex="0" loading="lazy"><figcaption>image-20250219132211180</figcaption></figure><figure><img src="'+ei+'" alt="image-20250219132339703" tabindex="0" loading="lazy"><figcaption>image-20250219132339703</figcaption></figure><figure><img src="'+ti+'" alt="image-20250219132421320" tabindex="0" loading="lazy"><figcaption>image-20250219132421320</figcaption></figure><figure><img src="'+si+'" alt="image-20250219140627058" tabindex="0" loading="lazy"><figcaption>image-20250219140627058</figcaption></figure><h4 id="代码中控制变频器" tabindex="-1"><a class="header-anchor" href="#代码中控制变频器" aria-hidden="true">#</a> 代码中控制变频器</h4><figure><img src="'+ni+'" alt="image-20250219140946417" tabindex="0" loading="lazy"><figcaption>image-20250219140946417</figcaption></figure><p>plc写的寄存器地址是文档的寄存器地址-40000-1.即如果想控制变频器状态40009.那么就向最开始配置的寄存器地址D6中写入8就行。</p><p>G.CPRTCL命令：</p><figure><img src="'+gi+'" alt="image-20250219155310844" tabindex="0" loading="lazy"><figcaption>image-20250219155310844</figcaption></figure><figure><img src="'+ri+'" alt="image-20250219134846103" tabindex="0" loading="lazy"><figcaption>image-20250219134846103</figcaption></figure><figure><img src="'+oi+'" alt="image-20250219154649882" tabindex="0" loading="lazy"><figcaption>image-20250219154649882</figcaption></figure><p>参数(U)是485通信的元件编号故写入U3</p><p>参数(n1)是485元件的通过值，我们使用的485设置有两个通道；通道1是232通信，通道2是422和485通信。故写2</p><p>参数(n2)是连续执行的协议数量，此次使用了两个协议，协议1是与变频器通信的协议，协议2是变频器相关协议。故此次数据为2</p><p>参数(S)是起始地址站一个字，我使用了d200作为起始地址，故写入d200.起始地址被占位后，后续从d202开始写入协议编号，要使用协议1与协议2，故把1与2写入到d202与d203中</p><p>参数(D)完成扫描为，所以使用M10接受结果。</p><h3 id="变频器pr相关参数信息" tabindex="-1"><a class="header-anchor" href="#变频器pr相关参数信息" aria-hidden="true">#</a> 变频器PR相关参数信息</h3><p>配置PLC端通信参数。</p><figure><img src="'+pi+'" alt="image-20250219130947282" tabindex="0" loading="lazy"><figcaption>image-20250219130947282</figcaption></figure><p>设置pr340为10，pr79为2网络运行模式</p><figure><img src="'+ci+'" alt="image-20250219131042190" tabindex="0" loading="lazy"><figcaption>image-20250219131042190</figcaption></figure><p>设置modbus通信规格参数</p><h4 id="变频器控制代码" tabindex="-1"><a class="header-anchor" href="#变频器控制代码" aria-hidden="true">#</a> 变频器控制代码</h4><figure><img src="'+di+'" alt="image-20250219155542105" tabindex="0" loading="lazy"><figcaption>image-20250219155542105</figcaption></figure><figure><img src="'+li+'" alt="image-20250219155600859" tabindex="0" loading="lazy"><figcaption>image-20250219155600859</figcaption></figure><figure><img src="'+fi+'" alt="image-20250219155622683" tabindex="0" loading="lazy"><figcaption>image-20250219155622683</figcaption></figure><figure><img src="'+mi+'" alt="image-20250219155637176" tabindex="0" loading="lazy"><figcaption>image-20250219155637176</figcaption></figure><h3 id="编码器数据读取" tabindex="-1"><a class="header-anchor" href="#编码器数据读取" aria-hidden="true">#</a> 编码器数据读取</h3><h4 id="添加相关modbus数据" tabindex="-1"><a class="header-anchor" href="#添加相关modbus数据" aria-hidden="true">#</a> 添加相关modbus数据</h4><figure><img src="'+hi+'" alt="image-20250219145837792" tabindex="0" loading="lazy"><figcaption>image-20250219145837792</figcaption></figure><figure><img src="'+ui+'" alt="image-20250219145846936" tabindex="0" loading="lazy"><figcaption>image-20250219145846936</figcaption></figure><figure><img src="'+_i+'" alt="image-20250219145858254" tabindex="0" loading="lazy"><figcaption>image-20250219145858254</figcaption></figure><p>将配置写入PLC后</p><p>编写相关代码</p><figure><img src="'+bi+'" alt="image-20250219152203955" tabindex="0" loading="lazy"><figcaption>image-20250219152203955</figcaption></figure><figure><img src="'+xi+'" alt="image-20250219152220279" tabindex="0" loading="lazy"><figcaption>image-20250219152220279</figcaption></figure><h2 id="_12-定时器使用" tabindex="-1"><a class="header-anchor" href="#_12-定时器使用" aria-hidden="true">#</a> 12.定时器使用</h2><p>执行条件成立时，至设置的时间为止执行定时器计数。</p><figure><img src="'+yi+'" alt="image-20250225190141427" tabindex="0" loading="lazy"><figcaption>image-20250225190141427</figcaption></figure><p>设置数据 ■ 内容、类型、数据类型</p><p>自变量内容类型数据类型 s1(Coil)：执行条件(TRUE：执行，FALSE：停止)输入变量BOOL s2(Preset)：定时器设置值输入变量INT s3(ValueIn)：定时器初始值输入变量INT d1(ValueOut)：定时器当前值输出变量ANY16 d2(Status)：输出输出变量BOOL</p><h3 id="timer-100-fb-m" tabindex="-1"><a class="header-anchor" href="#timer-100-fb-m" aria-hidden="true">#</a> TIMER_100_FB_M</h3><ul><li>(s1)的执行条件变为ON时，开始当前值的计测。从(s3)×100ms开始计测，直到(s2)×100ms为止到达计测值时(d2)变为ON。当前计测值被输出到(d1)中。</li><li>如果(s1)的执行条件变为OFF，则当前值变为0，(d2)也变为OFF。</li><li>使用工程工具将低速定时器的计测单位(定时器时限设置)从默认值更改为其它值的情况下，转换/全部转换时将发生报警。</li><li>(s2)中可以指定0～32767的值。</li><li>(s3)中可以指定-32768～32767的值。但是，指定了负值的情况下，初始值为0。</li></ul><figure><img src="'+zi+'" alt="image-20250225190301445" tabindex="0" loading="lazy"><figcaption>image-20250225190301445</figcaption></figure><h3 id="timer-high-fb-m" tabindex="-1"><a class="header-anchor" href="#timer-high-fb-m" aria-hidden="true">#</a> TIMER_HIGH_FB_M</h3><ul><li>是计测单位为0.1～100ms的高速定时器。(s1)的执行条件变为ON时，开始当前值的计测。从(s3)×0.1～100ms(可变。通过参数设置)开始计测，直到(s2)×0.1～100ms为止达到计测值时(d2)变为ON。当前计测值被输出到(d1)中。</li><li>如果(s1)的执行条件变为OFF，则当前值变为0，(d2)也变为OFF。</li><li>高速定时器的计测单位(定时器时限设置)的默认值为10ms。计测单位可以在0.01ms～100ms的范围内更改。</li><li>(s2)中可以指定0～32767的值。</li><li>(s3)中可以指定-32768～32767的值。但是，指定了负值的情况下，初始值为0。</li></ul><figure><img src="'+wi+'" alt="image-20250225190342122" tabindex="0" loading="lazy"><figcaption>image-20250225190342122</figcaption></figure><h3 id="timer-low-fb-m低速定时器" tabindex="-1"><a class="header-anchor" href="#timer-low-fb-m低速定时器" aria-hidden="true">#</a> TIMER_LOW_FB_M低速定时器</h3><ul><li>是计测单位为1～1000ms的低速定时器。(s1)的执行条件变为ON时，开始当前值的计测。从(s3)×1～1000ms(可变。通过参数设置)开始计测，直到(s2)×1～1000ms为止达到计测值时(d2)变为ON。当前计测值被输出到(d1)中。</li><li>如果(s1)的执行条件变为OFF，则当前值变为0，(d2)也变为OFF。</li><li>低速定时器的计测单位(定时器时限设置)的默认值为100ms。计测单位可以在1～1000ms内以1ms单位更改。</li><li>(s2)中可以指定0～32767的值。</li><li>(s3)中可以指定-32768～32767的值。但是，指定了负值的情况下，初始值为0。</li></ul><figure><img src="'+Ci+'" alt="image-20250225190421441" tabindex="0" loading="lazy"><figcaption>image-20250225190421441</figcaption></figure><h3 id="timer-cont-fb-m-timer-conthfb-m" tabindex="-1"><a class="header-anchor" href="#timer-cont-fb-m-timer-conthfb-m" aria-hidden="true">#</a> TIMER_CONT_FB_M/TIMER_CONTHFB_M</h3><ul><li>是计测变量处于ON的时间的累计定时器。(s1)的执行条件变为ON时，开始当前值的计测。累计定时器有低速累计定时器(TIMER_CONT_FB_M)与高速累计定时器(TIMER_CONTHFB_M)两种类型。</li><li>从(s3)×1～1000ms(高速累计定时器时为0.1～100ms)(可变。通过参数设置)开始计测，直到(s2)×1～1000ms(高速累计定时器时为0.1～100ms)达到计测值时(d2)变为ON。当前计测值被输出到(d1)中。</li><li>即使(s1)的执行条件变为OFF，仍保持(d1)、(d2)的ON/OFF状态。(s1)的执行条件再次变为ON时，从保持的计测值重新开始计测。</li><li>低速定时器(TIMER_LOW_FB_M)与高速定时器(TIMER_HIGH_FB_M)的累计定时器的计测单位(时限)相同。</li></ul><p>•低速累计定时器：低速定时器 •高速累计定时器：高速定时器</p><p>(s2)中可以指定0～32767的值。 (s3)中可以指定-32768～32767的值。但是，指定了负值的情况下，初始值为0。 希望复位累计定时器的(d1)的情况下，应直接复位FB的(s1)。</p><p>标签名：TIMER_CONT_FB_M_1的情况下</p><figure><img src="'+Oi+`" alt="image-20250225190541221" tabindex="0" loading="lazy"><figcaption>image-20250225190541221</figcaption></figure><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">TIMER_CONT_FB_M_1</span><span class="token punctuation">(</span>Coil<span class="token operator">:</span><span class="token operator">=</span> ton_start <span class="token punctuation">,</span>Preset<span class="token operator">:</span><span class="token operator">=</span> <span class="token number">100</span> <span class="token punctuation">,</span>ValueIn<span class="token operator">:</span><span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">,</span>ValueOut<span class="token operator">=</span><span class="token operator">&gt;</span> time <span class="token punctuation">,</span>Status<span class="token operator">=</span><span class="token operator">&gt;</span> ton_out <span class="token punctuation">)</span><span class="token punctuation">;</span>

IF ton_reset THEN
	<span class="token comment">//复位定时器</span>
	<span class="token function">RST</span><span class="token punctuation">(</span> ton_reset <span class="token punctuation">,</span> TIMER_CONT_FB_M_1<span class="token punctuation">.</span>Coil <span class="token punctuation">)</span><span class="token punctuation">;</span>
	
END_IF<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>累加型计数器，结果不能自动复位，如果要复位该定时器则使用rst指令。</p><h3 id="定时器时限设置" tabindex="-1"><a class="header-anchor" href="#定时器时限设置" aria-hidden="true">#</a> 定时器时限设置</h3><figure><img src="`+Bi+'" alt="image-20250225191313601" tabindex="0" loading="lazy"><figcaption>image-20250225191313601</figcaption></figure><p>设置该参数可以调整定时器启动时每次累加的时间。</p><h2 id="_13-连接pro-face的显示屏" tabindex="-1"><a class="header-anchor" href="#_13-连接pro-face的显示屏" aria-hidden="true">#</a> 13.连接pro-face的显示屏</h2><h3 id="plc配置" tabindex="-1"><a class="header-anchor" href="#plc配置" aria-hidden="true">#</a> PLC配置</h3><figure><img src="'+Ri+'" alt="image-20250225191540131" tabindex="0" loading="lazy"><figcaption>image-20250225191540131</figcaption></figure><p>设置IP地址，开启SLMP。打开对象设备连接配置设置</p><figure><img src="'+Ti+'" alt="image-20250225191629808" tabindex="0" loading="lazy"><figcaption>image-20250225191629808</figcaption></figure><p>添加好其配置。</p><h3 id="hmi配置" tabindex="-1"><a class="header-anchor" href="#hmi配置" aria-hidden="true">#</a> HMI配置</h3><figure><img src="'+Fi+'" alt="image-20250225191755152" tabindex="0" loading="lazy"><figcaption>image-20250225191755152</figcaption></figure><figure><img src="'+ki+'" alt="image-20250225191849145" tabindex="0" loading="lazy"><figcaption>image-20250225191849145</figcaption></figure><figure><img src="'+Pi+'" alt="image-20250225191925563" tabindex="0" loading="lazy"><figcaption>image-20250225191925563</figcaption></figure><figure><img src="'+Ei+'" alt="image-20250225192005636" tabindex="0" loading="lazy"><figcaption>image-20250225192005636</figcaption></figure>',235)]))}const vi=a(Ii,[["render",Ni],["__file","05.三菱R系列使用.html.vue"]]);export{vi as default};
