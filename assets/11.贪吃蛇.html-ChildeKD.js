import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as e,a as p}from"./app-DBc2jY3V.js";const t={};function o(c,s){return e(),a("div",null,s[0]||(s[0]=[p(`<h2 id="代码流程" tabindex="-1"><a class="header-anchor" href="#代码流程" aria-hidden="true">#</a> 代码流程</h2><p>1.初始化-把蛇头放在中心点</p><p>2.通过ton控制蛇移动速度</p><ol start="3"><li></li></ol><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h3><h3 id="图形垂直移动" tabindex="-1"><a class="header-anchor" href="#图形垂直移动" aria-hidden="true">#</a> 图形垂直移动</h3><figure><img src="https://cdn.nlark.com/yuque/0/2025/png/21683645/1736412449038-228464d6-4518-4aa7-8f46-82221a345776.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://cdn.nlark.com/yuque/0/2025/png/21683645/1736414083982-3ec91408-c5f5-4f50-8c77-bdbd3a26dd5e.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>通过等级设定初始速度</p><h2 id="_1-scl随机数生成办法" tabindex="-1"><a class="header-anchor" href="#_1-scl随机数生成办法" aria-hidden="true">#</a> 1.SCl随机数生成办法</h2><p>limit：max-min</p><p>k:随机数的</p><p>1.获取系统时间</p><p>2.与随机数的范围差取余</p><p>3.余数除随机数范围获得一个系数</p><p>4.系数乘limit+min就可以获得一个在limit内的随机数</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">//根据当前系统时间获取一个在max与min之间的随机数</span>
<span class="token preprocessor property">#t_return := RD_SYS_T(#t_dtl);</span>
<span class="token preprocessor property">#t_real := UDINT_TO_REAL((15*#t_dtl.NANOSECOND) MOD #K);</span>
<span class="token preprocessor property">#t_real := #t_real / UDINT_TO_REAL(#K);</span>
<span class="token preprocessor property">#random := REAL_TO_INT((#max - #min) * #t_real + #min);</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.nlark.com/yuque/0/2025/png/21683645/1736479983938-31d68047-3da1-4700-9e0d-286ad0826abd.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>根据当前系统时间获取一个在max与min之间的随机数.</p><h2 id="_2-蛇身体移动思路" tabindex="-1"><a class="header-anchor" href="#_2-蛇身体移动思路" aria-hidden="true">#</a> 2.蛇身体移动思路</h2><p>整体思路：身体增加是，向蛇尾加一个长度。这样方便判断且不会对其他地方造成影响。</p><p>身体移动。依据蛇头移动方向将所有身体向前移动一格，即从第1个位置开始把当前存储的位置放到后一个数组位置中。完成后1与2的位置是相同的，最后再把新的头的位置放在1号位置</p><h2 id="_3-获取代码运行时间" tabindex="-1"><a class="header-anchor" href="#_3-获取代码运行时间" aria-hidden="true">#</a> 3.获取代码运行时间</h2><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token string">&quot;Tag_Result&quot;</span> <span class="token operator">:</span><span class="token operator">=</span> <span class="token function">RUNTIME</span><span class="token punctuation">(</span><span class="token string">&quot;Tag_Memory&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token string">&quot;Best_before_date_DB&quot;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token string">&quot;Tag_Result&quot;</span> <span class="token operator">:</span><span class="token operator">=</span> <span class="token function">RUNTIME</span><span class="token punctuation">(</span><span class="token string">&quot;Tag_Memory&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过第一次调用该指令来设置运行时间测量的起始点，然后将其作为该指令第二次调用的引用缓存到“TagMemory”操作数中。</p><p>然后调用“Best_before_date”程序块 FB1。</p><p>处理完程序块 FB1 后，将再次执行该指令。第二次调用该指令将计算出该程序块的运行时间，然后将结果写入输出“Tag_Result”中。</p><h3 id="游戏得分获取" tabindex="-1"><a class="header-anchor" href="#游戏得分获取" aria-hidden="true">#</a> 游戏得分获取</h3><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">//获取当前时间</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">s</span><span class="token expression">_runtime <span class="token operator">:</span><span class="token operator">=</span> <span class="token function">RUNTIME</span><span class="token punctuation">(</span>#s_men<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span>

IF #play THEN
    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">s</span><span class="token expression">_gameRunTime <span class="token operator">+=</span> #s_runtime<span class="token punctuation">;</span></span></span>
END_IF<span class="token punctuation">;</span>

<span class="token comment">//获取当前系统时间</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">t</span><span class="token expression">_return <span class="token operator">:</span><span class="token operator">=</span><span class="token function">RD_SYS_T</span><span class="token punctuation">(</span>#s_date<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token expression"><span class="token function">R_TRIG_Instance</span><span class="token punctuation">(</span>CLK<span class="token operator">:</span><span class="token operator">=</span>#set<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span>

<span class="token comment">//游戏结束，记录参数</span>
IF #R_TRIG_Instance<span class="token punctuation">.</span>Q THEN
    <span class="token comment">//判断，如果没输入名称，给一个默认的名称</span>
    IF #username <span class="token operator">&lt;</span><span class="token operator">&gt;</span> <span class="token char">&#39;&#39;</span> THEN
        <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">s</span><span class="token expression">_name <span class="token operator">:</span><span class="token operator">=</span> #username<span class="token punctuation">;</span></span></span>
    ELSE
        <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">s</span><span class="token expression">_name <span class="token operator">:</span><span class="token operator">=</span> </span><span class="token char">&#39;&lt;no name&gt;&#39;</span><span class="token expression"><span class="token punctuation">;</span></span></span>
    END_IF<span class="token punctuation">;</span>
    <span class="token comment">//判断用户是否存在，若存在且得分高于上一次就覆盖原得分</span>
    FOR #index <span class="token operator">:</span><span class="token operator">=</span> <span class="token number">1</span> TO <span class="token number">10</span> DO
        IF #s_name <span class="token operator">&lt;</span><span class="token operator">&gt;</span> <span class="token char">&#39;&#39;</span> AND #charts_list<span class="token punctuation">[</span>#index<span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">=</span> #s_name AND #aim_location <span class="token operator">=</span> <span class="token number">0</span> THEN
            <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">aim</span><span class="token expression">_location <span class="token operator">:</span><span class="token operator">=</span> #index<span class="token punctuation">;</span></span></span>
        END_IF<span class="token punctuation">;</span>
    END_FOR<span class="token punctuation">;</span>
    
    IF #aim_location <span class="token operator">&gt;</span> <span class="token number">0</span>  THEN
        IF #charts_list<span class="token punctuation">[</span>#aim_location<span class="token punctuation">]</span><span class="token punctuation">.</span>score <span class="token operator">&lt;</span> #score THEN
            <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">charts</span><span class="token expression">_list<span class="token punctuation">[</span>#aim_location<span class="token punctuation">]</span><span class="token punctuation">.</span>score <span class="token operator">:</span><span class="token operator">=</span> #score<span class="token punctuation">;</span></span></span>
        END_IF<span class="token punctuation">;</span>
    ELSE
        <span class="token comment">//用户不存在，记录用户得分</span>
        IF #score <span class="token operator">&gt;</span> #charts_list<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">.</span>score THEN
            <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">charts</span><span class="token expression">_list<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">:</span><span class="token operator">=</span> #s_name<span class="token punctuation">;</span></span></span>
            <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">charts</span><span class="token expression">_list<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">.</span>score <span class="token operator">:</span><span class="token operator">=</span> #score<span class="token punctuation">;</span></span></span>
            <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">charts</span><span class="token expression">_list<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">.</span></span><span class="token string">&quot;time&quot;</span> <span class="token expression"><span class="token operator">:</span><span class="token operator">=</span> <span class="token function">LREAL_TO_UINT</span><span class="token punctuation">(</span>#s_gameRunTime<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span>
            <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">charts</span><span class="token expression">_list<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">.</span></span><span class="token string">&quot;date&quot;</span> <span class="token expression"><span class="token operator">:</span><span class="token operator">=</span> #s_date<span class="token punctuation">;</span></span></span>
            <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">charts</span><span class="token expression">_list<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">.</span>level <span class="token operator">:</span><span class="token operator">=</span> #level<span class="token punctuation">;</span></span></span>
        END_IF<span class="token punctuation">;</span>
    END_IF<span class="token punctuation">;</span>
    
    
END_IF<span class="token punctuation">;</span>

<span class="token comment">//冒泡排序，设置排行榜</span>
FOR #i <span class="token operator">:</span><span class="token operator">=</span> <span class="token number">1</span> TO <span class="token number">9</span> DO
    FOR #j <span class="token operator">:</span><span class="token operator">=</span> #i <span class="token operator">+</span> <span class="token number">1</span>  TO <span class="token number">10</span> DO
        IF #charts_list<span class="token punctuation">[</span>#i<span class="token punctuation">]</span><span class="token punctuation">.</span>score <span class="token operator">&lt;</span> #charts_list<span class="token punctuation">[</span>#j<span class="token punctuation">]</span><span class="token punctuation">.</span>score THEN
            <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">chart</span> <span class="token expression"><span class="token operator">:</span><span class="token operator">=</span> #charts_list<span class="token punctuation">[</span>#i<span class="token punctuation">]</span><span class="token punctuation">;</span></span></span>
            <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">charts</span><span class="token expression">_list<span class="token punctuation">[</span>#i<span class="token punctuation">]</span> <span class="token operator">:</span><span class="token operator">=</span> #charts_list<span class="token punctuation">[</span>#j<span class="token punctuation">]</span><span class="token punctuation">;</span></span></span>
            <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">charts</span><span class="token expression">_list<span class="token punctuation">[</span>#j<span class="token punctuation">]</span> <span class="token operator">:</span><span class="token operator">=</span> #chart<span class="token punctuation">;</span></span></span>
        END_IF<span class="token punctuation">;</span>
    END_FOR<span class="token punctuation">;</span>
END_FOR<span class="token punctuation">;</span>

IF #clearTime THEN
    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">s</span><span class="token expression">_gameRunTime <span class="token operator">:</span><span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span></span>
    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">aim</span><span class="token expression">_location <span class="token operator">:</span><span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span></span>
END_IF<span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">s</span><span class="token expression">_runtime <span class="token operator">:</span><span class="token operator">=</span> <span class="token function">RUNTIME</span><span class="token punctuation">(</span>#s_men<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,29)]))}const r=n(t,[["render",o],["__file","11.贪吃蛇.html.vue"]]);export{r as default};
