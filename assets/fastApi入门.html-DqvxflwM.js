import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,c,o as u,b as s,a as e,e as a,d as p}from"./app-DBc2jY3V.js";const l="/wf-site/assets/1695390407090-0bf294db-b73a-475e-8f43-adda0ac7e4cf-D8M_8pXA.png",r="/wf-site/assets/1695402341118-26ea6de3-2555-4485-b5d6-48913164428f-Bpix14RR.png",d="/wf-site/assets/1695402667237-f4a28d08-30f1-48ef-9f94-d55b6bfb5df2-C_j20ck2.png",k={},v={id:"git-仓库",tabindex:"-1"},m={href:"https://gitee.com/gyhdx/python-study.git",target:"_blank",rel:"noopener noreferrer"},b={href:"http://127.0.0.1:8000/hello",target:"_blank",rel:"noopener noreferrer"},g={href:"http://127.0.0.1:8000/docs#/",target:"_blank",rel:"noopener noreferrer"},q={href:"http://127.0.0.1:8000/redoc",target:"_blank",rel:"noopener noreferrer"},y={href:"http://127.0.0.1:8000/cp01/query/bool/conversion?param=a",target:"_blank",rel:"noopener noreferrer"};function h(f,n){const t=i("ExternalLinkIcon");return u(),c("div",null,[s("h3",v,[n[1]||(n[1]=s("a",{class:"header-anchor",href:"#git-仓库","aria-hidden":"true"},"#",-1)),n[2]||(n[2]=a(" git : ")),s("a",m,[n[0]||(n[0]=a("仓库")),p(t)])]),n[15]||(n[15]=e(`<h3 id="_1-环境配置" tabindex="-1"><a class="header-anchor" href="#_1-环境配置" aria-hidden="true">#</a> 1.环境配置</h3><p>安装fastapi与相关的环境包</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>pip install fastapi

pip install <span class="token string">&quot;uvicorn[standard]&quot;</span>

pip install sqlalchemy
pip3 install python-jose
pip install passlib
pip install jose
<span class="token comment"># pip install uvicorn</span>
pip install python-multipart
pip install fastapi
pip install email_validator
pip3 install pyDantic
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装完成后就可以使用了</p><h3 id="_2-helloword" tabindex="-1"><a class="header-anchor" href="#_2-helloword" aria-hidden="true">#</a> 2.helloWord</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&quot;&quot;&quot;
# File       : test.py
&quot;&quot;&quot;</span>
<span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI

app <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">read_root</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;World&quot;</span><span class="token punctuation">}</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Hi, wf&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在文件目录下使用命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>uvicorn test:app <span class="token parameter variable">--reload</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,8)),s("p",null,[n[4]||(n[4]=a("在浏览器访问")),s("a",b,[n[3]||(n[3]=a("http://127.0.0.1:8000")),p(t)]),n[5]||(n[5]=s("br",null,null,-1)),n[6]||(n[6]=a("就可以看到结果"))]),n[16]||(n[16]=e(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;hello&quot;</span><span class="token operator">:</span> <span class="token string">&quot;word&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="查看swagger文档" tabindex="-1"><a class="header-anchor" href="#查看swagger文档" aria-hidden="true">#</a> 查看swagger文档</h4>`,2)),s("p",null,[n[8]||(n[8]=a("访问")),s("a",g,[n[7]||(n[7]=a("http://127.0.0.1:8000/docs#/")),p(t)]),n[9]||(n[9]=s("br",null,null,-1))]),n[17]||(n[17]=s("figure",null,[s("img",{src:"https://cdn.nlark.com/yuque/0/2023/png/21683645/1695390214392-b140d673-ac92-4845-a23f-9513b6c2f9ee.png?x-oss-process=image%2Fresize%2Cw_1500%2Climit_0",alt:"image.png",tabindex:"0",loading:"lazy"}),s("figcaption",null,"image.png")],-1)),n[18]||(n[18]=s("h4",{id:"查看redoc文档",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#查看redoc文档","aria-hidden":"true"},"#"),a(" 查看redoc文档")],-1)),s("p",null,[s("a",q,[n[10]||(n[10]=a("http://127.0.0.1:8000/redoc")),p(t)]),n[11]||(n[11]=s("br",null,null,-1))]),n[19]||(n[19]=s("figure",null,[s("img",{src:l,alt:"image.png",tabindex:"0",loading:"lazy"}),s("figcaption",null,"image.png")],-1)),n[20]||(n[20]=s("h3",{id:"_3-路径参数的解析与验证",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_3-路径参数的解析与验证","aria-hidden":"true"},"#"),a(" 3.路径参数的解析与验证")],-1)),s("p",null,[n[13]||(n[13]=a("先给一个各类参数定义")),n[14]||(n[14]=s("br",null,null,-1)),s("a",y,[n[12]||(n[12]=a("http://127.0.0.1:8000/cp01/query/bool/conversion?param=a")),p(t)])]),n[21]||(n[21]=e(`<ul><li>查询参数：该参数位于url的问好后面类似于param就是</li><li>路径参数：该参数位于url的？之前，cinversion就可以看作一个路径参数</li><li>请求体参数：post请求时所携带的json数据参数</li></ul><h4 id="函数顺序就是路由顺序" tabindex="-1"><a class="header-anchor" href="#函数顺序就是路由顺序" aria-hidden="true">#</a> 函数顺序就是路由顺序</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> APIRouter<span class="token punctuation">,</span> Path<span class="token punctuation">,</span> Query<span class="token punctuation">,</span> Cookie<span class="token punctuation">,</span> Header
<span class="token keyword">from</span> typing <span class="token keyword">import</span> Optional<span class="token punctuation">,</span> List
<span class="token keyword">from</span> enum <span class="token keyword">import</span> Enum
<span class="token keyword">from</span> pydantic <span class="token keyword">import</span> BaseModel<span class="token punctuation">,</span> Field

app01 <span class="token operator">=</span> APIRouter<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;路径参数与数字验证&quot;&quot;&quot;</span>

<span class="token decorator annotation punctuation">@app01<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/path/param&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">path_params01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;this is param01&quot;</span><span class="token punctuation">}</span>


<span class="token comment"># 函数顺序就是路由顺序</span>
<span class="token comment"># 路径相同时会现匹配第一个匹配到的路由</span>
<span class="token decorator annotation punctuation">@app01<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/path/{param}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">path_params01</span><span class="token punctuation">(</span>param<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">:</span> param<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="传递枚举" tabindex="-1"><a class="header-anchor" href="#传递枚举" aria-hidden="true">#</a> 传递枚举</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 传递枚举</span>

<span class="token keyword">class</span> <span class="token class-name">CityName</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">,</span> Enum<span class="token punctuation">)</span><span class="token punctuation">:</span>
    Beijing <span class="token operator">=</span> <span class="token string">&#39;bj&#39;</span>
    Shanghai <span class="token operator">=</span> <span class="token string">&#39;sh&#39;</span>


<span class="token decorator annotation punctuation">@app01<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/enum/{city}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">enumTest</span><span class="token punctuation">(</span>city<span class="token punctuation">:</span> CityName<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> city <span class="token operator">==</span> CityName<span class="token punctuation">.</span>Beijing<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;cityName&quot;</span><span class="token punctuation">:</span> city<span class="token punctuation">,</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">:</span> <span class="token number">222</span><span class="token punctuation">}</span>
    <span class="token keyword">if</span> city <span class="token operator">==</span> CityName<span class="token punctuation">.</span>Shanghai<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;cityName&quot;</span><span class="token punctuation">:</span> city<span class="token punctuation">,</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">:</span> <span class="token number">333</span><span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;city nuke&quot;</span><span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="传递文件名称时的处理" tabindex="-1"><a class="header-anchor" href="#传递文件名称时的处理" aria-hidden="true">#</a> 传递文件名称时的处理</h4><p>在参数后面加path参数</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token comment"># 传递文件名称时的处理   在参数后面加path参数</span>
<span class="token decorator annotation punctuation">@app01<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/fileName/{filepath:path}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">filePath</span><span class="token punctuation">(</span>filepath<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;the file path </span><span class="token interpolation"><span class="token punctuation">{</span>filepath<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="数字参数验证" tabindex="-1"><a class="header-anchor" href="#数字参数验证" aria-hidden="true">#</a> 数字参数验证</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 数字参数验证</span>
<span class="token decorator annotation punctuation">@app01<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/numb/{num}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">pathParamValidate</span><span class="token punctuation">(</span>
        num<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> Path<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">&quot;this is a number&quot;</span><span class="token punctuation">,</span> description<span class="token operator">=</span><span class="token string">&quot;none&quot;</span><span class="token punctuation">,</span> ge<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> le<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;num is&quot;</span><span class="token punctuation">:</span> num<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="选填参数-optional可以将参数变为选填" tabindex="-1"><a class="header-anchor" href="#选填参数-optional可以将参数变为选填" aria-hidden="true">#</a> 选填参数 optional可以将参数变为选填</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 选填参数 optional可以将参数变为选填</span>
<span class="token decorator annotation punctuation">@app01<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/city/{city}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">result</span><span class="token punctuation">(</span>city<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> query_str<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> query_str<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;city&quot;</span><span class="token punctuation">:</span> city<span class="token punctuation">,</span> <span class="token string">&quot;query_str&quot;</span><span class="token punctuation">:</span> query_str<span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;city&quot;</span><span class="token punctuation">:</span> city<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="bool参数转换" tabindex="-1"><a class="header-anchor" href="#bool参数转换" aria-hidden="true">#</a> bool参数转换</h4><p>yes no 1 Ture ture会转换为bool类型 无法转换为bool类型的会报错</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># bool参数转换 yes no 1 Ture ture会转换为bool类型  无法转换为bool类型的会报错</span>
<span class="token decorator annotation punctuation">@app01<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/query/bool/conversion&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">boolConversion</span><span class="token punctuation">(</span>param<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;param is &quot;</span><span class="token punctuation">:</span> param<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="查询参数与字符串的验证" tabindex="-1"><a class="header-anchor" href="#查询参数与字符串的验证" aria-hidden="true">#</a> 查询参数与字符串的验证</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 查询参数与字符串的验证</span>
<span class="token decorator annotation punctuation">@app01<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/query/validate&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">queryParamValidate</span><span class="token punctuation">(</span>
        value<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> Query<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> min_length<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> max_length<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span> regex<span class="token operator">=</span><span class="token string">&quot;^a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        values<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> Query<span class="token punctuation">(</span>default<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;v1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;v2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> alias<span class="token operator">=</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> value<span class="token punctuation">,</span> values
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="post请求" tabindex="-1"><a class="header-anchor" href="#post请求" aria-hidden="true">#</a> post请求</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># post请求请求体的设置</span>
<span class="token keyword">class</span> <span class="token class-name">CityInfo</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>
    name<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> Field<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token punctuation">)</span>
    country<span class="token punctuation">:</span> <span class="token builtin">str</span>
    <span class="token comment"># optional 与直接写bool的区别是optional可以不传值，有默认为null</span>
    isAffected<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">bool</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>
    num<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> Field<span class="token punctuation">(</span>default<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">&quot;数量&quot;</span><span class="token punctuation">,</span> description<span class="token operator">=</span><span class="token string">&quot;城市人口数量&quot;</span><span class="token punctuation">,</span> ge<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> le<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span>

    <span class="token keyword">class</span> <span class="token class-name">Config</span><span class="token punctuation">:</span>
        schema_extra <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;example&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&#39;ef&#39;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;country&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;hz&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;num&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>


<span class="token decorator annotation punctuation">@app01<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">&quot;/requestBody/city&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">cityInfo</span><span class="token punctuation">(</span>city<span class="token punctuation">:</span> CityInfo<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>city<span class="token punctuation">.</span>num<span class="token punctuation">,</span> city<span class="token punctuation">.</span>name<span class="token punctuation">)</span>
    <span class="token keyword">return</span> city<span class="token punctuation">.</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="混合各类型参数" tabindex="-1"><a class="header-anchor" href="#混合各类型参数" aria-hidden="true">#</a> 混合各类型参数</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 混合各类型参数</span>
<span class="token decorator annotation punctuation">@app01<span class="token punctuation">.</span>put</span><span class="token punctuation">(</span><span class="token string">&quot;/requestBody/maxParam/city/{name}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">mixParam</span><span class="token punctuation">(</span>
        name<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>
        city<span class="token punctuation">:</span> CityInfo<span class="token punctuation">,</span>
        num<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> Query<span class="token punctuation">(</span>ge<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> description<span class="token operator">=</span><span class="token string">&quot;cans&quot;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        death<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> Query<span class="token punctuation">(</span>ge<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> description<span class="token operator">=</span><span class="token string">&quot;第二个参数&quot;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">&quot;wf&quot;</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;myName&quot;</span><span class="token punctuation">:</span> name<span class="token punctuation">,</span><span class="token string">&quot;city&quot;</span><span class="token punctuation">:</span> city<span class="token punctuation">.</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;num&quot;</span><span class="token punctuation">:</span> num<span class="token punctuation">,</span> <span class="token string">&quot;death&quot;</span><span class="token punctuation">:</span>death<span class="token punctuation">}</span>
    <span class="token keyword">return</span> city<span class="token punctuation">.</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="获取cookie与header" tabindex="-1"><a class="header-anchor" href="#获取cookie与header" aria-hidden="true">#</a> 获取cookie与header</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&quot;&quot;&quot;设置cookie与header&quot;&quot;&quot;</span>


<span class="token decorator annotation punctuation">@app01<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/cookie/param&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">cookieParam</span><span class="token punctuation">(</span>cookieId<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> Cookie<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;cookie_id&quot;</span><span class="token punctuation">:</span> cookieId<span class="token punctuation">}</span>


<span class="token decorator annotation punctuation">@app01<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/header/param&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">headerParam</span><span class="token punctuation">(</span>
        user_agent<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> Header<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> convert_underscores<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        x_token<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> Header<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> convert_underscores<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    有些HTTP代理和服务器是不允许在请求头中带有下划线的，所以Header提供convert underscores
    :param user._agent:convert_underscores=True会把user_agent变成user-agent
    :param x_token:x_token是包含多个值的列表
    return:
    &quot;&quot;&quot;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;userAgent&quot;</span><span class="token punctuation">:</span> user_agent<span class="token punctuation">,</span> <span class="token string">&quot;x_token&quot;</span><span class="token punctuation">:</span> x_token<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="响应类型配置" tabindex="-1"><a class="header-anchor" href="#响应类型配置" aria-hidden="true">#</a> 响应类型配置</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> APIRouter<span class="token punctuation">,</span> status<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> File<span class="token punctuation">,</span> UploadFile
<span class="token keyword">from</span> pydantic <span class="token keyword">import</span> BaseModel
<span class="token keyword">from</span> typing <span class="token keyword">import</span> List<span class="token punctuation">,</span> Optional

app02 <span class="token operator">=</span> APIRouter<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">UserIn</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>
    name<span class="token punctuation">:</span> <span class="token builtin">str</span>
    password<span class="token punctuation">:</span> <span class="token builtin">str</span>
    email<span class="token punctuation">:</span> <span class="token builtin">str</span>
    mobile<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&quot;10086&quot;</span>
    address<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token boolean">None</span>
    fullName<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>


<span class="token keyword">class</span> <span class="token class-name">UserOut</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>
    name<span class="token punctuation">:</span> <span class="token builtin">str</span>
    email<span class="token punctuation">:</span> <span class="token builtin">str</span>
    mobile<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&quot;10086&quot;</span>
    address<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token boolean">None</span>
    fullName<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>


users <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;user01&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;wf&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;wwww&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;email&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;wangfeng@166.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;address&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;zh&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&quot;user02&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;gx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;wwww&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;email&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;wangfeng@166.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;address&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;zh&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token decorator annotation punctuation">@app02<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">&quot;/responseModel&quot;</span><span class="token punctuation">,</span> response_model<span class="token operator">=</span>UserOut<span class="token punctuation">,</span> response_model_exclude_unset<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">respModel</span><span class="token punctuation">(</span>user<span class="token punctuation">:</span> UserIn<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;response_model_exclude_unset=True表示默认值不包含在响应中，仅包含实际给的值，如果实际给的值与默认值相同也会包含在响应中&quot;&quot;&quot;</span>
    <span class="token keyword">return</span> users<span class="token punctuation">[</span><span class="token string">&#39;user01&#39;</span><span class="token punctuation">]</span>


<span class="token decorator annotation punctuation">@app02<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">&quot;/responseModel2&quot;</span><span class="token punctuation">,</span>
            response_model<span class="token operator">=</span>UserOut<span class="token punctuation">,</span>
            <span class="token comment"># response_model=Union[UserOut, UserIn],</span>
            <span class="token comment"># response_model=List[UserOut],</span>
            <span class="token comment"># response_model_exclude=[&quot;name&quot;],</span>
            response_model_exclude_unset<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">respModel2</span><span class="token punctuation">(</span>user<span class="token punctuation">:</span> UserIn<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;response_model_exclude_unset=True表示默认值不包含在响应中，仅包含实际给的值，如果实际给的值与默认值相同也会包含在响应中&quot;&quot;&quot;</span>
    <span class="token keyword">return</span> users<span class="token punctuation">[</span><span class="token string">&#39;user01&#39;</span><span class="token punctuation">]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="响应状态码" tabindex="-1"><a class="header-anchor" href="#响应状态码" aria-hidden="true">#</a> 响应状态码</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 响应状态码</span>
<span class="token decorator annotation punctuation">@app02<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">&quot;/statusCode&quot;</span><span class="token punctuation">,</span> status_code<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">statusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">}</span>


<span class="token decorator annotation punctuation">@app02<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">&quot;/statusCode2&quot;</span><span class="token punctuation">,</span> status_code<span class="token operator">=</span>status<span class="token punctuation">.</span>HTTP_200_OK<span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">statusCode2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">:</span> status<span class="token punctuation">.</span>HTTP_200_OK<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="表单数据处理" tabindex="-1"><a class="header-anchor" href="#表单数据处理" aria-hidden="true">#</a> 表单数据处理</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&#39;&#39;&#39;表单数据处理&#39;&#39;&#39;</span>


<span class="token decorator annotation punctuation">@app02<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">&quot;/login&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span>user<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> Form<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">,</span> password<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> Form<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot; 使用from需要安装pip install python-multipart &quot;&quot;&quot;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> user<span class="token punctuation">,</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">:</span> password<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="文件上传" tabindex="-1"><a class="header-anchor" href="#文件上传" aria-hidden="true">#</a> 文件上传</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&#39;&#39;&#39;文件上传&#39;&#39;&#39;</span>


<span class="token decorator annotation punctuation">@app02<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">&quot;/fileUpload&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">fileUpload</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">:</span> <span class="token builtin">bytes</span> <span class="token operator">=</span> File<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;使用File类文件内容会以bytes,的形式读入内存适合于上传小文件&quot;&quot;&quot;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;file.__sizeof__()&quot;</span><span class="token punctuation">:</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span><span class="token punctuation">}</span>


<span class="token decorator annotation punctuation">@app02<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">&quot;/fileUpload2&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">fileUpload2</span><span class="token punctuation">(</span>files<span class="token punctuation">:</span> List<span class="token punctuation">[</span>UploadFile<span class="token punctuation">]</span> <span class="token operator">=</span> File<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    使用UploadFile类的优势：
    1.文件存储在内存中，使用的内存达到阈值后，将被保存在磁盘中
    2.适合于图片、视缬大文件
    3.可以获取上传的文件的元数据，如文件名，创建时间等
    4.有文件对象的异步接
    &quot;&quot;&quot;</span>
    <span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> files<span class="token punctuation">:</span>
        contents <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>contents<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;filename&quot;</span><span class="token punctuation">:</span> files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>filename<span class="token punctuation">,</span> <span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span> files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>content_type<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="fastapi的静态文件处理" tabindex="-1"><a class="header-anchor" href="#fastapi的静态文件处理" aria-hidden="true">#</a> fastApi的静态文件处理</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>app<span class="token punctuation">.</span>mount<span class="token punctuation">(</span>path<span class="token operator">=</span><span class="token string">&quot;/static&quot;</span><span class="token punctuation">,</span> app<span class="token operator">=</span>StaticFiles<span class="token punctuation">(</span>directory<span class="token operator">=</span><span class="token string">&quot;./coronavirus/static&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;static&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>文件结构<br></p><figure><img src="`+r+`" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h4 id="路径配置参数" tabindex="-1"><a class="header-anchor" href="#路径配置参数" aria-hidden="true">#</a> 路径配置参数</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@app02<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span>
    <span class="token string">&quot;/path_operation_configuration&quot;</span><span class="token punctuation">,</span>
    response_model<span class="token operator">=</span>UserOut<span class="token punctuation">,</span>
    tags<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;Path&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Operation&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Configuration&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    summary<span class="token operator">=</span><span class="token string">&quot;This is summary&quot;</span><span class="token punctuation">,</span>
    description<span class="token operator">=</span><span class="token string">&quot;This is description&quot;</span><span class="token punctuation">,</span>
    response_description<span class="token operator">=</span><span class="token string">&quot;This is response description&quot;</span><span class="token punctuation">,</span>
    deprecated<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
    status_code<span class="token operator">=</span>status<span class="token punctuation">.</span>HTTP_200_OK
<span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">path_operation_configuration</span><span class="token punctuation">(</span>user<span class="token punctuation">:</span> UserIn<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    Path Operation Configuration路径操作配置
    :param user:用户信息
    return:返回结果
    &quot;&quot;&quot;</span>
    <span class="token keyword">return</span> user<span class="token punctuation">.</span>model_dump<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="fastapi的swagger文档常见配置" tabindex="-1"><a class="header-anchor" href="#fastapi的swagger文档常见配置" aria-hidden="true">#</a> fastapi的swagger文档常见配置</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>app <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span>
    title<span class="token operator">=</span><span class="token string">&quot;fastapi文档&quot;</span><span class="token punctuation">,</span>
    description<span class="token operator">=</span><span class="token string">&quot;fastapi学习接口文档&quot;</span><span class="token punctuation">,</span>
    version<span class="token operator">=</span><span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>
    docs_url<span class="token operator">=</span><span class="token string">&quot;/docs&quot;</span><span class="token punctuation">,</span>
    redoc_url<span class="token operator">=</span><span class="token string">&quot;/redoes&quot;</span>
              <span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+d+`" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h3 id="_4-错误处理" tabindex="-1"><a class="header-anchor" href="#_4-错误处理" aria-hidden="true">#</a> 4.错误处理</h3><h4 id="手动处理" tabindex="-1"><a class="header-anchor" href="#手动处理" aria-hidden="true">#</a> 手动处理</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token decorator annotation punctuation">@app02<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/httpException&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">exceptionDell</span><span class="token punctuation">(</span>city<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> city <span class="token operator">!=</span> <span class="token string">&quot;bj&quot;</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">401</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;City Not Found!&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;city&quot;</span><span class="token punctuation">:</span> city<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="全局处理" tabindex="-1"><a class="header-anchor" href="#全局处理" aria-hidden="true">#</a> 全局处理</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> fastapi<span class="token punctuation">.</span>exceptions <span class="token keyword">import</span> RequestValidationError
<span class="token keyword">from</span> fastapi<span class="token punctuation">.</span>responses <span class="token keyword">import</span> PlainTextResponse
<span class="token keyword">from</span> starlette<span class="token punctuation">.</span>exceptions <span class="token keyword">import</span> HTTPException <span class="token keyword">as</span> StarletteHTTPException

<span class="token comment"># 重写默认异常处理</span>
<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>exception_handler</span><span class="token punctuation">(</span>StarletteHTTPException<span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">httpExceptionHandler</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> exc<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;

    :param request:
    :param exc:
    :return:
    &quot;&quot;&quot;</span>
    <span class="token keyword">return</span> PlainTextResponse<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>exc<span class="token punctuation">.</span>detail<span class="token punctuation">)</span><span class="token punctuation">,</span> status_code<span class="token operator">=</span>exc<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>exception_handler</span><span class="token punctuation">(</span>RequestValidationError<span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">validationExceptionHandler</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> exc<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;

    :param request:
    :param exc:
    :return:
    &quot;&quot;&quot;</span>
    <span class="token keyword">return</span> PlainTextResponse<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>exc<span class="token punctuation">.</span>detail<span class="token punctuation">)</span><span class="token punctuation">,</span> status_code<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-依赖处理" tabindex="-1"><a class="header-anchor" href="#_5-依赖处理" aria-hidden="true">#</a> 5.依赖处理</h3><h4 id="注入一个函数" tabindex="-1"><a class="header-anchor" href="#注入一个函数" aria-hidden="true">#</a> 注入一个函数</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> APIRouter<span class="token punctuation">,</span> Depends<span class="token punctuation">,</span> Header<span class="token punctuation">,</span> HTTPException

<span class="token keyword">from</span> typing <span class="token keyword">import</span> Optional

app03 <span class="token operator">=</span> APIRouter<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;注入一个函数&quot;&quot;&quot;</span>


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">commonParam</span><span class="token punctuation">(</span>q<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span> page<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> limit<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;q&quot;</span><span class="token punctuation">:</span> q<span class="token punctuation">,</span> <span class="token string">&quot;page&quot;</span><span class="token punctuation">:</span> page<span class="token punctuation">,</span> <span class="token string">&quot;limit&quot;</span><span class="token punctuation">:</span> limit<span class="token punctuation">}</span>


<span class="token decorator annotation punctuation">@app03<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/dependency01&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">depend01</span><span class="token punctuation">(</span>common<span class="token punctuation">:</span> <span class="token builtin">dict</span> <span class="token operator">=</span> Depends<span class="token punctuation">(</span>commonParam<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> common


<span class="token decorator annotation punctuation">@app03<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/dependency02&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">depend02</span><span class="token punctuation">(</span>common<span class="token punctuation">:</span> <span class="token builtin">dict</span> <span class="token operator">=</span> Depends<span class="token punctuation">(</span>commonParam<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> common
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="注入一个类" tabindex="-1"><a class="header-anchor" href="#注入一个类" aria-hidden="true">#</a> 注入一个类</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&quot;&quot;&quot;注入一个类&quot;&quot;&quot;</span>

fake_data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;item_name&quot;</span><span class="token punctuation">:</span> <span class="token string">&#39;FOO&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;item_name&quot;</span><span class="token punctuation">:</span> <span class="token string">&#39;wf&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;item_name&quot;</span><span class="token punctuation">:</span> <span class="token string">&#39;wfwf&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span>


<span class="token keyword">class</span> <span class="token class-name">CommonParams</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> q<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span> page<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> limit<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>q <span class="token operator">=</span> q
        self<span class="token punctuation">.</span>page <span class="token operator">=</span> page
        self<span class="token punctuation">.</span>limit <span class="token operator">=</span> limit


<span class="token decorator annotation punctuation">@app03<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/class_dependency01&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">class_depend02</span><span class="token punctuation">(</span>common<span class="token operator">=</span>Depends<span class="token punctuation">(</span>CommonParams<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token comment"># async def class_depend02(common: CommonParams = Depends()):</span>
<span class="token comment"># async def class_depend02(common: CommonParams = Depends(CommonParams)):</span>
    response <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">if</span> common<span class="token punctuation">.</span>q<span class="token punctuation">:</span>
        response<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;q&quot;</span><span class="token punctuation">,</span> common<span class="token punctuation">.</span>q<span class="token punctuation">}</span><span class="token punctuation">)</span>

    items <span class="token operator">=</span> fake_data<span class="token punctuation">[</span>common<span class="token punctuation">.</span>page<span class="token punctuation">:</span> common<span class="token punctuation">.</span>page <span class="token operator">+</span> common<span class="token punctuation">.</span>limit<span class="token punctuation">]</span>
    response<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;items&quot;</span><span class="token punctuation">:</span> items<span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> response
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="子依赖" tabindex="-1"><a class="header-anchor" href="#子依赖" aria-hidden="true">#</a> 子依赖</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&quot;&quot;&quot;子依赖&quot;&quot;&quot;</span>


<span class="token keyword">def</span> <span class="token function">query</span><span class="token punctuation">(</span>q<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> q


<span class="token keyword">def</span> <span class="token function">subQuery</span><span class="token punctuation">(</span>q<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> Depends<span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">,</span> lastNum<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> q<span class="token punctuation">:</span>
        <span class="token keyword">return</span> lastNum
    <span class="token keyword">return</span> q


<span class="token decorator annotation punctuation">@app03<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/subDepency&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">subDependency</span><span class="token punctuation">(</span>finalQuery<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> Depends<span class="token punctuation">(</span>subQuery<span class="token punctuation">,</span> use_cache<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;userCache是Depends的默认True，当多个依赖有一个共同的子依赖时，会讲第一次的值存在chche中&quot;&quot;&quot;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;sub_dependency&quot;</span><span class="token punctuation">:</span> finalQuery<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="路径操作中导入依赖-可以用作一些header消息的校验" tabindex="-1"><a class="header-anchor" href="#路径操作中导入依赖-可以用作一些header消息的校验" aria-hidden="true">#</a> 路径操作中导入依赖 (可以用作一些header消息的校验)</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&#39;&#39;&#39;路径操作中导入依赖&#39;&#39;&#39;</span>


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">verify_token</span><span class="token punctuation">(</span>x_token<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> Header<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> x_token <span class="token operator">!=</span> <span class="token string">&quot;test_number&quot;</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;x_token is invalid&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> x_token


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">verify_key</span><span class="token punctuation">(</span>x_key<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> Header<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> x_key <span class="token operator">!=</span> <span class="token string">&quot;test_number&quot;</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;x_key is invalid&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> x_key


<span class="token decorator annotation punctuation">@app03<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/dependencyInPath&quot;</span><span class="token punctuation">,</span> dependencies<span class="token operator">=</span><span class="token punctuation">[</span>Depends<span class="token punctuation">(</span>verify_token<span class="token punctuation">)</span><span class="token punctuation">,</span> Depends<span class="token punctuation">(</span>verify_key<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">dependencyInPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">:</span> <span class="token string">&#39;user1&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;user2&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="全局依赖" tabindex="-1"><a class="header-anchor" href="#全局依赖" aria-hidden="true">#</a> 全局依赖</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>

<span class="token triple-quoted-string string">&quot;&quot;&quot;全局依赖&quot;&quot;&quot;</span>
<span class="token comment"># app03 = APIRouter(dependencies=[Depends(verify_token), Depends(verify_key)])</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-跨域处理" tabindex="-1"><a class="header-anchor" href="#_6-跨域处理" aria-hidden="true">#</a> 6.跨域处理</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> fastapi<span class="token punctuation">.</span>middleware<span class="token punctuation">.</span>cors <span class="token keyword">import</span> CORSMiddleware
<span class="token triple-quoted-string string">&#39;&#39;&#39;跨域处理&#39;&#39;&#39;</span>
app<span class="token punctuation">.</span>add_middleware<span class="token punctuation">(</span>
    CORSMiddleware<span class="token punctuation">,</span>
    allow_origins<span class="token operator">=</span><span class="token punctuation">[</span>
        <span class="token string">&quot;http://127.0.0.1&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;http://127.0.0.1:8080&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    allow_credentials<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
    allow_method<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    allow_header<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-异步任务" tabindex="-1"><a class="header-anchor" href="#_7-异步任务" aria-hidden="true">#</a> 7.异步任务</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> typing <span class="token keyword">import</span> Optional

<span class="token keyword">from</span> fastapi <span class="token keyword">import</span> APIRouter<span class="token punctuation">,</span> BackgroundTasks<span class="token punctuation">,</span> Depends


<span class="token keyword">def</span> <span class="token function">bg_task</span><span class="token punctuation">(</span>framework<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;README.md&quot;</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;## </span><span class="token interpolation"><span class="token punctuation">{</span>framework<span class="token punctuation">}</span></span><span class="token string"> 框架精讲&quot;</span></span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@app08<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">&quot;/background_tasks&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">run_bg_task</span><span class="token punctuation">(</span>framework<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> background_tasks<span class="token punctuation">:</span> BackgroundTasks<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    :param framework: 被调用的后台任务函数的参数
    :param background_tasks: FastAPI.BackgroundTasks
    :return:
    &quot;&quot;&quot;</span>
    background_tasks<span class="token punctuation">.</span>add_task<span class="token punctuation">(</span>bg_task<span class="token punctuation">,</span> framework<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;任务已在后台运行&quot;</span><span class="token punctuation">}</span>


<span class="token keyword">def</span> <span class="token function">continue_write_readme</span><span class="token punctuation">(</span>background_tasks<span class="token punctuation">:</span> BackgroundTasks<span class="token punctuation">,</span> q<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> q<span class="token punctuation">:</span>
        background_tasks<span class="token punctuation">.</span>add_task<span class="token punctuation">(</span>bg_task<span class="token punctuation">,</span> <span class="token string">&quot;\\n&gt; 整体的介绍 FastAPI，快速上手开发，结合 API 交互文档逐个讲解核心模块的使用\\n&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> q


<span class="token decorator annotation punctuation">@app08<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">&quot;/dependency/background_tasks&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">dependency_run_bg_task</span><span class="token punctuation">(</span>q<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> Depends<span class="token punctuation">(</span>continue_write_readme<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> q<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;README.md更新成功&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,60))])}const x=o(k,[["render",h],["__file","fastApi入门.html.vue"]]);export{x as default};
