import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as t,a as p}from"./app-DBc2jY3V.js";const o="/wf-site/assets/202302122042797-DDsSEFH9.gif",e="/wf-site/assets/202302160025232-DlVpue7J.png",c="/wf-site/assets/202302160054365-CRwy0Rjn.png",i="/wf-site/assets/202302160153593-B8ojAhva.png",u="/wf-site/assets/202302161804682-dtU_FLiI.png",l={};function d(k,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="_05-窗口-窗口控件、对话框以及相关功能类4" tabindex="-1"><a class="header-anchor" href="#_05-窗口-窗口控件、对话框以及相关功能类4" aria-hidden="true">#</a> 05.窗口/窗口控件、对话框以及相关功能类4</h1><h2 id="qdialogbuttonbox" tabindex="-1"><a class="header-anchor" href="#qdialogbuttonbox" aria-hidden="true">#</a> QDialogButtonBox</h2><p>上面介绍的几个对话框都是QDialog的子类，QDialogButtonBox有些特殊，和QDialog一样，也是 QWidget 的子类。</p><p>严格来说，QDialogButtonBox并不是一个对话框，只是一个管理按钮的容器，可以根据不同的系统环境匹配相应的布局。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> QDialogButtonBox

QDialogButtonBox<span class="token punctuation">(</span>buttons<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QDialogButtonBox<span class="token punctuation">.</span>StandardButton<span class="token punctuation">,</span> orientation<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>Qt<span class="token punctuation">.</span>Orientation<span class="token punctuation">,</span> parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QDialogButtonBox<span class="token punctuation">(</span>buttons<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QDialogButtonBox<span class="token punctuation">.</span>StandardButton<span class="token punctuation">,</span> parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QDialogButtonBox<span class="token punctuation">(</span>orientation<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>Qt<span class="token punctuation">.</span>Orientation<span class="token punctuation">,</span> parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QDialogButtonBox<span class="token punctuation">(</span>parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="方法介绍" tabindex="-1"><a class="header-anchor" href="#方法介绍" aria-hidden="true">#</a> 方法介绍</h4><p>常见的使用场景是将QDialogButtonBox 嵌入 QDialog中，用它管理 QDialog 的按钮。</p><p>当然，也可以将QDialogButonBox 嵌入主窗口中管理主窗口按钮。</p><p>Qt会为不同的系统自动匹配相应的样式，QDialogButtonBox会根据系统自动改变 应布局，主要的系统布局如表所示。</p><table><thead><tr><th>系统布局</th><th>值</th><th>描 述</th></tr></thead><tbody><tr><td>QDialogButtonBox.WinLayout</td><td>O</td><td>适用于 Windows 中的应用程序的策略</td></tr><tr><td>QDialogButtonBox.MacLayout</td><td>1</td><td>适用于macOS中的应用程序的策略</td></tr><tr><td>QDialogButtonBox.KdeLayout</td><td>2</td><td>适用于 KDE 中的应用程序的策略</td></tr><tr><td>QDialogButtonBox.GnomeLayout</td><td>3</td><td>适用于GNOME中的应用程序的策略</td></tr><tr><td>QDialogButtonBox.AndroidLayout</td><td>4</td><td>适用于Android中的应用程序的策略 这个枚举值是在Qt5.10中添加的</td></tr></tbody></table><ul><li><p>使用 QStyleFactory.keys0函数可以知道当前系统支持哪些样式</p><ul><li><p>Windows 10 支持&#39;windowsvista&#39;、&#39;Windows&#39;和&#39;Fusion&#39;这3种样式：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> QStyleFactory

<span class="token keyword">print</span><span class="token punctuation">(</span>QStyleFactory<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#[&#39;windowsvista&#39;, &#39;Windows&#39;, &#39;Fusion&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>使用QApplication.setStyle()函数可以设置样式</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> sys
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> QApplication<span class="token punctuation">,</span> QDialogButtonBox

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
    app<span class="token punctuation">.</span>setStyle<span class="token punctuation">(</span><span class="token string">&#39;Fusion&#39;</span><span class="token punctuation">)</span>
    demo <span class="token operator">=</span> QDialogButtonBox<span class="token punctuation">(</span><span class="token punctuation">)</span>
    demo<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>QDialogButtonBox 和QMessageBox 类似</p><ul><li>它们共用一套标准化按钮(如 Ok、Cancel,Yes 和 No等)</li><li>一套按钮角色(如 AcceptRole、RejectRole 等)，</li><li>及槽函数 accepted 和rejected 的实现方式。</li><li>除此之外，QDialogButtonBox多了两个信号发射方式。 <ul><li>helpRequested()：当基于 HelpRole 的按钮单击时触发。</li><li>clicked(button:QAbstractButton)： 当单击任意按钮时触发，携带参数 QAbstractButton</li></ul></li></ul></li></ul><h4 id="qdialogbuttonbox例子" tabindex="-1"><a class="header-anchor" href="#qdialogbuttonbox例子" aria-hidden="true">#</a> QDialogButtonBox例子</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: UTF-8 -*-</span>
<span class="token comment"># File date: Hi_2023/3/14 23:49</span>
<span class="token comment"># File_name: 01-QDialogButtonBox例子.py</span>


<span class="token keyword">import</span> sys
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtGui <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> <span class="token operator">*</span>


<span class="token keyword">class</span> <span class="token class-name">DialogButtonBox</span><span class="token punctuation">(</span>QWidget<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>DialogButtonBox<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span><span class="token string">&quot;QDialogButtonBox 例子&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
        layout <span class="token operator">=</span> QVBoxLayout<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setLayout<span class="token punctuation">(</span>layout<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>label <span class="token operator">=</span> QLabel<span class="token punctuation">(</span><span class="token string">&#39;显示信息&#39;</span><span class="token punctuation">)</span>
        layout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>label<span class="token punctuation">)</span>

        buttonBox_dialog <span class="token operator">=</span> self<span class="token punctuation">.</span>create_buttonBox<span class="token punctuation">(</span><span class="token punctuation">)</span>
        button1 <span class="token operator">=</span> QPushButton<span class="token punctuation">(</span><span class="token string">&quot;1、嵌入对话框中&quot;</span><span class="token punctuation">)</span>
        layout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>button1<span class="token punctuation">)</span>
        button1<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>show_dialog<span class="token punctuation">(</span>buttonBox_dialog<span class="token punctuation">)</span><span class="token punctuation">)</span>

        layout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>QLabel<span class="token punctuation">(</span><span class="token string">&#39;2、嵌入窗口中：&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        layout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>create_buttonBox<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">show_dialog</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> buttonBox<span class="token punctuation">)</span><span class="token punctuation">:</span>
        dialog <span class="token operator">=</span> QDialog<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        dialog<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span><span class="token string">&quot;Dialog + QDialogButtonBox demo&quot;</span><span class="token punctuation">)</span>
        layout <span class="token operator">=</span> QVBoxLayout<span class="token punctuation">(</span><span class="token punctuation">)</span>
        layout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>QLabel<span class="token punctuation">(</span><span class="token string">&#39;QDialogButtonBox嵌入到对话框中实例&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        layout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>buttonBox<span class="token punctuation">)</span>
        dialog<span class="token punctuation">.</span>setLayout<span class="token punctuation">(</span>layout<span class="token punctuation">)</span>
        dialog<span class="token punctuation">.</span>move<span class="token punctuation">(</span>self<span class="token punctuation">.</span>geometry<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>x<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>geometry<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>y<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">180</span><span class="token punctuation">)</span>
        <span class="token comment"># 绑定相应信号与槽，用于退出对话框</span>
        buttonBox<span class="token punctuation">.</span>accepted<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>dialog<span class="token punctuation">.</span>accept<span class="token punctuation">)</span>
        buttonBox<span class="token punctuation">.</span>rejected<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>dialog<span class="token punctuation">.</span>reject<span class="token punctuation">)</span>
        buttonBox<span class="token punctuation">.</span>setOrientation<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>Vertical<span class="token punctuation">)</span>  <span class="token comment"># 垂直排列</span>
        dialog<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">create_buttonBox</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        buttonBox <span class="token operator">=</span> QDialogButtonBox<span class="token punctuation">(</span><span class="token punctuation">)</span>
        buttonBox<span class="token punctuation">.</span>setStandardButtons<span class="token punctuation">(</span>QDialogButtonBox<span class="token punctuation">.</span>Cancel <span class="token operator">|</span> QDialogButtonBox<span class="token punctuation">.</span>Ok <span class="token operator">|</span> QDialogButtonBox<span class="token punctuation">.</span>Reset <span class="token operator">|</span> QDialogButtonBox<span class="token punctuation">.</span>Help <span class="token operator">|</span> QDialogButtonBox<span class="token punctuation">.</span>Yes <span class="token operator">|</span> QDialogButtonBox<span class="token punctuation">.</span>No <span class="token operator">|</span> QDialogButtonBox<span class="token punctuation">.</span>Apply<span class="token punctuation">)</span>
        <span class="token comment"># 自定义按钮</span>
        buttonBox<span class="token punctuation">.</span>addButton<span class="token punctuation">(</span>QPushButton<span class="token punctuation">(</span><span class="token string">&#39;MyOk-ApplyRole&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> buttonBox<span class="token punctuation">.</span>ButtonRole<span class="token punctuation">.</span>ApplyRole<span class="token punctuation">)</span>
        buttonBox<span class="token punctuation">.</span>addButton<span class="token punctuation">(</span>QPushButton<span class="token punctuation">(</span><span class="token string">&#39;MyOk-AcceptRole&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> buttonBox<span class="token punctuation">.</span>ButtonRole<span class="token punctuation">.</span>AcceptRole<span class="token punctuation">)</span>
        buttonBox<span class="token punctuation">.</span>addButton<span class="token punctuation">(</span>QPushButton<span class="token punctuation">(</span><span class="token string">&#39;MyNo-AcceptRole&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> buttonBox<span class="token punctuation">.</span>ButtonRole<span class="token punctuation">.</span>RejectRole<span class="token punctuation">)</span>
        <span class="token comment"># 绑定信号与槽</span>
        buttonBox<span class="token punctuation">.</span>accepted<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>label<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>self<span class="token punctuation">.</span>label<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;\\n触发了accepted&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        buttonBox<span class="token punctuation">.</span>rejected<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>label<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>self<span class="token punctuation">.</span>label<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;\\n触发了rejected&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        buttonBox<span class="token punctuation">.</span>helpRequested<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>label<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>self<span class="token punctuation">.</span>label<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;\\n触发了helpRequested&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        buttonBox<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span> button<span class="token punctuation">:</span> self<span class="token punctuation">.</span>label<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&#39;点击了按钮：&#39;</span> <span class="token operator">+</span> button<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> buttonBox


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
    app<span class="token punctuation">.</span>setStyle<span class="token punctuation">(</span><span class="token string">&#39;Fusion&#39;</span><span class="token punctuation">)</span>
    demo <span class="token operator">=</span> DialogButtonBox<span class="token punctuation">(</span><span class="token punctuation">)</span>
    demo<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="停靠控件qdockwidget" tabindex="-1"><a class="header-anchor" href="#停靠控件qdockwidget" aria-hidden="true">#</a> 停靠控件QDockWidget</h2><figure><img src="`+o+`" alt="QDockWidget" tabindex="0" loading="lazy"><figcaption>QDockWidget</figcaption></figure><p>停靠控件QDockWidget主要应用在主窗口中,用鼠标可以将其拖拽到不同的停靠区域中。停靠控件通常作为容器来使用,需要在其内部添加一些常用控件。</p><p>停靠控件由标题栏和内容区构成,标题栏上显示窗口标题,还有浮动按钮和关闭按钮。</p><p>停靠控件QDockWidget继承自QWidget。用QDockWidget类创建停靠控件实例的方法如下所示,其中title是停靠控件的窗口标题,parent是停靠控件所在的窗口。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> QDockWidget

QDockWidget<span class="token punctuation">(</span>parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> flags<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>Qt<span class="token punctuation">.</span>WindowType<span class="token operator">=</span>Default<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>WindowFlags<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QDockWidget<span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> flags<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>Qt<span class="token punctuation">.</span>WindowType<span class="token operator">=</span>Default<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>WindowFlags<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="停靠控件-qdockwidget的常用方法" tabindex="-1"><a class="header-anchor" href="#停靠控件-qdockwidget的常用方法" aria-hidden="true">#</a> 停靠控件 QDockWidget的常用方法</h3><p>停靠控件 QDockWidget主要方法介绍如下。</p><ul><li>setWidget(QWidget)方法设置停靠控件工作区中的控件,通常选择容器类控件和表格类控件作为工作区的控件,用widget()方法获取工作区中的控件。</li><li>setTitleBarWidget(QWidget)方法设置标题栏中的控件,用titleBarWidget()方法获取标题栏中的控件。</li><li>setAllowedAreas(Qt.DockWidgetArea)方法设置停靠控件可以停靠的区域,用allowedAreas()方法获取可以停靠的区域,用isAreaAllowed(Qt.DockWidgetArea)方法获取指定的区域是否允许停靠。</li><li>setFeatures(QDock Widget.DockWidgetFeatures)方法设置停靠控件的特征,其中参数QDock Widget.Dock WidgetFeature 可以取以下值,用features()方法获取特征。 <ul><li>QDockWidget.DockWidgetClosable(可关闭)</li><li>QDock Widget.DockWidgetMovable(可移动)</li><li>QDockWidget.DockWidgetFloatable(可悬停)</li><li>QDockWidget.DockWidgetVerticalTitleBar(有竖向标题)</li><li>QDockWidget.AllDockWidgetFeatures(有以上所有特征)</li><li>QDockWidget.NoDockWidgetFeatures(没有以上特征)</li></ul></li><li>toggleViewAction()方法返回一个QAction动作对象,单击该动作对象可以切换停靠窗口的可见状态,即该动作是一个对停靠控件窗口进行显示或关闭的开关。如果将该动作加到菜单上,对应菜单栏的文字即为停靠窗口的title文字,这样就可以在菜单上单击对应菜单项进行停靠窗口的关闭和显示。</li></ul><p>停靠控件 QDockWidget的常用方法如表所示:</p><table><thead><tr><th>QDock Widget的方法及参数类型</th><th>返回值的类型</th><th>说 明</th></tr></thead><tbody><tr><td>setAllowedAreas(Qt.Dock WidgetArea)</td><td>None</td><td>设置可停靠区域</td></tr><tr><td>isAreaAllowed(Qt.Dock WidgetArea)</td><td>bool</td><td>获取区域是否允许停靠</td></tr><tr><td>allowedAreas()</td><td>Qt.DockWidgetArea</td><td>获取可停靠的区域</td></tr><tr><td>setFeatures(QDockWidget.DockWidgetFeatures)</td><td>None</td><td>设置特征</td></tr><tr><td>setFloating(bool)</td><td>None</td><td>设置成浮动状态</td></tr><tr><td>isFloating()</td><td>bool</td><td>获取是否处于浮动状态</td></tr><tr><td>setTitleBarWidget(QWidget)</td><td>None</td><td>设置标题栏中的控件</td></tr><tr><td>titleBarWidget()</td><td>QWidget</td><td>获取标题栏中的控件</td></tr><tr><td>setWidget(QWidget)</td><td>None</td><td>添加控件</td></tr><tr><td>widget()</td><td>QWidget</td><td>获取控件</td></tr><tr><td>toggleViewAction()</td><td>QAction</td><td>获取隐藏或显示的动作</td></tr></tbody></table><h3 id="停靠控件-qdockwidget的信号" tabindex="-1"><a class="header-anchor" href="#停靠控件-qdockwidget的信号" aria-hidden="true">#</a> 停靠控件 QDockWidget的信号</h3><table><thead><tr><th>QDockWidget的信号及参数类型</th><th>说明</th></tr></thead><tbody><tr><td>allowedAreasChanged(Qt.DockWidgetArea)</td><td>允许停靠的区域发生改变时发送信号</td></tr><tr><td>dockLocationChanged(Qt.DockWidgetArea)</td><td>停靠的区域发生改变时发送信号</td></tr><tr><td>featuresChanged(QDockWidget.DockWidgetFeature)</td><td>特征改变时发送信号</td></tr><tr><td>topLevelChanged(bool)</td><td>悬浮和停靠状态转换时发送信号</td></tr><tr><td>visibilityChanged(bool)</td><td>可见性改变时发送信号</td></tr></tbody></table><h2 id="菜单栏qmenubar、菜单qmenu、动作qaction" tabindex="-1"><a class="header-anchor" href="#菜单栏qmenubar、菜单qmenu、动作qaction" aria-hidden="true">#</a> 菜单栏QMenuBar、菜单QMenu、动作QAction</h2><p>对于一个可视化程序界面,往往将各种操作命令集中到菜单栏或工具栏的按钮上,通过单击菜单或工具栏中的按钮来触发动作,每个菜单和按钮实现一定的功能。一般菜单栏由多个菜单构成,如图3-3所示,菜单下面又有动作、子菜单和分隔条,子菜单下面又有动作,还可以有子菜单,动作上有图标和快捷键。</p><h3 id="菜单的构成" tabindex="-1"><a class="header-anchor" href="#菜单的构成" aria-hidden="true">#</a> 菜单的构成</h3><p>建立一个菜单分为3步,如图所示。</p><ul><li>第1步需要建立放置菜单的容器,即菜单栏;</li><li>第2步,在菜单栏上添加菜单,或者在菜单上添加子菜单；</li><li>第3步,在菜单栏、菜单或子菜单下面添加动作,并为动作编写槽函数。菜单一般不执行命令,其作用类似于标签,只有动作才可以发送信号,执行关联的槽函数。</li></ul><figure><img src="`+e+`" alt="image-20230216002511945" tabindex="0" loading="lazy"><figcaption>image-20230216002511945</figcaption></figure><h3 id="菜单栏qmenubar" tabindex="-1"><a class="header-anchor" href="#菜单栏qmenubar" aria-hidden="true">#</a> 菜单栏QMenuBar</h3><p>菜单栏QMenuBar 用于放置菜单和动作,它继承自QWidget。用QMenuBar创建菜单栏实例的方法如下,其中parent 是放置菜单栏的父窗口。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> QMenuBar

QMenuBar<span class="token punctuation">(</span>parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="菜单栏qmenubar的方法与信号" tabindex="-1"><a class="header-anchor" href="#菜单栏qmenubar的方法与信号" aria-hidden="true">#</a> 菜单栏QMenuBar的方法与信号</h4><p>菜单栏QMenuBar 的常用方法如表所示。</p><p>菜单栏上可以添加菜单、动作和分隔条,用addMenu(QMenu)方法和 addAction(QAction)方法可以添加已经提前定义好的菜单和动作；</p><p>用addMenu(str)方法和addMenu(QIcon,str)方法可以创建并添加菜单,并返回新建立的菜单；</p><p>用addAction(str)方法可以用字符串创建并添加动作,并返回动作；</p><p>用setCornerWidget(QWidget, Qt.Corner=Qt.TopRightCorner)方法可以在菜单栏的角落位置添加控件,位置可取 Qt.TopLeftCorner,Qt.TopRightCorner,Qt.BottomLeftCorner或 Qt.BottomRightCorner。</p><table><thead><tr><th>QMenuBar的方法及参数类型</th><th>返回值的类型</th><th>说明</th></tr></thead><tbody><tr><td>addMenu(QMenu)</td><td>QAction</td><td>添加已经存在的菜单</td></tr><tr><td>addMenu(title: str)</td><td>QMenu</td><td>用字符串添加菜单,并返回菜单</td></tr><tr><td>addMenu(QIcon,title: str)</td><td>QMenu</td><td>用字符串和图标添加菜单,并返回菜单</td></tr><tr><td>addAction(QAction)</td><td>None</td><td>添加已经存在的动作</td></tr><tr><td>addAction(text:str)</td><td>QAction</td><td>用字符串添加动作,并返回添加的动作</td></tr><tr><td>insertMenu(before:QAction,QMenu)</td><td>QAction</td><td>在动作之前插入菜单</td></tr><tr><td>addSeparator()</td><td>QAction</td><td>添加分隔条</td></tr><tr><td>insertSeparator(before:QAction)</td><td>QAction</td><td>在动作之前插入分隔条</td></tr><tr><td>clear()</td><td>None</td><td>清空所有的菜单和动作</td></tr><tr><td>setConerWidget(QWidget, Qt.Comer=Qt.TopRightCorner)</td><td>None</td><td>在菜单栏的角落位置添加控件</td></tr><tr><td>cornerWidget(Qt.Coner=Qt.TopRightCorner)</td><td>QWidget</td><td>获取角落位置的控件</td></tr><tr><td>Cslot]setVisible(visible: bool)</td><td>None</td><td>设置菜单栏是否可见</td></tr><tr><td>setActiveAction(QAction)</td><td>None</td><td>设置高亮显示的动作</td></tr><tr><td>actionAt(QPoint)</td><td>QAction</td><td>获取指定位置处的动作</td></tr><tr><td>actionGeometry(QAction)</td><td>QRect</td><td>获取动作所处的区域</td></tr></tbody></table><p>菜单栏QMenuBar有两个信号,当单击莱单栏上的菜单或动作时,会发送riggered(QAction)信号；当光标滑过动作时,会发送 hovered(QAction)信号。</p><h4 id="菜单栏qmenubar-的应用实例" tabindex="-1"><a class="header-anchor" href="#菜单栏qmenubar-的应用实例" aria-hidden="true">#</a> 菜单栏QMenuBar 的应用实例</h4><p>下面的程序创建一个菜单栏和一个多行纯文本控件,采用竖直布局。在菜单栏中添加两个菜单和两个动作,一个动作可以打开文件,另一个动作退出程序。单击动作,通过菜单栏的信号triggered(QAction)识别单击的是哪个动作,从而采取不同的对应方法。</p><figure><img src="`+c+`" alt="image-20230216005418270" tabindex="0" loading="lazy"><figcaption>image-20230216005418270</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: UTF-8 -*-</span>
<span class="token comment"># File date: Hi_2023/3/19 1:38</span>
<span class="token comment"># File_name: 01-菜单栏QMenuBar 的应用实例.py</span>


<span class="token keyword">import</span> sys
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span><span class="token punctuation">(</span>QApplication<span class="token punctuation">,</span> QMenuBar<span class="token punctuation">,</span> QPlainTextEdit<span class="token punctuation">,</span> QVBoxLayout<span class="token punctuation">,</span> QWidget<span class="token punctuation">,</span> QFileDialog<span class="token punctuation">,</span> QMessageBox<span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">MyWindow</span><span class="token punctuation">(</span>QWidget<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>parent<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span><span class="token string">&quot;OMenuBar 应用实例&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setupUi<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">setupUi</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>menuBar <span class="token operator">=</span> QMenuBar<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 创建菜单栏</span>
        self<span class="token punctuation">.</span>plainText <span class="token operator">=</span> QPlainTextEdit<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 创建文本编辑器</span>
        vlayout <span class="token operator">=</span> QVBoxLayout<span class="token punctuation">(</span>self<span class="token punctuation">)</span>  <span class="token comment"># 创建竖直布局</span>
        vlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>menuBar<span class="token punctuation">)</span>
        vlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>plainText<span class="token punctuation">)</span>
        vlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>menuBar<span class="token punctuation">)</span>
        vlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>plainText<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>fileMenu <span class="token operator">=</span> self<span class="token punctuation">.</span>menuBar<span class="token punctuation">.</span>addMenu<span class="token punctuation">(</span><span class="token string">&quot;文件(&amp;F)&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 菜单栏中添加菜单</span>
        self<span class="token punctuation">.</span>editMenu <span class="token operator">=</span> self<span class="token punctuation">.</span>menuBar<span class="token punctuation">.</span>addMenu<span class="token punctuation">(</span><span class="token string">&quot;编辑(&amp;E)&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 菜单栏中添加菜单</span>
        self<span class="token punctuation">.</span>menuBar<span class="token punctuation">.</span>addSeparator<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 菜单栏中添加分隔条</span>
        self<span class="token punctuation">.</span>actNew <span class="token operator">=</span> self<span class="token punctuation">.</span>menuBar<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span><span class="token string">&#39;新建(&amp;N)&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 菜单栏中添加动作</span>
        self<span class="token punctuation">.</span>actOpen <span class="token operator">=</span> self<span class="token punctuation">.</span>menuBar<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span><span class="token string">&quot;打开(&amp;O)&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 菜单栏中添加动作</span>
        self<span class="token punctuation">.</span>actQuit <span class="token operator">=</span> self<span class="token punctuation">.</span>menuBar<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span><span class="token string">&quot;退出(&amp;Q)&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 菜单栏中添加动作</span>
        self<span class="token punctuation">.</span>menuBar<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>action_triggered<span class="token punctuation">)</span>  <span class="token comment"># 菜单栏信号与槽函数的连接</span>

    <span class="token keyword">def</span> <span class="token function">action_triggered</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 菜单栏的槽函数</span>
        <span class="token keyword">if</span> action <span class="token operator">==</span> self<span class="token punctuation">.</span>actNew<span class="token punctuation">:</span>  <span class="token comment"># 新建动作</span>
            self<span class="token punctuation">.</span>plainText<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">elif</span> action <span class="token operator">==</span> self<span class="token punctuation">.</span>actOpen<span class="token punctuation">:</span>  <span class="token comment"># 打开动作</span>
            filename<span class="token punctuation">,</span> <span class="token builtin">filter</span> <span class="token operator">=</span> QFileDialog<span class="token punctuation">.</span>getOpenFileName<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token string">&quot;打开&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;文本文件(*.txt)&quot;</span><span class="token punctuation">)</span>

            <span class="token keyword">try</span><span class="token punctuation">:</span>
                fp <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span>
                string <span class="token operator">=</span> fp<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>
                self<span class="token punctuation">.</span>plainText<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token keyword">for</span> i <span class="token keyword">in</span> string<span class="token punctuation">:</span>
                    self<span class="token punctuation">.</span>plainText<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
                fp<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

            <span class="token keyword">except</span><span class="token punctuation">:</span>
                QMessageBox<span class="token punctuation">.</span>critical<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token string">&quot;打开文件失败&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;请选择适合的文件!&quot;</span><span class="token punctuation">)</span>

        <span class="token keyword">elif</span> action <span class="token operator">==</span> self<span class="token punctuation">.</span>actQuit<span class="token punctuation">:</span>  <span class="token comment"># 退出动作</span>
            self<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
    windows <span class="token operator">=</span> MyWindow<span class="token punctuation">(</span><span class="token punctuation">)</span>
    windows<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="菜单qmenu" tabindex="-1"><a class="header-anchor" href="#菜单qmenu" aria-hidden="true">#</a> 菜单QMenu</h3><p>菜单QMenu用于放置动作和子菜单,通常将动作分类放到不同的菜单中。菜单QMenu 继承自QWidget。用QMenu类创建菜单实例的方法如下所示:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> QMenu

QMenu<span class="token punctuation">(</span>parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QMenu<span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="菜单qmenu的常用方法" tabindex="-1"><a class="header-anchor" href="#菜单qmenu的常用方法" aria-hidden="true">#</a> 菜单QMenu的常用方法</h4><p>菜单QMenu的常用方法如表3-8所示。菜单的主要方法是在菜单列表中添加动作、子菜单和分隔条、主要方法介绍如下。</p><ul><li>用addAction(QAction)方法可以添加一个已经定义好的动作；用addAction(text;str)或addAction(icon:QIcon,text:str)方法可以添加一个新创建的动作,并返回动作,其中text是动作在菜单中的名称,icon是图标。</li><li>用addMenu(QMenu)方法可以将已定义好的菜单作为子菜单加入到菜单中；用addMenu(title:str)方法或addMenu(icon:QIcon,title:str)方法可以添加新的子菜单,并返回子菜单</li><li>用addSection(text: str)、addSection(icon: QIcon,text: str)或addSeparator()方法可以添加分隔条,并返回对应的动作。分隔条的显示样式与操作系统有关,例如忽略动作的名称、图标或子菜单,或者显示成横线或名称。利用分隔条返回的动作,用动作的setSeparator(bool)方法可以将分隔条切换成动作,或者将动作切换成分隔条。</li><li>用setTearOffEnabled(bool)方法可以将菜单定义成可撕扯菜单,可撕扯菜单在其动作列表中显示一条虚线,单击该虚线可以把菜单及动作列表弹出；用showTearOffMenu()方法或 showTearOf[Menu(QPoint)方法可以将可撕扯菜单在指定位置显示。</li><li>用popup(pos: QPoint, at: QAction=None)方法或 exec(pos; QPoint, at: QAction=None)方法可以在指定位置(全局坐标系)弹出菜单,如果指定了 at参数,则指定的动作显示在指定位置。</li></ul><table><thead><tr><th>QMenu的方法及参数类型</th><th>返回值的类型</th><th>说 明</th></tr></thead><tbody><tr><td>addAction(QAction)</td><td>None</td><td>在菜单中添加已存在的动作</td></tr><tr><td>addAction(text: str)</td><td>QAction</td><td>在菜单中添加新动作</td></tr><tr><td>addAction(icon: QIcon,text, str)</td><td>QAction</td><td>在菜单中添加新动作</td></tr><tr><td>addMenu(QMenu)</td><td>QAction</td><td>在菜单中添加子菜单</td></tr><tr><td>addMenu(title: str)</td><td>QMenu</td><td>在菜单中添加新子菜单</td></tr><tr><td>addMenu(icon: Qlcon,title: str)</td><td>QMenu</td><td>在菜单中添加新子菜单</td></tr><tr><td>addSection(text: str)</td><td>QAction</td><td>添加分隔条</td></tr><tr><td>addSection(icon: Qlcon,text, s1r)</td><td>QAction</td><td>添加分隔条</td></tr><tr><td>addSeparator()</td><td>QAction</td><td>添加分隔条</td></tr><tr><td>insertMenu(before: QAction, menu: QMenu)</td><td>QAction</td><td>在动作前插入子菜单</td></tr><tr><td>insertSection(before: QAction, text: str)</td><td>QAction</td><td>在动作前插人分隔条</td></tr><tr><td>insertSection(before: QAction, Qlcon, text:str)</td><td>QAction</td><td>在动作前插人分隔条</td></tr><tr><td>insertSection(before:QAction)</td><td>QAction</td><td>在动作前插人分隔条</td></tr><tr><td>insertSeparator(before: QAction)</td><td>QAction</td><td>在动作前插人分隔条</td></tr><tr><td>removeAction(action:QAction)</td><td>None</td><td>从菜单中移除动作</td></tr><tr><td>clear()</td><td>None</td><td>清空菜单</td></tr><tr><td>actions()</td><td>List[QAction]</td><td>获取菜单中的动作</td></tr><tr><td>isEmpty()</td><td>int</td><td>获取菜单是否为空</td></tr><tr><td>actionAt(QPoint)</td><td>QAction</td><td>获取指定位置处的动作</td></tr><tr><td>columnCount()</td><td>int</td><td>获取列的数量</td></tr><tr><td>menuAction()</td><td>QAction</td><td>获取菜单对应的动作</td></tr><tr><td>setSeparatorsCollapsible(bool)</td><td>None</td><td>合并相邻的分隔条,开始和结尾的分隔条 不可见</td></tr><tr><td>setTearOffEnabled(bool)</td><td>None</td><td>设置成可撕扯菜单</td></tr><tr><td>showTearOffMenu()</td><td>None</td><td>以可撕扯菜单形式弹出菜单</td></tr><tr><td>showTearOffMenu(pos:QPoint)</td><td>None</td><td>以可撕扯菜单形式在指定位置弹出菜单</td></tr><tr><td>hideTearOffMenu()</td><td>None</td><td>隐藏可撕扯菜单</td></tr><tr><td>isTearOffEnabled()</td><td>bool</td><td>获取是否是可撕扯菜单</td></tr><tr><td>isTearOffMenuVisible()</td><td>None</td><td>获取可撕扯菜单是否可见</td></tr><tr><td>setTitle(title: str)</td><td>None</td><td>设置菜单的标题</td></tr><tr><td>title()</td><td>str</td><td>获取菜单的标题</td></tr><tr><td>setActiveAction(act: QAction)</td><td>None</td><td>设置活跃的动作高亮显示</td></tr><tr><td>activeAction()</td><td>QAction</td><td>获取活跃的动作</td></tr><tr><td>setDefaultAction(QAction)</td><td>None</td><td>设置默认动作,以粗体字显示</td></tr><tr><td>defaultAction()</td><td>QAction</td><td>获取默认的动作</td></tr><tr><td>setIcon(icon:Union[QIcon,QPixmap])</td><td>None</td><td>设置菜单的图标</td></tr><tr><td>setToolTipsVisible(visible: bool)</td><td>None</td><td>设置提示信息是否可见</td></tr><tr><td>POPup(pos: QPoint, at: QAction=None)</td><td>None</td><td>在指定位置显示菜单,并可使菜单中的动 作显示在指定位置</td></tr><tr><td>[static]exec()</td><td>QAction</td><td>显示菜单,返回被触发的动作,如果没有则 返回 None</td></tr><tr><td>[static]exec(pos;QPoint,at: QAction=None)</td><td>QAction</td><td>在指定位置显示菜单</td></tr><tr><td>[static]exec(Sequence[QAction], pos: QPoint, at: QAction=None, parent: QWidget=None)</td><td>QAction</td><td>在指定位置显示菜单,当用pos无法确定 位置时,用父控件 parent辅助确定位置</td></tr></tbody></table><h4 id="菜单qmenu的信号" tabindex="-1"><a class="header-anchor" href="#菜单qmenu的信号" aria-hidden="true">#</a> 菜单QMenu的信号</h4><p>菜单QMenu的信号如表所示,最常用的是triggered(QAction)信号,其发送的是被激发的动作。</p><table><thead><tr><th>QMenu的信号及参数类型</th><th>说 明</th></tr></thead><tbody><tr><td>aboutToShow()</td><td>菜单将要显示时发送信号</td></tr><tr><td>aboutToHide()</td><td>菜单将要隐藏时发送信号</td></tr><tr><td>hovered(QAction)</td><td>鼠标滑过菜单时发送信号</td></tr><tr><td>triggered(QAction)</td><td>动作被激发时发送信号</td></tr></tbody></table><h4 id="qmenu-例子" tabindex="-1"><a class="header-anchor" href="#qmenu-例子" aria-hidden="true">#</a> Qmenu 例子</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> sys
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtGui <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">import</span> os

os<span class="token punctuation">.</span>chdir<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">MenuDemo</span><span class="token punctuation">(</span>QMainWindow<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>MenuDemo<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>parent<span class="token punctuation">)</span>

        widget <span class="token operator">=</span> QWidget<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setCentralWidget<span class="token punctuation">(</span>widget<span class="token punctuation">)</span>

        topFiller <span class="token operator">=</span> QWidget<span class="token punctuation">(</span><span class="token punctuation">)</span>
        topFiller<span class="token punctuation">.</span>setSizePolicy<span class="token punctuation">(</span>QSizePolicy<span class="token punctuation">.</span>Expanding<span class="token punctuation">,</span> QSizePolicy<span class="token punctuation">.</span>Expanding<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>infoLabel <span class="token operator">=</span> QLabel<span class="token punctuation">(</span><span class="token string">&quot;&lt;i&gt;Choose a menu option, or right-click to invoke a context menu&lt;/i&gt;&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>infoLabel<span class="token punctuation">.</span>setFrameStyle<span class="token punctuation">(</span>QFrame<span class="token punctuation">.</span>StyledPanel <span class="token operator">|</span> QFrame<span class="token punctuation">.</span>Sunken<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>infoLabel<span class="token punctuation">.</span>setAlignment<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>AlignCenter<span class="token punctuation">)</span>

        bottomFiller <span class="token operator">=</span> QWidget<span class="token punctuation">(</span><span class="token punctuation">)</span>
        bottomFiller<span class="token punctuation">.</span>setSizePolicy<span class="token punctuation">(</span>QSizePolicy<span class="token punctuation">.</span>Expanding<span class="token punctuation">,</span> QSizePolicy<span class="token punctuation">.</span>Expanding<span class="token punctuation">)</span>

        layout <span class="token operator">=</span> QVBoxLayout<span class="token punctuation">(</span><span class="token punctuation">)</span>
        layout<span class="token punctuation">.</span>setContentsMargins<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
        layout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>topFiller<span class="token punctuation">)</span>
        layout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>infoLabel<span class="token punctuation">)</span>
        layout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>bottomFiller<span class="token punctuation">)</span>
        widget<span class="token punctuation">.</span>setLayout<span class="token punctuation">(</span>layout<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>createActions<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>createMenus<span class="token punctuation">(</span><span class="token punctuation">)</span>

        message <span class="token operator">=</span> <span class="token string">&quot;A context menu is available by right-clicking&quot;</span>
        self<span class="token punctuation">.</span>statusBar<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>showMessage<span class="token punctuation">(</span>message<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span><span class="token string">&quot;Menus&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setMinimumSize<span class="token punctuation">(</span><span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token number">480</span><span class="token punctuation">,</span> <span class="token number">320</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">contextMenuEvent</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>
        menu <span class="token operator">=</span> QMenu<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        menu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>cutAct<span class="token punctuation">)</span>
        menu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>copyAct<span class="token punctuation">)</span>
        menu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>pasteAct<span class="token punctuation">)</span>
        menu<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>globalPos<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">newFile</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>infoLabel<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&quot;Invoked &lt;b&gt;File|New&lt;/b&gt;&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">open</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>infoLabel<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&quot;Invoked &lt;b&gt;File|Open&lt;/b&gt;&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">save</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>infoLabel<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&quot;Invoked &lt;b&gt;File|Save&lt;/b&gt;&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">print</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>infoLabel<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&quot;Invoked &lt;b&gt;File|Print&lt;/b&gt;&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">undo</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>infoLabel<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&quot;Invoked &lt;b&gt;Edit|Undo&lt;/b&gt;&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">redo</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>infoLabel<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&quot;Invoked &lt;b&gt;Edit|Redo&lt;/b&gt;&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">cut</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>infoLabel<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&quot;Invoked &lt;b&gt;Edit|Cut&lt;/b&gt;&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">copy</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>infoLabel<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&quot;Invoked &lt;b&gt;Edit|Copy&lt;/b&gt;&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">paste</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>infoLabel<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&quot;Invoked &lt;b&gt;Edit|Paste&lt;/b&gt;&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">bold</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>infoLabel<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&quot;Invoked &lt;b&gt;Edit|Format|Bold&lt;/b&gt;&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">italic</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>infoLabel<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&quot;Invoked &lt;b&gt;Edit|Format|Italic&lt;/b&gt;&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">leftAlign</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>infoLabel<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&quot;Invoked &lt;b&gt;Edit|Format|Left Align&lt;/b&gt;&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">rightAlign</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>infoLabel<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&quot;Invoked &lt;b&gt;Edit|Format|Right Align&lt;/b&gt;&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">justify</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>infoLabel<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&quot;Invoked &lt;b&gt;Edit|Format|Justify&lt;/b&gt;&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">center</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>infoLabel<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&quot;Invoked &lt;b&gt;Edit|Format|Center&lt;/b&gt;&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">setLineSpacing</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>infoLabel<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&quot;Invoked &lt;b&gt;Edit|Format|Set Line Spacing&lt;/b&gt;&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">setParagraphSpacing</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>infoLabel<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&quot;Invoked &lt;b&gt;Edit|Format|Set Paragraph Spacing&lt;/b&gt;&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">about</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>infoLabel<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&quot;Invoked &lt;b&gt;Help|About&lt;/b&gt;&quot;</span><span class="token punctuation">)</span>
        QMessageBox<span class="token punctuation">.</span>about<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token string">&quot;About Menu&quot;</span><span class="token punctuation">,</span>
                          <span class="token string">&quot;The &lt;b&gt;Menu&lt;/b&gt; example shows how to create menu-bar menus and context menus.&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">aboutQt</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>infoLabel<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&quot;Invoked &lt;b&gt;Help|About Qt&lt;/b&gt;&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">createActions</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>newAct <span class="token operator">=</span> QAction<span class="token punctuation">(</span>QIcon<span class="token punctuation">(</span><span class="token string">&quot;./images/new.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&amp;New&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>newAct<span class="token punctuation">.</span>setShortcuts<span class="token punctuation">(</span>QKeySequence<span class="token punctuation">.</span>New<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>newAct<span class="token punctuation">.</span>setStatusTip<span class="token punctuation">(</span><span class="token string">&quot;Create a new file&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>newAct<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>newFile<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>openAct <span class="token operator">=</span> QAction<span class="token punctuation">(</span>QIcon<span class="token punctuation">(</span><span class="token string">&quot;./images/open.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&amp;Open...&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>openAct<span class="token punctuation">.</span>setShortcuts<span class="token punctuation">(</span>QKeySequence<span class="token punctuation">.</span>Open<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>openAct<span class="token punctuation">.</span>setStatusTip<span class="token punctuation">(</span><span class="token string">&quot;Open an existing file&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>openAct<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>saveAct <span class="token operator">=</span> QAction<span class="token punctuation">(</span>QIcon<span class="token punctuation">(</span><span class="token string">&quot;./images/save.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;&amp;Save&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>saveAct<span class="token punctuation">.</span>setShortcuts<span class="token punctuation">(</span>QKeySequence<span class="token punctuation">.</span>Save<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>saveAct<span class="token punctuation">.</span>setStatusTip<span class="token punctuation">(</span><span class="token string">&quot;Save the document to disk&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>saveAct<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>save<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>printAct <span class="token operator">=</span> QAction<span class="token punctuation">(</span><span class="token string">&quot;&amp;Print...&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>printAct<span class="token punctuation">.</span>setShortcuts<span class="token punctuation">(</span>QKeySequence<span class="token punctuation">.</span>Print<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>printAct<span class="token punctuation">.</span>setStatusTip<span class="token punctuation">(</span><span class="token string">&quot;Print the document&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>printAct<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span><span class="token keyword">print</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>exitAct <span class="token operator">=</span> QAction<span class="token punctuation">(</span><span class="token string">&quot;E&amp;xit&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>exitAct<span class="token punctuation">.</span>setShortcuts<span class="token punctuation">(</span>QKeySequence<span class="token punctuation">.</span>Quit<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>exitAct<span class="token punctuation">.</span>setStatusTip<span class="token punctuation">(</span><span class="token string">&quot;Exit the application&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>exitAct<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>close<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>undoAct <span class="token operator">=</span> QAction<span class="token punctuation">(</span><span class="token string">&quot;&amp;Undo&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>undoAct<span class="token punctuation">.</span>setShortcuts<span class="token punctuation">(</span>QKeySequence<span class="token punctuation">.</span>Undo<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>undoAct<span class="token punctuation">.</span>setStatusTip<span class="token punctuation">(</span><span class="token string">&quot;Undo the last operation&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>undoAct<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>undo<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>redoAct <span class="token operator">=</span> QAction<span class="token punctuation">(</span><span class="token string">&quot;&amp;Redo&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>redoAct<span class="token punctuation">.</span>setShortcuts<span class="token punctuation">(</span>QKeySequence<span class="token punctuation">.</span>Redo<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>redoAct<span class="token punctuation">.</span>setStatusTip<span class="token punctuation">(</span><span class="token string">&quot;Redo the last operation&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>redoAct<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>redo<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>cutAct <span class="token operator">=</span> QAction<span class="token punctuation">(</span><span class="token string">&quot;Cu&amp;t&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>cutAct<span class="token punctuation">.</span>setShortcuts<span class="token punctuation">(</span>QKeySequence<span class="token punctuation">.</span>Cut<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>cutAct<span class="token punctuation">.</span>setStatusTip<span class="token punctuation">(</span><span class="token string">&quot;Cut the current selection&#39;s contents to the clipboard&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>cutAct<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>cut<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>copyAct <span class="token operator">=</span> QAction<span class="token punctuation">(</span><span class="token string">&quot;&amp;Copy&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>copyAct<span class="token punctuation">.</span>setShortcuts<span class="token punctuation">(</span>QKeySequence<span class="token punctuation">.</span>Copy<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>copyAct<span class="token punctuation">.</span>setStatusTip<span class="token punctuation">(</span><span class="token string">&quot;Copy the current selection&#39;s contents to the clipboard&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>copyAct<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>copy<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>pasteAct <span class="token operator">=</span> QAction<span class="token punctuation">(</span><span class="token string">&quot;&amp;Paste&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>pasteAct<span class="token punctuation">.</span>setShortcuts<span class="token punctuation">(</span>QKeySequence<span class="token punctuation">.</span>Paste<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>pasteAct<span class="token punctuation">.</span>setStatusTip<span class="token punctuation">(</span><span class="token string">&quot;Paste the clipboard&#39;s contents into the current selection&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>pasteAct<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>paste<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>boldAct <span class="token operator">=</span> QAction<span class="token punctuation">(</span><span class="token string">&quot;&amp;Bold&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>boldAct<span class="token punctuation">.</span>setCheckable<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>boldAct<span class="token punctuation">.</span>setShortcut<span class="token punctuation">(</span>QKeySequence<span class="token punctuation">.</span>Bold<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>boldAct<span class="token punctuation">.</span>setStatusTip<span class="token punctuation">(</span><span class="token string">&quot;Make the text bold&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>boldAct<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>bold<span class="token punctuation">)</span>

        boldFont <span class="token operator">=</span> self<span class="token punctuation">.</span>boldAct<span class="token punctuation">.</span>font<span class="token punctuation">(</span><span class="token punctuation">)</span>
        boldFont<span class="token punctuation">.</span>setBold<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>boldAct<span class="token punctuation">.</span>setFont<span class="token punctuation">(</span>boldFont<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>italicAct <span class="token operator">=</span> QAction<span class="token punctuation">(</span><span class="token string">&quot;&amp;Italic&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>italicAct<span class="token punctuation">.</span>setCheckable<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>italicAct<span class="token punctuation">.</span>setShortcut<span class="token punctuation">(</span>QKeySequence<span class="token punctuation">.</span>Italic<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>italicAct<span class="token punctuation">.</span>setStatusTip<span class="token punctuation">(</span><span class="token string">&quot;Make the text italic&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>italicAct<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>italic<span class="token punctuation">)</span>

        italicFont <span class="token operator">=</span> self<span class="token punctuation">.</span>italicAct<span class="token punctuation">.</span>font<span class="token punctuation">(</span><span class="token punctuation">)</span>
        italicFont<span class="token punctuation">.</span>setItalic<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>italicAct<span class="token punctuation">.</span>setFont<span class="token punctuation">(</span>italicFont<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>setLineSpacingAct <span class="token operator">=</span> QAction<span class="token punctuation">(</span><span class="token string">&quot;Set &amp;Line Spacing...&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setLineSpacingAct<span class="token punctuation">.</span>setStatusTip<span class="token punctuation">(</span><span class="token string">&quot;Change the gap between the lines of a paragraph&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setLineSpacingAct<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>setLineSpacing<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>setParagraphSpacingAct <span class="token operator">=</span> QAction<span class="token punctuation">(</span><span class="token string">&quot;Set &amp;Paragraph Spacing...&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setParagraphSpacingAct<span class="token punctuation">.</span>setStatusTip<span class="token punctuation">(</span><span class="token string">&quot;Change the gap between paragraphs&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setParagraphSpacingAct<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>setParagraphSpacing<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>aboutAct <span class="token operator">=</span> QAction<span class="token punctuation">(</span><span class="token string">&quot;&amp;About&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>aboutAct<span class="token punctuation">.</span>setStatusTip<span class="token punctuation">(</span><span class="token string">&quot;Show the application&#39;s About box&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>aboutAct<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>about<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>aboutQtAct <span class="token operator">=</span> QAction<span class="token punctuation">(</span><span class="token string">&quot;About &amp;Qt&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>aboutQtAct<span class="token punctuation">.</span>setStatusTip<span class="token punctuation">(</span><span class="token string">&quot;Show the Qt library&#39;s About box&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>aboutQtAct<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>QApplication<span class="token punctuation">.</span>aboutQt<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>aboutQtAct<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>aboutQt<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>leftAlignAct <span class="token operator">=</span> QAction<span class="token punctuation">(</span><span class="token string">&quot;&amp;Left Align&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>leftAlignAct<span class="token punctuation">.</span>setCheckable<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>leftAlignAct<span class="token punctuation">.</span>setShortcut<span class="token punctuation">(</span><span class="token string">&quot;Ctrl+L&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>leftAlignAct<span class="token punctuation">.</span>setStatusTip<span class="token punctuation">(</span><span class="token string">&quot;Left align the selected text&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>leftAlignAct<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>leftAlign<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>rightAlignAct <span class="token operator">=</span> QAction<span class="token punctuation">(</span><span class="token string">&quot;&amp;Right Align&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>rightAlignAct<span class="token punctuation">.</span>setCheckable<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>rightAlignAct<span class="token punctuation">.</span>setShortcut<span class="token punctuation">(</span><span class="token string">&quot;Ctrl+R&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>rightAlignAct<span class="token punctuation">.</span>setStatusTip<span class="token punctuation">(</span><span class="token string">&quot;Right align the selected text&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>rightAlignAct<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>rightAlign<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>justifyAct <span class="token operator">=</span> QAction<span class="token punctuation">(</span><span class="token string">&quot;&amp;Justify&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>justifyAct<span class="token punctuation">.</span>setCheckable<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>justifyAct<span class="token punctuation">.</span>setShortcut<span class="token punctuation">(</span><span class="token string">&quot;Ctrl+J&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>justifyAct<span class="token punctuation">.</span>setStatusTip<span class="token punctuation">(</span><span class="token string">&quot;Justify the selected text&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>justifyAct<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>justify<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>centerAct <span class="token operator">=</span> QAction<span class="token punctuation">(</span><span class="token string">&quot;&amp;Center&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>centerAct<span class="token punctuation">.</span>setCheckable<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>centerAct<span class="token punctuation">.</span>setShortcut<span class="token punctuation">(</span><span class="token string">&quot;Ctrl+E&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>centerAct<span class="token punctuation">.</span>setStatusTip<span class="token punctuation">(</span><span class="token string">&quot;Center the selected text&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>centerAct<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>center<span class="token punctuation">)</span>

        alignmentGroup <span class="token operator">=</span> QActionGroup<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        alignmentGroup<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>leftAlignAct<span class="token punctuation">)</span>
        alignmentGroup<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>rightAlignAct<span class="token punctuation">)</span>
        alignmentGroup<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>justifyAct<span class="token punctuation">)</span>
        alignmentGroup<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>centerAct<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>leftAlignAct<span class="token punctuation">.</span>setChecked<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">createMenus</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        fileMenu <span class="token operator">=</span> self<span class="token punctuation">.</span>menuBar<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>addMenu<span class="token punctuation">(</span><span class="token string">&quot;&amp;File&quot;</span><span class="token punctuation">)</span>
        fileMenu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>newAct<span class="token punctuation">)</span>

        fileMenu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>openAct<span class="token punctuation">)</span>

        fileMenu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>saveAct<span class="token punctuation">)</span>
        fileMenu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>printAct<span class="token punctuation">)</span>

        fileMenu<span class="token punctuation">.</span>addSeparator<span class="token punctuation">(</span><span class="token punctuation">)</span>

        fileMenu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>exitAct<span class="token punctuation">)</span>

        editMenu <span class="token operator">=</span> self<span class="token punctuation">.</span>menuBar<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>addMenu<span class="token punctuation">(</span><span class="token string">&quot;&amp;Edit&quot;</span><span class="token punctuation">)</span>
        editMenu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>undoAct<span class="token punctuation">)</span>
        editMenu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>redoAct<span class="token punctuation">)</span>
        editMenu<span class="token punctuation">.</span>addSeparator<span class="token punctuation">(</span><span class="token punctuation">)</span>
        editMenu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>cutAct<span class="token punctuation">)</span>
        editMenu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>copyAct<span class="token punctuation">)</span>
        editMenu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>pasteAct<span class="token punctuation">)</span>
        editMenu<span class="token punctuation">.</span>addSeparator<span class="token punctuation">(</span><span class="token punctuation">)</span>

        helpMenu <span class="token operator">=</span> self<span class="token punctuation">.</span>menuBar<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>addMenu<span class="token punctuation">(</span><span class="token string">&quot;&amp;Help&quot;</span><span class="token punctuation">)</span>
        helpMenu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>aboutAct<span class="token punctuation">)</span>
        helpMenu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>aboutQtAct<span class="token punctuation">)</span>

        formatMenu <span class="token operator">=</span> editMenu<span class="token punctuation">.</span>addMenu<span class="token punctuation">(</span><span class="token string">&quot;&amp;Format&quot;</span><span class="token punctuation">)</span>
        formatMenu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>boldAct<span class="token punctuation">)</span>
        formatMenu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>italicAct<span class="token punctuation">)</span>
        formatMenu<span class="token punctuation">.</span>addSeparator<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&quot;Alignment&quot;</span><span class="token punctuation">)</span>
        formatMenu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>leftAlignAct<span class="token punctuation">)</span>
        formatMenu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>rightAlignAct<span class="token punctuation">)</span>
        formatMenu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>justifyAct<span class="token punctuation">)</span>
        formatMenu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>centerAct<span class="token punctuation">)</span>
        formatMenu<span class="token punctuation">.</span>addSeparator<span class="token punctuation">(</span><span class="token punctuation">)</span>
        formatMenu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>setLineSpacingAct<span class="token punctuation">)</span>
        formatMenu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>setParagraphSpacingAct<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
    demo <span class="token operator">=</span> MenuDemo<span class="token punctuation">(</span><span class="token punctuation">)</span>
    demo<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="动作qaction" tabindex="-1"><a class="header-anchor" href="#动作qaction" aria-hidden="true">#</a> 动作QAction</h3><p>动作QAction是定义菜单和工具栏的基础,单击菜单或工具栏上的动作可以触发动作的triggered()信号,执行动作关联的槽函数,完成需要完成的工作。动作在菜单中以项(item)的形式显示,在工具栏中以按钮的形式显示。</p><p>动作 QAction 继承自QObject,位于 QtGui 模块中。用QAction创建动作对象的方法如下所示,其中 parent通常是窗口、工具栏、菜单栏或菜单；text是显示的文字,如果将动作放到菜单或工具栏上,text将成为菜单或工具栏中按钮的文字；icon 是图标,将成为菜单或工具栏中按钮的图标。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtGui <span class="token keyword">import</span> QAction

QAction<span class="token punctuation">(</span>icon<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtGui<span class="token punctuation">.</span>QIcon<span class="token punctuation">,</span> PySide6<span class="token punctuation">.</span>QtGui<span class="token punctuation">.</span>QPixmap<span class="token punctuation">]</span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>QObject<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QAction<span class="token punctuation">(</span>parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>QObject<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QAction<span class="token punctuation">(</span>text<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>QObject<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="动作qaction的常用方法" tabindex="-1"><a class="header-anchor" href="#动作qaction的常用方法" aria-hidden="true">#</a> 动作QAction的常用方法</h4><p>动作 QAction 的常用方法如表所示,主要方法介绍如下。</p><ul><li>用setMenu(QMenu)方法把动作添加到菜单中,用菜单的addAction(QAction)方法也可以把动作添加到菜单中,作为菜单下拉列表中的一项。</li><li>用setCheckable(bool)方法设置动作是否可以勾选,用setChecked(bool)方法设置是否处于勾选状态。</li><li>对于互斥的一些动作,如同QRadioButton一样,需要将其放到一个组中,可以先用Broup=QActionGroup(self)创建一个对象,然后用group.addAction(QAction)方</li><li>法把动作放到一个组中,并将 setExclusive(bool)设置成 True,这样就可以保证组内的动作是互斥的。</li><li>用setShortcut(str)方法可以给动作设置快捷键,例如setShortcut(&quot;Ctrl+A&quot;)；用setShortcut(QKeySequence)方法或 setShortcut(QKeySequence.StandardKey)方法也可设置快捷键,其中 QKeySequence定义按键顺序类,QKeySequence,StandardKey 是一些标准的快捷键。</li><li>用setIconVisiblelnMenu(bool)方法设置菜单中是否显示动作的图标,而在工具档中不受影响；用setShortcutVisibleInContextMenu(bool)方法设置在右键快捷菜单中是否显示动作的快捷键(如果动作出现在快捷菜单中)。</li><li>用setPriority(QAction.Priority)方法设置动作在界面上的优先级,参数是QAction.Priority 的枚举值,可取 QAction.LowPriority、QAction.NormalPriority或QAction.HighPriority,例如工具栏设置了 Qt.ToolButtonTextBesideIcon 模式,具有QAction.LowPriority 的动作将不显示文本。</li></ul><table><thead><tr><th>QAction的方法及参数类型</th><th>返回值类型</th><th>说 明</th></tr></thead><tbody><tr><td>setText(str)</td><td>None</td><td>设置名称</td></tr><tr><td>text()</td><td>str</td><td>获取名称</td></tr><tr><td>setIcon(QIcon)</td><td>None</td><td>设置图标</td></tr><tr><td>icon()</td><td>QIcon</td><td>获取图标</td></tr><tr><td>setCheckable(bool)</td><td>None</td><td>设置是否可以勾选</td></tr><tr><td>isCheckable()</td><td>bool</td><td>获取是否可以勾选</td></tr><tr><td>[slot]setChecked(bool)</td><td>None</td><td>设置是否处于勾选状态</td></tr><tr><td>isChecked()</td><td>bool</td><td>获取是否处于勾选状态</td></tr><tr><td>setIconVisibleInMenu(bool)</td><td>None</td><td>设置在菜单中图标是否可见</td></tr><tr><td>isIconVisibleInMenu()</td><td>bool</td><td>获取在菜单中图标是否可见</td></tr><tr><td>setShortcutVisibleInContextMenu(bool)</td><td>None</td><td>设置动作的快捷键在右键快捷菜单中是否 显示</td></tr><tr><td>setFont(QFont)</td><td>None</td><td>设置字体</td></tr><tr><td>font()</td><td>QFont</td><td>获取字体</td></tr><tr><td>setMenu(QMenu)</td><td>None</td><td>将动作添加到菜单中</td></tr><tr><td>menu()</td><td>QMenu</td><td>获取动作所在的菜单</td></tr><tr><td>setShortcut(str)</td><td>None</td><td>设置快捷键</td></tr><tr><td>setShortcut(QKeySequence)</td><td>None</td><td>设置快捷键</td></tr><tr><td>setShortcut(QKeySequence.StandardKey)</td><td>None</td><td>设置快捷键</td></tr><tr><td>[slot]setDisabled(bool)</td><td>None</td><td>设置是否失效</td></tr><tr><td>[slot]setEnabled(bool)</td><td>None</td><td>设置是否激活</td></tr><tr><td>isEnabled()</td><td>Bool</td><td>获取是否处于激活状态</td></tr><tr><td>[slot]resetEnabled()</td><td>None</td><td>恢复激活状态</td></tr><tr><td>setActionGroup(QActionGroup)</td><td>None</td><td>设置动作所在的组</td></tr><tr><td>[slot]setVisible(bool)</td><td>None</td><td>设置是否可见</td></tr><tr><td>isVisible()</td><td>bool</td><td>获取是否可见</td></tr><tr><td>setSeparator(bool)</td><td>None</td><td>将动作当作分割线来使用</td></tr><tr><td>setAutoRepeat(bool)</td><td>None</td><td>设置长按快捷键时是否可以重复执行动 作,默认是True</td></tr><tr><td>autoRepeat()</td><td>bool</td><td>获取是否可以重复执行动作</td></tr><tr><td>setData(var:Any)</td><td>None</td><td>给动作设置任意类型的数据</td></tr><tr><td>data()</td><td>Any</td><td>获取动作的数据</td></tr><tr><td>setPriority(QAction.Priority)</td><td>None</td><td>设置动作的优先级</td></tr><tr><td>setToolTip(str)</td><td>None</td><td>设置提示信息</td></tr><tr><td>setStatusTip(str)</td><td>None</td><td>设置状态提示信息</td></tr><tr><td>setWhatsThis(str)</td><td>None</td><td>设置按Shift+F1键时的提示信息</td></tr><tr><td>[slot]trigger()</td><td>None</td><td>发送 triggered()或 triggered(bool)信号</td></tr><tr><td>[slot]hover()</td><td>None</td><td>发送hovered()信号</td></tr><tr><td>[slot]toggle()</td><td>None</td><td>发送 toggled(bool)信号</td></tr></tbody></table><h4 id="动作qaction的信号" tabindex="-1"><a class="header-anchor" href="#动作qaction的信号" aria-hidden="true">#</a> 动作QAction的信号</h4><p>如表所示,主要信号是toggled()和toggled(bool)信号</p><table><thead><tr><th>QMenu的信号及参数类型</th><th>说 明</th></tr></thead><tbody><tr><td>hovered()</td><td>光标滑过动作时发送信号</td></tr><tr><td>triggered()</td><td>单击动作或按快捷键时发送信号</td></tr><tr><td>triggered(bool)</td><td>单击动作或按快捷键时发送信号</td></tr><tr><td>toggled(bool)</td><td>动作的切换状态发生改变时发送信号</td></tr><tr><td>changed()</td><td>当动作的属性(如文本、图标、可见性、优先级、快捷键、提示信息等)发生改 变时发送信号</td></tr><tr><td>checkableChanged(bool)</td><td>动作勾选状态发生改变时发送信号</td></tr><tr><td>enabledChanged(bool)</td><td>动作使能状态发生改变时发送信号</td></tr><tr><td>visibleChanged()</td><td>动作的可见性发生改变时发送信号</td></tr></tbody></table><h4 id="自定义动作qwidgetaction的实例" tabindex="-1"><a class="header-anchor" href="#自定义动作qwidgetaction的实例" aria-hidden="true">#</a> 自定义动作QWidgetAction的实例</h4><p>创建动作的方式是用QAction类来创建,这样创建的动作用户无法定制自己需要的功能或外观。若要自己定义动作,可继承QWidgetAction创建自定义动作类,QWidgetAction 继承自 QAction。</p><p>在自定义类中重写 createWidget(parent; QWidget)函数,其中 parent 是自定义动作所在的容器,如菜单或工具栏。在将自定义动作添加到菜单或工具栏中时,会自动调用createWidget(parent:QWidget)函数;当从菜单或工具栏中移除自定义的动作时,会调用deleteWidget(widget:QWidget)函数,重写该函数可以删除控件。</p><p>下面的代码是自定义动作的应用实例,该程序创建了继承自 QWidgetAction 的MyAction,在 MyAction类中重写了 createWidget()函数,在 createWidget()函数中创建了一个QPushButton 控件和一个 QSlider 控件,单击 QPushButton 控件,可以切换喇叭图像的显示。程序运行结果如图所示。</p><figure><img src="`+i+`" alt="image-20230216015348466" tabindex="0" loading="lazy"><figcaption>image-20230216015348466</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: UTF-8 -*-</span>
<span class="token comment"># File date: Hi_2023/2/28 21:38</span>
<span class="token comment"># File_name: 03-自定义动作QWidgetAction的实例.py</span>
<span class="token keyword">import</span> sys
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span><span class="token punctuation">(</span>QApplication<span class="token punctuation">,</span> QMenuBar<span class="token punctuation">,</span> QWidgetAction<span class="token punctuation">,</span> QPushButton<span class="token punctuation">,</span> QSlider<span class="token punctuation">,</span> QHBoxLayout<span class="token punctuation">,</span> QWidget<span class="token punctuation">)</span>
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtGui <span class="token keyword">import</span> QPixmap
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> Qt<span class="token punctuation">.</span>QSize


<span class="token keyword">class</span> <span class="token class-name">MyAction</span><span class="token punctuation">(</span>QWidgetAction<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 创建继承自 oidgetAction 的类</span>
    <span class="token keyword">def</span> <span class="token function">createWidget</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 重写createWidget函数</span>
        self<span class="token punctuation">.</span>widget <span class="token operator">=</span> QWidget<span class="token punctuation">(</span>parent<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setDefaultWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>widget<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>button <span class="token operator">=</span> QPushButton<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>button<span class="token punctuation">.</span>setFlat<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>button<span class="token punctuation">.</span>setIcon<span class="token punctuation">(</span>QPixmap<span class="token punctuation">(</span><span class="token string">&quot;../../Resources/animal/m2.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>button<span class="token punctuation">.</span>setIconSize<span class="token punctuation">(</span>QSize<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>slide <span class="token operator">=</span> QSlider<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>Orientation<span class="token punctuation">.</span>Horizontal<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>slide<span class="token punctuation">.</span>setFixedWidth<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>

        H <span class="token operator">=</span> QHBoxLayout<span class="token punctuation">(</span>self<span class="token punctuation">.</span>widget<span class="token punctuation">)</span>
        H<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>button<span class="token punctuation">)</span>
        H<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>slide<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>mute <span class="token operator">=</span> <span class="token boolean">False</span>

        self<span class="token punctuation">.</span>button<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>mute_requested<span class="token punctuation">)</span>  <span class="token comment"># 信号与槽函数的连接</span>

    <span class="token keyword">def</span> <span class="token function">mute_requested</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 槽函数</span>
        self<span class="token punctuation">.</span>mute <span class="token operator">=</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>mute
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>mute<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>button<span class="token punctuation">.</span>setIcon<span class="token punctuation">(</span>QPixmap<span class="token punctuation">(</span><span class="token string">&quot;../../Resources/animal/m3.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>slide<span class="token punctuation">.</span>setEnabled<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>button<span class="token punctuation">.</span>setIcon<span class="token punctuation">(</span>QPixmap<span class="token punctuation">(</span><span class="token string">&quot;../../Resources/animal/m4.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>slide<span class="token punctuation">.</span>setEnabled<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">Mywindow</span><span class="token punctuation">(</span>QWidget<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>parent<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span><span class="token string">&quot;WidgetAction 应用实例&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setupUi<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">setupUi</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        menuBar <span class="token operator">=</span> QMenuBar<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>menuVolume <span class="token operator">=</span> menuBar<span class="token punctuation">.</span>addMenu<span class="token punctuation">(</span><span class="token string">&quot;音量控制&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>actVolume <span class="token operator">=</span> MyAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>menuVolume<span class="token punctuation">)</span>  <span class="token comment"># 自定义动作的实例</span>
        self<span class="token punctuation">.</span>menuVolume<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>self<span class="token punctuation">.</span>actVolume<span class="token punctuation">)</span>  <span class="token comment"># 将自定义动作加人到菜单中</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
    win <span class="token operator">=</span> Mywindow<span class="token punctuation">(</span><span class="token punctuation">)</span>

    win<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="右键菜单-上下文菜单" tabindex="-1"><a class="header-anchor" href="#右键菜单-上下文菜单" aria-hidden="true">#</a> 右键菜单(上下文菜单)</h3><p>右键菜单有两种实现方式。</p><ul><li><p>重写父类(QWidget)的默认右键调用对象方法 <code>contextMenuEvent(event: PySide6.QtGui.QContextMenuEvent)</code></p></li><li><p>通过设置上下文菜单策略 <code>setContextMenuPolicy(policy: PySide6.QtCore.Qt.ContextMenuPolicy)</code>后自定义上下文菜单</p><p><code>policy</code>设置策略可设置:</p><ul><li>Qt.ContextMenuPolicy.DefaultContextMenu # 默认上下文菜单,默认策略,右键调用对象方法contextMenuEvent()即第一种方法</li><li>Qt.ContextMenuPolicy.CustomContextMenu # 自定义上下文菜单,点击发送信号customContextMenuRequested(QPoint)在信号连接方法实现相关功能</li><li>Qt.ContextMenuPolicy.NoContextMenu # 无上下文菜单</li><li>Qt.ContextMenuPolicy.PreventContextMenu # 阻止上下文菜单</li><li>Qt.ContextMenuPolicy.ActionsContextMenu # 操作上下文菜单</li></ul></li></ul><h4 id="重写contextmenuevent法" tabindex="-1"><a class="header-anchor" href="#重写contextmenuevent法" aria-hidden="true">#</a> 重写contextMenuEvent法</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: UTF-8 -*-</span>
<span class="token comment"># File date: Hi_2023/2/28 21:45</span>
<span class="token comment"># File_name: 01- 重写contextMenuEvent法.py</span>
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> PySide6
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> Qt
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtGui <span class="token keyword">import</span> QAction<span class="token punctuation">,</span> QIcon
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> <span class="token operator">*</span>


<span class="token keyword">class</span> <span class="token class-name">win_demo</span><span class="token punctuation">(</span>QWidget<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>  <span class="token comment"># 初始化界面</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setWindowFlags<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>WindowStaysOnTopHint<span class="token punctuation">)</span>  <span class="token comment"># 置顶</span>

        self<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 显示窗口以及其子控件</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 主循环和退出</span>

    <span class="token decorator annotation punctuation">@staticmethod</span>
    <span class="token keyword">def</span> <span class="token function">get_menu</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">:</span>
        menu <span class="token operator">=</span> QMenu<span class="token punctuation">(</span>parent<span class="token punctuation">)</span>
        new_action <span class="token operator">=</span> menu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>QIcon<span class="token punctuation">(</span><span class="token string">r&quot;../../Resources/animal/m1.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;菜单动作&quot;</span><span class="token punctuation">)</span>
        new_action<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;点击菜单动作&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        menu<span class="token punctuation">.</span>addSection<span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>

        submenu <span class="token operator">=</span> QMenu<span class="token punctuation">(</span><span class="token string">&quot;更多&quot;</span><span class="token punctuation">,</span> menu<span class="token punctuation">)</span>
        sub_action <span class="token operator">=</span> submenu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>QIcon<span class="token punctuation">(</span><span class="token string">r&quot;../../Resources/animal/m1.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;子菜单动作&quot;</span><span class="token punctuation">)</span>
        sub_action<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;点击子菜单动作&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        menu<span class="token punctuation">.</span>addMenu<span class="token punctuation">(</span>submenu<span class="token punctuation">)</span>

        <span class="token keyword">return</span> menu

    <span class="token keyword">def</span> <span class="token function">contextMenuEvent</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtGui<span class="token punctuation">.</span>QContextMenuEvent<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;重写contextMenuEvent设置右键菜单&quot;&quot;&quot;</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;展示默认菜单&quot;</span><span class="token punctuation">)</span>
        default_menu <span class="token operator">=</span> self<span class="token punctuation">.</span>get_menu<span class="token punctuation">(</span>self<span class="token punctuation">)</span>

        default_menu<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>globalPos<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    win_demo<span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="自定义上下文策略方法" tabindex="-1"><a class="header-anchor" href="#自定义上下文策略方法" aria-hidden="true">#</a> 自定义上下文策略方法</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: UTF-8 -*-</span>
<span class="token comment"># File date: Hi_2023/2/28 21:47</span>
<span class="token comment"># File_name: 02-自定义上下文策略方法.py</span>
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> PySide6
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> Qt<span class="token punctuation">.</span>QPoint
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtGui <span class="token keyword">import</span> QAction<span class="token punctuation">,</span> QIcon
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> <span class="token operator">*</span>


<span class="token keyword">class</span> <span class="token class-name">win_demo</span><span class="token punctuation">(</span>QWidget<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>  <span class="token comment"># 初始化界面</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setWindowFlags<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>WindowStaysOnTopHint<span class="token punctuation">)</span>  <span class="token comment"># 置顶</span>

        self<span class="token punctuation">.</span>custom_menu<span class="token punctuation">(</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 显示窗口以及其子控件</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 主循环和退出</span>

    <span class="token decorator annotation punctuation">@staticmethod</span>
    <span class="token keyword">def</span> <span class="token function">get_menu</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">:</span>
        menu <span class="token operator">=</span> QMenu<span class="token punctuation">(</span>parent<span class="token punctuation">)</span>
        new_action <span class="token operator">=</span> menu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>QIcon<span class="token punctuation">(</span><span class="token string">r&quot;../../Resources/animal/m1.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;菜单动作&quot;</span><span class="token punctuation">)</span>
        new_action<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;点击菜单动作&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        menu<span class="token punctuation">.</span>addSection<span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>

        submenu <span class="token operator">=</span> QMenu<span class="token punctuation">(</span><span class="token string">&quot;更多&quot;</span><span class="token punctuation">,</span> menu<span class="token punctuation">)</span>
        sub_action <span class="token operator">=</span> submenu<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>QIcon<span class="token punctuation">(</span><span class="token string">r&quot;../../Resources/animal/m1.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;子菜单动作&quot;</span><span class="token punctuation">)</span>
        sub_action<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;点击子菜单动作&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        menu<span class="token punctuation">.</span>addMenu<span class="token punctuation">(</span>submenu<span class="token punctuation">)</span>

        <span class="token keyword">return</span> menu

    <span class="token keyword">def</span> <span class="token function">show_menu</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> point<span class="token punctuation">:</span> QPoint<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;point默认是,相对位置即相对窗口的位置&quot;&quot;&quot;</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;展示自定义菜单策略&quot;</span><span class="token punctuation">)</span>
        default_menu <span class="token operator">=</span> self<span class="token punctuation">.</span>get_menu<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        point <span class="token operator">=</span> self<span class="token punctuation">.</span>mapToGlobal<span class="token punctuation">(</span>point<span class="token punctuation">)</span>  <span class="token comment"># 把局部位置映射到全局</span>
        default_menu<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span>  <span class="token comment"># 按钮展示位置</span>

    <span class="token keyword">def</span> <span class="token function">custom_menu</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;修改上下文策略自定义菜单
        Qt.ContextMenuPolicy.CustomContextMenu  # 自定义上下文菜单
        Qt.ContextMenuPolicy.DefaultContextMenu  # 默认上下文菜单
        Qt.ContextMenuPolicy.NoContextMenu  # 无上下文菜单
        Qt.ContextMenuPolicy.PreventContextMenu  # 阻止上下文菜单
        Qt.ContextMenuPolicy.ActionsContextMenu  # 操作上下文菜单
        &quot;&quot;&quot;</span>

        self<span class="token punctuation">.</span>setContextMenuPolicy<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>ContextMenuPolicy<span class="token punctuation">.</span>CustomContextMenu<span class="token punctuation">)</span>  <span class="token comment"># 自定义上下文菜单</span>
        self<span class="token punctuation">.</span>customContextMenuRequested<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>show_menu<span class="token punctuation">)</span>  <span class="token comment"># 自定义上下文菜单信号连接</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    win_demo<span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="工具栏和工具栏按钮" tabindex="-1"><a class="header-anchor" href="#工具栏和工具栏按钮" aria-hidden="true">#</a> 工具栏和工具栏按钮</h2><p>与菜单类似,工具栏也是一组命令的集合地。菜单上放置的动作也可放到工具栏上,实现工具栏和菜单的同步。</p><p>工具栏上除了放置动作外,还可以放置其他控件,例如 QLineEdit、QSpinBox,QComboBox、QToolButton 和 FontComboBox 等。在 QMainWindow 窗口中,工具栏还可以拖动和悬浮。</p><p>工具栏QToolBar 用于存放动作,动作在工具栏中一般呈现按钮状态。QToolBar继承自QWidget。用QToolBar类创建工具栏实例的方法如下,其中 title 是工具栏控件的标题名称,可通过 setWindowTitle(str)方法修改; parent 是工具栏所在的窗口。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> QToolBar

QToolBar<span class="token punctuation">(</span>parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QToolBar<span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="工具栏qtoolbar的常用方法" tabindex="-1"><a class="header-anchor" href="#工具栏qtoolbar的常用方法" aria-hidden="true">#</a> 工具栏QToolBar的常用方法</h3><p>主要方介绍如下。</p><ul><li>用addAction(QAction)方法可以将已经存在的动作添加到工具栏申,用a66kcics(text: str)方法、addAction(icon:QIcon,text;str)方法可以同时创建和参加动作,并返回动作；用addSeparator()方法可以添加分隔条；用addWidget(Qwidges)方法可以把一个控件添加到工具栏上。</li><li>用setOrientation(Qt.Orientation)方法可以设置工具栏的方向,其中QtOrientation 可以取 Qt.Horizontal(水平)或 Qt.Vertical(竖直)。</li><li>用setToolButtonStyle(Qt.ToolButtonStyle)方法可以设置工具栏上按钮约风格Qt.ToolButtonStyle 可以取以下值 <ul><li>Qt.ToolButtonIconOnly(只显示图标)</li><li>Qr.ToolButtonTextOnly(只显示文字)</li><li>Qt.ToolButtonTextBesidelcon(文字在图标的旁边)</li><li>Qt.ToolButtonTextUnderIcon(文字在图标的下面)</li><li>Qt.ToolButtonFollowStyle(遵循风格设置)。</li></ul></li><li>在 QMainWindow 窗口中,可以用setMovable(bool)方法可以设置工具栏是否可以移动,用setFloatable(bool)方法设置工具栏是否可以浮动。</li><li>在QMainWindow 窗口中,用setAllowedAreas(Qt.ToolBarArea)方法可以设置工具栏的停靠区域,其中Qt.ToolBarArea 参数指定可以停靠的区域,可以取值如下。如果工具栏是可移动的,则无论allowedAreas 设置何值都可以移动,但只有在进入toolBar 的allowedAreas 范围内时才会自动显示toolBar停靠区域范围,并在鼠标释放后自动在该范围内缩放,否则将保持最适合的大小浮动在窗口之上。 <ul><li>Qt.LeftToolBarArea(左侧)</li><li>Qt.RightToolBarArea(右侧)</li><li>Qt.TopToolBarArea(顶部,菜单栏下部)</li><li>Qt.BottomToolBarArea(底 部,状态栏上部)</li><li>Qt.AllToolBarAreas(所有区域都可以停靠)</li><li>Qt.NoToolBarArea(不可停靠)。</li></ul></li><li>用toggleViewAction()方法返回一个动作对象,通过单击该动作对象可以切换停靠窗口的可见状态,即该动作是一个对停靠控件窗口进行显示或关闭的开关,如果将该动作加到菜单上,对应菜单栏的文字即为停靠窗口的标题名称,这样就可以在菜单上单击对应菜单项进行停靠窗口的关闭和显示。</li></ul><p>工具栏QToolBar的常用方法如表所示:</p><table><thead><tr><th>QToolBar的方法及参数类型</th><th>返回值的类型</th><th>说明</th></tr></thead><tbody><tr><td>addAction(QAction)</td><td>None</td><td>添加已定义的动作到工具栏上</td></tr><tr><td>addAction(text: str)</td><td>QAction</td><td>创建并添加动作,返回新建立的动作</td></tr><tr><td>addAction(icon: QIcon,text; str)</td><td>QAction</td><td>创建并添加动作,返回新建立的动作</td></tr><tr><td>addSeparator()</td><td>QAction</td><td>添加分隔条</td></tr><tr><td>addWidget(QWidget)</td><td>QAction</td><td>添加控件,返回与控件关联的动作</td></tr><tr><td>insertSeparator(before: QAction)</td><td>QAction</td><td>在动作的前面插入分隔条</td></tr><tr><td>insertWidget(QAction,QWidget)</td><td>QAction</td><td>在动作的前面插入控件</td></tr><tr><td>clear()</td><td>None</td><td>清空工具栏中的动作和控件</td></tr><tr><td>widgetForAction(QAction)</td><td>QWidget</td><td>获取与动作关联的控件</td></tr><tr><td>actionAt(QPoint)</td><td>QAction</td><td>获取指定位置的动作</td></tr><tr><td>setionAt(x: int,y: int)</td><td>QAction</td><td>获取指定位置的动作</td></tr><tr><td>ationGeometry(QAction)</td><td>QRect</td><td>获取动作按钮的几何尺寸</td></tr><tr><td>setFlontable(booL)</td><td>None</td><td>在QMinWindow中设置是否可以浮动</td></tr><tr><td>isFloatable()</td><td>bool</td><td>获取是否可以浮动</td></tr><tr><td>isFloating()</td><td>bool</td><td>获取是否正处于浮动状态</td></tr><tr><td>setMovable(bool)</td><td>None</td><td>在QMainWindow中设置是否可以推动</td></tr><tr><td>isMcvable()</td><td>bool</td><td>获取是否可以移动</td></tr><tr><td>[slot]setlconSize(QSize)</td><td>None</td><td>设置图标允许的最大尺寸</td></tr><tr><td>iconSize()</td><td>QSize</td><td>获取图标尺寸</td></tr><tr><td>setOrientation(Qt.Orientation)</td><td>None</td><td>设置工具栏的方向</td></tr><tr><td>orientation()</td><td>Qt.Orientation</td><td>获取工具栏的方向</td></tr><tr><td>[slot]setToolButtonStyle(Qt.ToolButtonStyle)</td><td>None</td><td>设置工具栏上按钮的风格</td></tr><tr><td>toolButtonStyle()</td><td>Qt.ToolButtonStyle</td><td>获取按钮风格</td></tr><tr><td>setAllowedAreas(Qt.ToolBarArea)</td><td>None</td><td>设置QMainWindow中可停靠的区域</td></tr><tr><td>allowedAreas()</td><td>Qt.ToolBarArea</td><td>获取可以停靠的区域</td></tr><tr><td>isAreaAllowed(Qt.ToolBarArea)</td><td>bo0l</td><td>获取指定的区域是否可以停靠</td></tr><tr><td>toggleViewAction()</td><td>QAction</td><td>切换停靠窗口的可见状态</td></tr></tbody></table><h3 id="工具栏qtoolbar的信号和槽函数" tabindex="-1"><a class="header-anchor" href="#工具栏qtoolbar的信号和槽函数" aria-hidden="true">#</a> 工具栏QToolBar的信号和槽函数</h3><p>工具栏的槽函数只有:</p><ul><li>setToolButtonStyle(Qt.ToolButtonStyle)</li><li>setIconSize(QSize)。</li></ul><p>信号见下表:</p><table><thead><tr><th>QToolBar的信号及参数类型</th><th>说明</th></tr></thead><tbody><tr><td>actionTriggered(QAction)</td><td>动作被触发时发送信号</td></tr><tr><td>allowedAreasChanged(Qt.ToolBarArea)</td><td>允许的停靠区域发生改变时发送信号</td></tr><tr><td>iconSizeChanged(QSize)</td><td>按钮的尺寸发生改变时发送信号</td></tr><tr><td>movableChanged(bool)</td><td>可移动状态发生改变时发送信号</td></tr><tr><td>orientationChanged(Qt.Orientation)</td><td>工具栏的方向发生改变时发送信号</td></tr><tr><td>toolButtonStyleChanged(Qt.ToolButtonStyle)</td><td>工具栏的风格发生改变时发送信号</td></tr><tr><td>topLevelChanged(bool)</td><td>悬浮状态发生改变时发送信号</td></tr><tr><td>visibilityChanged(bool)</td><td>可见性发生改变时发送信号</td></tr></tbody></table><h3 id="工具按钮控件qtoolbutton" tabindex="-1"><a class="header-anchor" href="#工具按钮控件qtoolbutton" aria-hidden="true">#</a> 工具按钮控件QToolButton</h3><p>工具按钮控件 QToolButton 常放在工具栏中,显示图标而不显示文字。通常为工具按钮设置弹出式菜单,用于选择之前的操作,例如更多选择项等。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> QToolButton

QToolButton<span class="token punctuation">(</span>parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="工具按钮qtoolbutton的常用方法" tabindex="-1"><a class="header-anchor" href="#工具按钮qtoolbutton的常用方法" aria-hidden="true">#</a> 工具按钮QToolButton的常用方法</h4><p>工具按钮QToolButton的主要方法介绍如下。</p><ul><li>用工具栏的 addWidget()方法可以将工具按钮加人到工具栏中。 <ul><li>setMenu(QMenu)方法可以为工具按钮设置一个菜单。</li><li>setPopupMode(QToolButton.ToolButtonPopupMode)方法可以设置菜单的弹出方式。其中参数 QToolButton.ToolButtonPopupMode 可取值如下: <ul><li>QToolButton.DelayedPopup,表示用鼠标按下按钮并保持一会儿后弹出菜单</li><li>QToolButton.MenuButtonPopup,表示在工具按钮的右下角上出现一个向下的黑三角,单击这个黑三角,弹出菜单</li><li>QToolButton.InstantPopup,表示立即弹出菜单</li></ul></li><li>showMenu()方法可以让菜单弹出。</li></ul></li><li>用setAutoRaise(bool)方法可以设置工具按钮的自动弹起特征,当光标放到按钮上面时会有三维立体感。</li><li>按钮的外观和尺寸可通过 setToolButtonStyle(Qt.ToolButtonStyle)方法和setIconSize(QSize)方法来设置,其中参数Qt.ToolButtonStyle 可以取值 <code>Qt.ToolButtonIconOnly</code>、<code>Qt.ToolButtonTextOnly</code>、<code>Qt.ToolButtonTextBesidelcon</code>、<code>Qt.ToolButtonTextUnderIcon</code> 或 <code>Qt.ToolButtonFollowStyle</code>。在 QMainWindow的QToolBar 中使用工具按钮时,按钮会自动调节尺寸来适应QMainWindow 的设置。</li><li>用setArrowType(Qt.ArrowType)方法可以设置工具按钮上的箭头形状,其中Qt.ArrowType 可以取 <code>Qt.NoArrow</code>, <code>Qt.UpArrow</code>, <code>Qt.DownArrow</code>、<code>Qt.LeftArrow</code>或 <code>Qt.RightArrow</code>。</li></ul><p>工具按钮QToolButton的常用方法如表所示:</p><table><thead><tr><th>QToolButton的方法及参数类型</th><th>说 明</th></tr></thead><tbody><tr><td>setMenu(QMenu)</td><td>设置菜单</td></tr><tr><td>[slot]showMenu()</td><td>弹出菜单</td></tr><tr><td>setText(str)</td><td>设置文本</td></tr><tr><td>setIcon(QIcon)</td><td>设置图标</td></tr><tr><td>setPopupMode(QToolButton.ToolButtonPopupMode</td><td>设置菜单的弹出 方式</td></tr><tr><td>[slot]setDefaultAction(QAction)</td><td>设置默认动作</td></tr><tr><td>setArrowType(Qt.ArrowIype)</td><td>设置箭头形状</td></tr><tr><td>[slot]setToolButtonStyle(Qt.ToolButtonStyle)</td><td>设置按钮外观</td></tr><tr><td>setAutoExclusive(bool)</td><td>设置是否互斥</td></tr><tr><td>setShortcut(str)</td><td>设置快捷键</td></tr><tr><td>[slot]setlconSize(QSize)</td><td>设置图标尺寸</td></tr><tr><td>setCheckable(bool)</td><td>设置是否可勾选</td></tr><tr><td>[slot]setChecked(bool)</td><td>设置勾选状态</td></tr><tr><td>setAutoRaise(bool)</td><td>设置自动弹起</td></tr><tr><td>showMenu()</td><td>弹出菜单</td></tr><tr><td>[sIot]click()</td><td>鼠标单击事件</td></tr></tbody></table><h4 id="工具按钮qtoolbutton的信号" tabindex="-1"><a class="header-anchor" href="#工具按钮qtoolbutton的信号" aria-hidden="true">#</a> 工具按钮QToolButton的信号</h4><table><thead><tr><th>QToolButton的信号</th><th>说 明</th></tr></thead><tbody><tr><td>triggered(QAction)</td><td>激发动作时发送信号</td></tr><tr><td>clicked()</td><td>单击时发送信号</td></tr><tr><td>pressed()</td><td>按钮被按下时发送信号</td></tr><tr><td>released()</td><td>按钮被按下又弹起时发送信号</td></tr></tbody></table><h4 id="实例" tabindex="-1"><a class="header-anchor" href="#实例" aria-hidden="true">#</a> 实例</h4><p>下面的程序是在上节程序的基础之上添加了工具栏,在工具栏上添加动作、字体下拉列表、字体尺寸下拉列表和工具按钮,用下拉列表控制字体和字体尺寸。程序运行界面如图所示。程序只能打开 UTF-8 格式的文本文件</p><figure><img src="`+u+`" alt="image-20230216180425436" tabindex="0" loading="lazy"><figcaption>image-20230216180425436</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: UTF-8 -*-</span>
<span class="token comment"># File date: Hi_2023/2/28 21:48</span>
<span class="token comment"># File_name: 工具按钮QToolButton的信号.py</span>
<span class="token keyword">import</span> sys<span class="token punctuation">,</span> os
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> Qt
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtGui <span class="token keyword">import</span> QIcon
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span><span class="token punctuation">(</span>QApplication<span class="token punctuation">,</span> QMenuBar<span class="token punctuation">,</span> QPlainTextEdit<span class="token punctuation">,</span> QComboBox<span class="token punctuation">,</span> QFontComboBox<span class="token punctuation">,</span> QToolBar<span class="token punctuation">,</span> QVBoxLayout<span class="token punctuation">,</span> QWidget<span class="token punctuation">,</span> QFileDialog<span class="token punctuation">,</span> QToolButton<span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">MyWindow</span><span class="token punctuation">(</span>QWidget<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> paprent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span><span class="token string">&quot;OMenu and OToolBar&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setupUi<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">setupUi</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        menuBar <span class="token operator">=</span> QMenuBar<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 创建菜单栏</span>
        toolBar <span class="token operator">=</span> QToolBar<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 创建工具栏</span>
        toolBar<span class="token punctuation">.</span>setToolButtonStyle<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>ToolButtonTextUnderIcon<span class="token punctuation">)</span>  <span class="token comment"># 设置工具栏上按钮的样式</span>

        self<span class="token punctuation">.</span>plainText <span class="token operator">=</span> QPlainTextEdit<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 创建文本编辑器</span>
        vlayout <span class="token operator">=</span> QVBoxLayout<span class="token punctuation">(</span>self<span class="token punctuation">)</span>  <span class="token comment"># 创建竖直布局</span>
        vlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>menuBar<span class="token punctuation">)</span>
        vlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>toolBar<span class="token punctuation">)</span>
        vlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>plainText<span class="token punctuation">)</span>  <span class="token comment"># 工具栏上添加动作</span>

        act_new <span class="token operator">=</span> toolBar<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>QIcon<span class="token punctuation">(</span><span class="token string">&quot;../../../Resources/animal/m4.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;新建(&amp;N)&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 添加动作</span>
        act_open <span class="token operator">=</span> toolBar<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>QIcon<span class="token punctuation">(</span><span class="token string">&quot;../../../Resources/animal/m5.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;打开(&amp;O)&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 添加动作</span>
        act_save <span class="token operator">=</span> toolBar<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>QIcon<span class="token punctuation">(</span><span class="token string">&quot;../../../Resources/animal/m6.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;保存(&amp;S)&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 添加动作</span>

        toolBar<span class="token punctuation">.</span>addSeparator<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 分割线</span>

        act_copy <span class="token operator">=</span> toolBar<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>QIcon<span class="token punctuation">(</span><span class="token string">&quot;../../../Resources/animal/m7.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;复制(&amp;C)&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 添加动作</span>
        act_paste <span class="token operator">=</span> toolBar<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>QIcon<span class="token punctuation">(</span><span class="token string">&quot;../../../Resources/animal/m8.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;粘贴(&amp;V)&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 添加动作</span>
        act_cut <span class="token operator">=</span> toolBar<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>QIcon<span class="token punctuation">(</span><span class="token string">&quot;../../../Resources/animal/m9&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;剪贴(&amp;X)&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 添加动作</span>

        toolBar<span class="token punctuation">.</span>addSeparator<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 分割线</span>

        self<span class="token punctuation">.</span>fontComboBox <span class="token operator">=</span> QFontComboBox<span class="token punctuation">(</span>self<span class="token punctuation">)</span>  <span class="token comment"># 字体下拉列表</span>
        self<span class="token punctuation">.</span>fontComboBox<span class="token punctuation">.</span>setFixedWidth<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
        toolBar<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>fontComboBox<span class="token punctuation">)</span>  <span class="token comment"># 工具栏上添加字体下拉列表</span>
        self<span class="token punctuation">.</span>plainText<span class="token punctuation">.</span>setFont<span class="token punctuation">(</span>self<span class="token punctuation">.</span>fontComboBox<span class="token punctuation">.</span>currentFont<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 设置字体</span>
        self<span class="token punctuation">.</span>fontComboBox<span class="token punctuation">.</span>currentFontChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>plainText<span class="token punctuation">.</span>setFont<span class="token punctuation">)</span>  <span class="token comment"># 信号与槽连接</span>

        self<span class="token punctuation">.</span>comboBox <span class="token operator">=</span> QComboBox<span class="token punctuation">(</span>self<span class="token punctuation">)</span>  <span class="token comment"># 下拉列表</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>comboBox<span class="token punctuation">.</span>addItem<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>comboBox<span class="token punctuation">.</span>setCurrentText<span class="token punctuation">(</span><span class="token string">&quot;15&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 工具栏上添加下拉列表</span>
        toolBar<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>comboBox<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>comboBox<span class="token punctuation">.</span>currentTextChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>comboBox_text_changed<span class="token punctuation">)</span>  <span class="token comment"># 信号与槽连接</span>
        menu_file <span class="token operator">=</span> menuBar<span class="token punctuation">.</span>addMenu<span class="token punctuation">(</span><span class="token string">&quot;文件(&amp;F)&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 菜单栏中添加菜单</span>
        menu_file<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>act_new<span class="token punctuation">)</span>  <span class="token comment"># 菜单栏中添加动作</span>
        menu_file<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>act_open<span class="token punctuation">)</span>  <span class="token comment"># 菜单栏中添加动作</span>
        menu_file<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>act_save<span class="token punctuation">)</span>  <span class="token comment"># 菜单栏中添加动作</span>
        menu_file<span class="token punctuation">.</span>addSeparator<span class="token punctuation">(</span><span class="token punctuation">)</span>

        act_exit <span class="token operator">=</span> menu_file<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>QIcon<span class="token punctuation">(</span><span class="token string">&quot;../../../Resources/animal/m10.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;退出(&amp;E)&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 添加动作</span>

        menu_edit <span class="token operator">=</span> menuBar<span class="token punctuation">.</span>addMenu<span class="token punctuation">(</span><span class="token string">&quot;编辑(&amp;E)&quot;</span><span class="token punctuation">)</span>
        menu_edit<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>act_copy<span class="token punctuation">)</span>
        menu_edit<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>act_paste<span class="token punctuation">)</span>
        menu_edit<span class="token punctuation">.</span>addAction<span class="token punctuation">(</span>act_cut<span class="token punctuation">)</span>

        act_new<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>act_new_triggered<span class="token punctuation">)</span>
        act_open<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>act_open_triggered<span class="token punctuation">)</span>
        act_save<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>act_save_triggered<span class="token punctuation">)</span>
        act_copy<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>plainText<span class="token punctuation">.</span>copy<span class="token punctuation">)</span>

        act_cut<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>plainText<span class="token punctuation">.</span>cut<span class="token punctuation">)</span>
        act_paste<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>plainText<span class="token punctuation">.</span>paste<span class="token punctuation">)</span>
        act_exit<span class="token punctuation">.</span>triggered<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>close<span class="token punctuation">)</span>

        toolButton <span class="token operator">=</span> QToolButton<span class="token punctuation">(</span>self<span class="token punctuation">)</span>  <span class="token comment"># 工具按钮</span>
        toolButton<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
        toolButton<span class="token punctuation">.</span>setMenu<span class="token punctuation">(</span>menu_file<span class="token punctuation">)</span>  <span class="token comment"># 为工具按钮添加菜单</span>
        toolButton<span class="token punctuation">.</span>setArrowType<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>DownArrow<span class="token punctuation">)</span>
        toolButton<span class="token punctuation">.</span>setPopupMode<span class="token punctuation">(</span>QToolButton<span class="token punctuation">.</span>ToolButtonPopupMode<span class="token punctuation">.</span>InstantPopup<span class="token punctuation">)</span>  <span class="token comment"># 设置工具按钮样式</span>

    <span class="token keyword">def</span> <span class="token function">comboBox_text_changed</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> text<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 下拉列表的槽函数</span>
        font <span class="token operator">=</span> self<span class="token punctuation">.</span>plainText<span class="token punctuation">.</span>font<span class="token punctuation">(</span><span class="token punctuation">)</span>
        font<span class="token punctuation">.</span>setPointSize<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>plainText<span class="token punctuation">.</span>setFont<span class="token punctuation">(</span>font<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">act_new_triggered</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>plainText<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">act_open_triggered</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        filename<span class="token punctuation">,</span> <span class="token builtin">filter</span> <span class="token operator">=</span> QFileDialog<span class="token punctuation">.</span>getOpenFileName<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token string">&quot;打开&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;文本文件(*.txt)&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>plainText<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>
            fp <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&quot;r&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span>
            string <span class="token operator">=</span> fp<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">for</span> i <span class="token keyword">in</span> string<span class="token punctuation">:</span>
                i <span class="token operator">=</span> i<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
                self<span class="token punctuation">.</span>plainText<span class="token punctuation">.</span>appendPlainText<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
            fp<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>comboBox_text<span class="token punctuation">.</span>changed<span class="token punctuation">(</span>self<span class="token punctuation">.</span>comboBox<span class="token punctuation">.</span>currentText<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">act_save_triggered</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        filename<span class="token punctuation">,</span> <span class="token builtin">filter</span> <span class="token operator">=</span> QFileDialog<span class="token punctuation">.</span>getSaveFileName<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token string">&quot;打开文件&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;文本文件(*.txt)&quot;</span><span class="token punctuation">)</span>
        string <span class="token operator">=</span> self<span class="token punctuation">.</span>plainText<span class="token punctuation">.</span>toPlainText<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> filename <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>
                fp <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&quot;r&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span>
                fp<span class="token punctuation">.</span>writelines<span class="token punctuation">(</span>string<span class="token punctuation">)</span>
                fp<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                fp <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;UTE-8&quot;</span><span class="token punctuation">)</span>
                fp<span class="token punctuation">.</span>writelines<span class="token punctuation">(</span>string<span class="token punctuation">)</span>
                fp<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
    window <span class="token operator">=</span> MyWindow<span class="token punctuation">(</span><span class="token punctuation">)</span>
    window<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="状态栏qstatusbar" tabindex="-1"><a class="header-anchor" href="#状态栏qstatusbar" aria-hidden="true">#</a> 状态栏QStatusBar</h2><p>状态栏QStatusBar一般放在独立窗口的底部,用于显示程序运行过程中的程序状态信息、提示信息、简要说明信息等,这些信息经过一小段时间后会自动消失。状态栏上也可以放置一些小控件,例如QLabel、QComboBox、QSpinBox等,用于显示永久信息,永久信息不会被实时信息遮挡住。</p><p>状态栏 QStatusBar 继承自 QWidget。用QStatusBar 类创建状态栏实例的方法如下,其中parent是状态的父窗口,一般是独立窗口。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> QStatusBar

QStatusBar<span class="token punctuation">(</span>parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="状态栏qstatusbar的常用方法" tabindex="-1"><a class="header-anchor" href="#状态栏qstatusbar的常用方法" aria-hidden="true">#</a> 状态栏QStatusBar的常用方法</h3><p>状态栏QStatusBar的主要方法介绍如下。</p><ul><li>showMessage(text:str,timeout: int=0)方法设置状态栏要显示的信息,显示的信息从状态的左侧开始,其中参数timeout的单位是毫秒,设置信息显示的时间,经过timeout 毫秒后信息自动消失,如果timeout=0,则显示的信息一直保留到调用clearMessage()方法或再次调用showMessage()方法；用clearMessage()方法清除显示的信息；用currentMessage()方法获取当前显示的信息。</li><li>addPermanentWidget(QWidget,stretch:int=0)方法或 insertPermanentWidget(index:int,widget:QWidget,stretch:int=0)方法可以把其他控件(如 QLabel)添加到状态栏的右侧,用于显示一些永久的信息,例如软件版本号、公司名称、键盘大小写状态等,这些信息不会被状态栏的信息遮挡住,其中参数stretch用于指定控件的相对缩放系数,index是控件的索引号。</li><li>addtWidget(widget:QWidget,stretch: int=0)方法或insertWidget(index: int,QWidget,stretch:int=0)方法可以把其他控件添加到状态栏的左侧,用于显示正常的信息,这些信息会被状态栏的信息遮挡住。</li><li>removeWidget(QWidget)方法可以把控件从状态栏上移除,但控件并没有被真状态栏真正删除,可以用addWidget()方法和show()方法将控件重新添加到状态栏中。</li><li>setSizeGripEnabled(bool)方法可以设置状态栏的右侧是否有一个小三角形标识。</li></ul><p>QStatusBar的常用方法如表所示,主要方法介绍如下:</p><table><thead><tr><th>QStatusBar的方法及参数类型</th><th>返回值的类型</th><th>说 明</th></tr></thead><tbody><tr><td>[slod]showMessage(rext: str, timeout:int=0)</td><td>None</td><td>显示信息,timeout 是显示时间</td></tr><tr><td>currentMessage()</td><td>Str</td><td>获取当前显示的信息</td></tr><tr><td>[slot]clearMessage()</td><td>None</td><td>删除信息</td></tr><tr><td>aadPermanentWidget(Qwidget,stretch: int=0)</td><td>None</td><td>在状态栏的右边添加永久控件</td></tr><tr><td>addWidget(widget: QWidget,stretch: int=0)</td><td>None</td><td>在状态栏的左边添加控件</td></tr><tr><td>insertPermanentWidget(index: int, widget: QWidget,stretch:int=0)</td><td>int</td><td>根据索引值,在右边插入永久控件</td></tr><tr><td>insertWidget(index: int,QWidget,stretch: int=0)</td><td>int</td><td>根据索引值,在左边插入控件</td></tr><tr><td>removeWidget(widget: QWidget)</td><td>None</td><td>从状态栏中移除控件</td></tr><tr><td>setSizeGripEnabled(bool)</td><td>None</td><td>设置在右下角是否有三角形</td></tr><tr><td>isSizeGripEnabled()</td><td>bool</td><td>获取右下角是否有三角形</td></tr><tr><td>hideOrShow()</td><td>None</td><td>确保右边的控件可见</td></tr></tbody></table><h3 id="状态栏qstatusbar的信号" tabindex="-1"><a class="header-anchor" href="#状态栏qstatusbar的信号" aria-hidden="true">#</a> 状态栏QStatusBar的信号</h3><p>状态栏QStatusBar 只有1个信号 <code>messageChanged(text: str)</code>,当显示的信息发生改变时发送该信号。</p><h3 id="qstatusbar-例子" tabindex="-1"><a class="header-anchor" href="#qstatusbar-例子" aria-hidden="true">#</a> QStatusBar 例子</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: UTF-8 -*-</span>
<span class="token comment"># File date: Hi_2023/2/28 22:59</span>
<span class="token comment"># File_name: QStatusBar 例子.py</span>


<span class="token keyword">import</span> sys
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtGui <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">import</span> time
<span class="token keyword">import</span> os

os<span class="token punctuation">.</span>chdir<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">StatusDemo</span><span class="token punctuation">(</span>QMainWindow<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>StatusDemo<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>parent<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>

        bar <span class="token operator">=</span> self<span class="token punctuation">.</span>menuBar<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token builtin">file</span> <span class="token operator">=</span> bar<span class="token punctuation">.</span>addMenu<span class="token punctuation">(</span><span class="token string">&quot;File&quot;</span><span class="token punctuation">)</span>
        new <span class="token operator">=</span> QAction<span class="token punctuation">(</span>QIcon<span class="token punctuation">(</span><span class="token string">&quot;./images/new.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;new&quot;</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        new<span class="token punctuation">.</span>setStatusTip<span class="token punctuation">(</span><span class="token string">&#39;select menu: new&#39;</span><span class="token punctuation">)</span>
        open_ <span class="token operator">=</span> QAction<span class="token punctuation">(</span>QIcon<span class="token punctuation">(</span><span class="token string">&quot;./images/open.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;open&quot;</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        open_<span class="token punctuation">.</span>setStatusTip<span class="token punctuation">(</span><span class="token string">&#39;select menu: open&#39;</span><span class="token punctuation">)</span>
        save <span class="token operator">=</span> QAction<span class="token punctuation">(</span>QIcon<span class="token punctuation">(</span><span class="token string">&quot;./images/save.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;save&quot;</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        save<span class="token punctuation">.</span>setStatusTip<span class="token punctuation">(</span><span class="token string">&#39;select menu: save&#39;</span><span class="token punctuation">)</span>
        <span class="token builtin">file</span><span class="token punctuation">.</span>addActions<span class="token punctuation">(</span><span class="token punctuation">[</span>new<span class="token punctuation">,</span> open_<span class="token punctuation">,</span> save<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token builtin">file</span><span class="token punctuation">.</span>triggered<span class="token punctuation">[</span>QAction<span class="token punctuation">]</span><span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>processTrigger<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>init_statusBar<span class="token punctuation">(</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>timer <span class="token operator">=</span> QTimer<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>timer<span class="token punctuation">.</span>timeout<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>label<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&quot;%Y-%m-%d %a %H:%M:%S&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>timer<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">init_statusBar</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>status_bar <span class="token operator">=</span> QStatusBar<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>status_bar2 <span class="token operator">=</span> QStatusBar<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>status_bar2<span class="token punctuation">.</span>setMinimumWidth<span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>label <span class="token operator">=</span> QLabel<span class="token punctuation">(</span><span class="token string">&#39;显示永久信息：时间&#39;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>button <span class="token operator">=</span> QPushButton<span class="token punctuation">(</span><span class="token string">&#39;清除时间&#39;</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>status_bar<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>status_bar2<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>status_bar<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>label<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>status_bar<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>button<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span><span class="token string">&quot;QStatusBar 例子&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setStatusBar<span class="token punctuation">(</span>self<span class="token punctuation">.</span>status_bar<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>button<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>status_bar<span class="token punctuation">.</span>removeWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>label<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">processTrigger</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>status_bar2<span class="token punctuation">.</span>showMessage<span class="token punctuation">(</span><span class="token string">&#39;点击了menu: &#39;</span> <span class="token operator">+</span> q<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
    demo <span class="token operator">=</span> StatusDemo<span class="token punctuation">(</span><span class="token punctuation">)</span>
    demo<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,125)]))}const m=s(l,[["render",d],["__file","05窗口窗口控件、对话框以及相关功能类4.html.vue"]]);export{m as default};
