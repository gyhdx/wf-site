import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as t,a as e}from"./app-DBc2jY3V.js";const p="/wf-site/assets/202302122127648-CeE4v5xC.gif",o="/wf-site/assets/202303191612267-CCY19Quj.png",i={};function c(l,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="_09-时间网页及音视频控件" tabindex="-1"><a class="header-anchor" href="#_09-时间网页及音视频控件" aria-hidden="true">#</a> 09.时间网页及音视频控件</h1><h2 id="日期时间类及控件" tabindex="-1"><a class="header-anchor" href="#日期时间类及控件" aria-hidden="true">#</a> 日期时间类及控件</h2><p>日期和时间类也是PySide6 中的基本类,利用它们可以设置纪年法、记录某个日期时间点、对日期时间进行计算等。用户输入日期时间及显示日期时间时需要用到日期时间控件</p><h3 id="日历类qcalender" tabindex="-1"><a class="header-anchor" href="#日历类qcalender" aria-hidden="true">#</a> 日历类QCalender</h3><h4 id="日历类qcalender构造方法" tabindex="-1"><a class="header-anchor" href="#日历类qcalender构造方法" aria-hidden="true">#</a> 日历类QCalender构造方法</h4><p>日历类QCalendar 主要用于确定纪年法,当前通用的是公历纪年法,这也是默认值QCalendar 类在 PySide6,QtCore 块中。</p><p>用QCalendar 类创建日历实例的方法如下:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> QCalendar

QCalendar<span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QCalendar<span class="token punctuation">(</span>QCalendar<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>QCalendar<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QCalendar<span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>QCalendar<span class="token punctuation">.</span>SystemId<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QCalendar<span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QCalendar<span class="token punctuation">(</span>system<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>QCalendar<span class="token punctuation">.</span>System<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>name 可以取以下值(均是字符串):</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Julian
Jalali
IslamicCivil
Milankovic
Gregorian
islamicc
Islamic
gregory
Persian
islamic<span class="token operator">-</span>civil
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>system是QCalendar,System 的枚举值,可取以下值,默认值是 QCalendar.System.Gregorian</p><ul><li>QCalendar.System.Gregorian</li><li>QCalendar.System.Julian</li><li>QCalendar.System.Milankovic</li><li>QCalendar.System.Jalali</li><li>QCalendar.System.IslamicCivil</li></ul></li></ul><h4 id="日历类qcalendar-的常用方法" tabindex="-1"><a class="header-anchor" href="#日历类qcalendar-的常用方法" aria-hidden="true">#</a> 日历类QCalendar 的常用方法</h4><p>日历类QCalendar 的常用方法如表所示</p><ul><li>用name()方法获取当前使用的日历纪年法</li><li>用dateFromParts(year,month,day)方法可以创建一个 QDate对象。</li></ul><table><thead><tr><th>QCalendar的方法及参数类型</th><th>返回值的类型</th><th>说明</th></tr></thead><tbody><tr><td>name()</td><td>str</td><td>获取当前使用的日历纪年法</td></tr><tr><td>[static]availableCalendars()</td><td>ListCstr]</td><td>获取可以使用的日历纪年法</td></tr><tr><td>dateFromParts(year: int.month; int,day: int)</td><td>QDate</td><td>返回指定年、月、日构成的日期</td></tr><tr><td>dayOfWeek(QDate)</td><td>int</td><td>获取指定日期在一周的第几天</td></tr><tr><td>daysInMonth(month:int,year:int=None)</td><td>int</td><td>获取指定年指定月的总天数</td></tr><tr><td>daysInYear(year:int)</td><td>int</td><td>获取指定年中的总天数</td></tr><tr><td>isDateValid(year:int,month: int,day:int)</td><td>bool</td><td>获取指定的年、月、日是否有效</td></tr><tr><td>isGregorian()</td><td>bool</td><td>获取是否是公历纪年</td></tr><tr><td>isLeapYear(year: int)</td><td>bool</td><td>获取某年是否是闰年</td></tr><tr><td>isLunar()</td><td>bool</td><td>获取是否是月历</td></tr><tr><td>isSolar()</td><td>bool</td><td>获取是否是太阳历</td></tr><tr><td>maximumDaysInMonth()</td><td>int</td><td>获取月中最大天数</td></tr><tr><td>maximumMonthsInYear()</td><td>int</td><td>获取年中最大月数</td></tr><tr><td>minimumDaysInMonth()</td><td>int</td><td>获取月中最小天数</td></tr></tbody></table><h4 id="日历类qcalendar例子" tabindex="-1"><a class="header-anchor" href="#日历类qcalendar例子" aria-hidden="true">#</a> 日历类QCalendar例子</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: UTF-8 -*-</span>
<span class="token comment"># File date: Hi_2023/2/28 23:03</span>
<span class="token comment"># File_name: 01-QCalendarWidget 例子.py</span>


<span class="token keyword">import</span> sys
<span class="token keyword">from</span> PySide6 <span class="token keyword">import</span> QtCore
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtGui <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> QDate


<span class="token keyword">class</span> <span class="token class-name">CalendarExample</span><span class="token punctuation">(</span>QWidget<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>CalendarExample<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setGeometry<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span><span class="token string">&#39;Calendar 例子&#39;</span><span class="token punctuation">)</span>
        layout <span class="token operator">=</span> QVBoxLayout<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>dateTimeEdit <span class="token operator">=</span> QDateTimeEdit<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>dateTimeEdit<span class="token punctuation">.</span>setCalendarPopup<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>cal <span class="token operator">=</span> QCalendarWidget<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>setMinimumDate<span class="token punctuation">(</span>QDate<span class="token punctuation">(</span><span class="token number">1980</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>setMaximumDate<span class="token punctuation">(</span>QDate<span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>setGridVisible<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>setSelectedDate<span class="token punctuation">(</span>QDate<span class="token punctuation">(</span><span class="token number">2010</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>setHorizontalHeaderFormat<span class="token punctuation">(</span>QCalendarWidget<span class="token punctuation">.</span>LongDayNames<span class="token punctuation">)</span>
        <span class="token comment"># self.cal.setFirstDayOfWeek(Qt.Wednesday)</span>
        self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>setFirstDayOfWeek<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>Wednesday<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>label <span class="token operator">=</span> QLabel<span class="token punctuation">(</span><span class="token string">&#39;此处会显示选择日期信息&#39;</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>showDate<span class="token punctuation">(</span>self<span class="token punctuation">.</span>cal<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>dateTimeEdit<span class="token punctuation">.</span>dateChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>setSelectedDate<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> self<span class="token punctuation">.</span>dateTimeEdit<span class="token punctuation">.</span>setDate<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>

        layout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>dateTimeEdit<span class="token punctuation">)</span>
        layout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>cal<span class="token punctuation">)</span>
        layout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>label<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setLayout<span class="token punctuation">(</span>layout<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">showDate</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> cal<span class="token punctuation">)</span><span class="token punctuation">:</span>
        date <span class="token operator">=</span> cal<span class="token punctuation">.</span>selectedDate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toString<span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd dddd&quot;</span><span class="token punctuation">)</span>
        month <span class="token operator">=</span> cal<span class="token punctuation">.</span>monthShown<span class="token punctuation">(</span><span class="token punctuation">)</span>
        year <span class="token operator">=</span> cal<span class="token punctuation">.</span>yearShown<span class="token punctuation">(</span><span class="token punctuation">)</span>
        _str <span class="token operator">=</span> <span class="token string">&#39;当前选择日期: %s;\\n当前选择月份: %s;\\n当前选择年份: %s;&#39;</span> <span class="token operator">%</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> month<span class="token punctuation">,</span> year<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>label<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>_str<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
    demo <span class="token operator">=</span> CalendarExample<span class="token punctuation">(</span><span class="token punctuation">)</span>
    demo<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="日期类qdate" tabindex="-1"><a class="header-anchor" href="#日期类qdate" aria-hidden="true">#</a> 日期类QDate</h3><h4 id="日期类qdate构造方法" tabindex="-1"><a class="header-anchor" href="#日期类qdate构造方法" aria-hidden="true">#</a> 日期类QDate构造方法</h4><p>日期类QDate 用年、月日来记录某天,例如date=QDate(2023,8,22)date记录的是2023年8月22日,它可以从系统时钟中读取当前日期。</p><p>QDate提供了操作日期的方法,例如添加和减去日期、月份和年份得到新的日期,与日期字符串相互转换等。</p><p>QDate 在PySide6,QtCore模块中,用QDate创建日期实例的方法如下所示:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> QDate

QDate<span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QDate<span class="token punctuation">(</span>QDate<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>QDate<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QDate<span class="token punctuation">(</span>y<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> m<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> d<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QDate<span class="token punctuation">(</span>y<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> m<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> d<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> cal<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>QCalendar<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="日期qdate的常用方法" tabindex="-1"><a class="header-anchor" href="#日期qdate的常用方法" aria-hidden="true">#</a> 日期QDate的常用方法</h4><p>日期QDate的常用方法如表所示,其中[]中的内容是可选项,主要方法介绍如下。</p><ul><li><p>日期时间设置获取</p><ul><li>用setDate(year:int,month;int,day;int)方法可以设置年、月</li><li>用getDate()方法可以获取记录的年月日,返回值是元组Tuple(year,month,day);</li><li>用currentDate()方法可以获取系统日期;</li><li>用day()month()和 year()方法可分别获取日、月、年。</li></ul></li><li><p>时间计算</p><ul><li>用addDays(days:int) addMonths(months:int) addYears(years:int)方法可以在当前记录的时间上增加或减少天月和年;</li><li>用daysTo(QDate)方法可计算与指定日期之间的天数间隔</li></ul></li><li><p>字符串&lt;==&gt;QDate时间转换</p><ul><li>用fromString(string: str,format:Qt.DateFormat=Qt.TextDate)或 fromString(string:str,format:str)方法可以将字符串型的日期数据转换成QDate</li><li>用toString(format:Qt.DateFormat=Qt.TextDate)或 toString(format: str)方法将记录的年、月、日转换成字符串</li></ul></li></ul><p>以上 Qt.DateFormat 是枚举类型常量,Qt.DateFormat可以取的值如表所示,用Qt.DateFormat 进行指定格式的转换时与操作系统有关。</p><table><thead><tr><th>Qt.DateFormat的取值</th><th>举例</th></tr></thead><tbody><tr><td>Qt.DefaultLocaleLongDate</td><td>[romString(&quot;2022年8月22 日*,Q1.DefaultLocaleLongDate)</td></tr><tr><td>Qt.DefaultIocaleShortDate</td><td>[romString(&quot;2022/08/22&quot;,Qt.DelaultLocaleSbortDate)</td></tr><tr><td>Qt.ISODate</td><td>fromString(*2022-G8-22&quot;,Qt.ISODate)</td></tr><tr><td>Qt.LocaleDate</td><td>fromString(*2022/08/22&quot;,Qt.LocaleDate)</td></tr><tr><td>Qt.SystemLocaleDate</td><td>fromString(&quot;2022/08/22&quot;,Qt.SystemLocaleDate)</td></tr><tr><td>Qt.SystemLocaleLongDate</td><td>fromString(&quot;2022年8月 22 日*:Qt.SystemLocaleLongDate)</td></tr><tr><td>Qt.SystemLocaleShortDate</td><td>fromString(&quot;2022/8/22&quot;.Qt.SystemLocaleShortDate)</td></tr><tr><td>Qt.TextDate</td><td>fromString(&quot;周六8月 22 2022*.Qt.TextDate)</td></tr></tbody></table><p>format 是格式化文本,可以取的格式符号如表所示</p><table><thead><tr><th>日期格式符</th><th>说 明</th></tr></thead><tbody><tr><td>d</td><td>天数用1到31表示(不补0)</td></tr><tr><td>dd</td><td>天数用01到31表示(补0)</td></tr><tr><td>ddd</td><td>天数用英文简写表示(&#39;Mon&#39;~&#39;Sun&#39;)或汉字表示</td></tr><tr><td>dddd</td><td>天数用英文全写表示(&#39;Monday&#39;~&#39;Sunday&#39;)或汉字表示</td></tr><tr><td>M</td><td>月数用1到12表示(不补0)</td></tr><tr><td>MM</td><td>月数用01到12 表示(补 0)</td></tr><tr><td>MMM</td><td>月数用英文简写表示(&#39;Jan&#39;～&#39;Dec&#39;)或汉字表示</td></tr><tr><td>MMMM</td><td>月数用英文全写表示(&#39;January&#39;~&#39;December&#39;)或汉字表示</td></tr><tr><td>yy</td><td>年数用C0～99表示</td></tr><tr><td>yyyy</td><td>年数用4 位数表示</td></tr></tbody></table><p>例如date=QDate(2022,822),datetoString(&quot;日期是yyyy年M月d日&quot;)的返回值是&quot;日期是2022年8月22日</p><p>datetoString(&quot;今天是dddd&quot;的返回值是&quot;今天是星期六&quot;,date.toString(&quot;今天是ddd&quot;)的返回值是&quot;今天是周六&quot;。</p><p>再例如以下方法的返回值都是 QDate(2022,8,22):</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>QDate<span class="token punctuation">.</span>fromString<span class="token punctuation">(</span><span class="token string">&#39;20220822&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;yyyyMMdd&#39;</span><span class="token punctuation">)</span>
QDate<span class="token punctuation">.</span>fromString<span class="token punctuation">(</span><span class="token string">&#39;2022/08/22&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;yyyy/MM/dd&#39;</span><span class="token punctuation">)</span>
QDate<span class="token punctuation">.</span>fromString<span class="token punctuation">(</span><span class="token string">&#39;2022-08-22&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;yyyy-MM-dd&#39;</span><span class="token punctuation">)</span>
QDate<span class="token punctuation">.</span>fromString<span class="token punctuation">(</span><span class="token string">&#39;2022,08,22&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;yyyy,MM,dd&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>QDate的方法及参数类型</th><th>返回值的类型</th><th>说 明</th></tr></thead><tbody><tr><td>setDate(year: int, month: int, day: int[, cal: QCalendar])</td><td>bool</td><td>根据年、月、日设置日期</td></tr><tr><td>getDate()</td><td>Tuple[int, int, int]</td><td>获取记录的年、月、日</td></tr><tr><td>day(), day(cal:QCalendar)</td><td>int</td><td>获取记录的日</td></tr><tr><td>month()、month(cal:QCalendar)</td><td>int</td><td>获取记录的月</td></tr><tr><td>year()、year(cal:QCalendar)</td><td>int</td><td>获取记录的月</td></tr><tr><td>addDays(days:int)</td><td>QDate</td><td>返回增加指定天后的日期, 参数可为负</td></tr><tr><td>addMonths(months: int[, cal: Qcalendar])</td><td>QDate</td><td>返回增加指定月后的日期, 参数可为负</td></tr><tr><td>addYears(years:int[, cal:Qcalendar])</td><td>QDate</td><td>返回增加指定年后的日期, 参数可为负</td></tr><tr><td>dayOfWeek([cal: Qcalendar])</td><td>int</td><td>获取记录的日期是一周中的第几天</td></tr><tr><td>dayOfYear([cal: Qcalendar])</td><td>int</td><td>获取记录的日期是一年中的第几天</td></tr><tr><td>dayslnMonth([cal:Qcalendar])</td><td>int</td><td>获取日期所在月的月天数</td></tr><tr><td>daysInYear([cal: Qcalendar])</td><td>int</td><td>获取日期所在年的年天数</td></tr><tr><td>daysTo(d:QDate)</td><td>int</td><td>获取记录的日期到指定日期的天数 ·</td></tr><tr><td>isNull()</td><td>bool</td><td>获取是否不含日期数据</td></tr><tr><td>toJulianDay()</td><td>int</td><td>换算成儒略日</td></tr><tr><td>toString(format=Qt.TextDate)</td><td>Str</td><td>将年、月、日按指定格式转换成字符串</td></tr><tr><td>toString(format: str, cal: QCalendar=Default(QCalendar))</td><td>str</td><td>将年、月、日按指定格式转换成字符串</td></tr><tr><td>weekNumber()</td><td>Tuple[int, int]</td><td>获取日期在一年中的第几周, 返回的元 组的第1个整数是周数, 第2个是年</td></tr><tr><td>[static]currentDate()</td><td>QDate</td><td>获取系统的日期</td></tr><tr><td>[static]fromJulianDay(jd:int)</td><td>QDate</td><td>将儒略日时间转换成日期</td></tr><tr><td>[static]fromString(string: str, format: Qt.DateFormat=Qt.TextDate)</td><td>QDate</td><td>从字符串中获取日期</td></tr><tr><td>[static]fromString(string:str, format: str, cal=Default(QCalendar))</td><td>QDate</td><td>从字符串中获取日期</td></tr><tr><td>[static]isLeapYear(year:int)</td><td>b001</td><td>获取指定的年份是否是闰年</td></tr><tr><td>[static]isValid(Ly: int.m:int, d:int])</td><td>bool</td><td>获取指定的年、月、日是否有效</td></tr></tbody></table><h3 id="时间类qtime" tabindex="-1"><a class="header-anchor" href="#时间类qtime" aria-hidden="true">#</a> 时间类QTime</h3><h4 id="时间类qtime的构造方法" tabindex="-1"><a class="header-anchor" href="#时间类qtime的构造方法" aria-hidden="true">#</a> 时间类QTime的构造方法</h4><p>时间类QTime用时分秒和毫秒来记录某个时间点,它采用24 小时制,没有AM/PM和时区概念</p><p>例如time=QTime(22,35,15,124),time 记录的时间是22时35分15秒124 毫秒。</p><p>它可以对时间进行操作,例如增加或减少毫秒、秒；进行时间与字符串的相互转换等。</p><p>用QTime创建时间实例的方法如下所示:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> QTime

QTime<span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QTime<span class="token punctuation">(</span>QTime<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>QTime<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QTime<span class="token punctuation">(</span>h<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> m<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> ms<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="时间qtime的常用方法" tabindex="-1"><a class="header-anchor" href="#时间qtime的常用方法" aria-hidden="true">#</a> 时间QTime的常用方法</h4><p>时间QTime的常用方法如表所示,主要方法介绍如下:</p><ul><li><p>时间设置和获取</p><ul><li>用setHMS(h:int, m:int, s:int, ms:int=0)方法可以设置一个时间点</li><li>用hour() minute() second()和 mse()方法可以分别获取小时分钟秒和毫秒数据。</li><li>用addMSecs(ms:int)方法获取在记录的时间上增加ms 毫秒后的时间</li><li>用addSecs(secs:int)方法获取在记录的时间上增加 secs 秒后的时间。</li></ul></li><li><p>时间&lt;==&gt;字符串转换</p><ul><li>用fromString(str,format; Qt.DateFormat=Qt.TextDate)或 fromString(str,format:str)方法可以将时间字符串转换成日期</li><li>用toString(f:QtDateFormat=Qt.TextDate)或toString(format:str)方法可以按照格式将时间转换成字符串</li></ul></li></ul><p>以上其中format是格式字符串可以取的格式字符如表所示。</p><ul><li>例如<code>time=QTime(18,23,15,124)</code>,则<code>time.toString(&quot;hh:mm:ssA&quot;)</code>的值是<code>&quot;06:23:15下午&quot;</code></li><li>再如<code>time=QTime.currentTime()</code>,则 <code>timetoString(&quot;现在时间是h: m: s: zzz&quot;)</code>的值是<code>&quot;现在时间是 16:19:44:698&quot;</code></li></ul><table><thead><tr><th>时间格式字符</th><th>说 明</th></tr></thead><tbody><tr><td>+</td><td>小时用0～23表示,或 1～12表示(如果显示am/pm)</td></tr><tr><td>hh</td><td>小时用00～23表示,或01～12表示(如果显示am/pm)</td></tr><tr><td>H</td><td>小时用0~23表示(不论是否显示am/pm)</td></tr><tr><td>HH</td><td>小时用00~23表示(不论是否显示am/pm)</td></tr><tr><td>m</td><td>分钟用0～59表示(不补0)</td></tr><tr><td>mm</td><td>分钟用00~59表示(补0)</td></tr><tr><td>S</td><td>秒用0～59表示(不补0)</td></tr><tr><td>SS</td><td>秒用00~59表示(补0)</td></tr><tr><td>z</td><td>毫秒用0~999表示(不补0)</td></tr><tr><td>zzz</td><td>毫秒用000~999表示(补0)</td></tr><tr><td>t</td><td>时区,例如&quot;CEST&quot;</td></tr><tr><td>ap或a</td><td>使用am/pm表示上午/下午或汉字</td></tr><tr><td>AP或A</td><td>使用AM/PM表示上午/下午或汉字</td></tr></tbody></table><h3 id="日期时间类qdatetime" tabindex="-1"><a class="header-anchor" href="#日期时间类qdatetime" aria-hidden="true">#</a> 日期时间类QDateTime</h3><h4 id="日期时间类qdatetime的构造方法" tabindex="-1"><a class="header-anchor" href="#日期时间类qdatetime的构造方法" aria-hidden="true">#</a> 日期时间类QDateTime的构造方法</h4><p>日期时间类QDateTime是将 QDate 和QTime的功能合并到一个类中,用年、月、日、时、分、秒、毫秒记录某个日期和某个时间点,它有时区的概念。</p><p>用QDateTime创建日期时间实例的方法如下所示,其中Qt.TimeSpec 可以取以下值,对应的值分别是 0~3;当spec取 Qt.OffsetFromUTC时,offsetSeconds 才有意义。</p><ul><li>Qt.LocalTime</li><li>Qt.UTC</li><li>Qt.OffsetFromUTC</li><li>Qt.TimeZone</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> QDateTime

QDateTime<span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QDateTime<span class="token punctuation">(</span>arg__1<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> arg__2<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> arg__3<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> arg__4<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> arg__5<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> arg__6<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QDateTime<span class="token punctuation">(</span>arg__1<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> arg__2<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> arg__3<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> arg__4<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> arg__5<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> arg__6<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> arg__7<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> arg__8<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>Qt<span class="token punctuation">.</span>TimeSpec <span class="token operator">=</span> Instance<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>LocalTime<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QDateTime<span class="token punctuation">(</span>arg__1<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> arg__2<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> arg__3<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> arg__4<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> arg__5<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> arg__6<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> arg__7<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> arg__8<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> Instance<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>LocalTime<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QDateTime<span class="token punctuation">(</span>date<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>QDate<span class="token punctuation">,</span> time<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>QTime<span class="token punctuation">,</span> spec<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>Qt<span class="token punctuation">.</span>TimeSpec <span class="token operator">=</span> Instance<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>LocalTime<span class="token punctuation">)</span><span class="token punctuation">,</span> offsetSeconds<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QDateTime<span class="token punctuation">(</span>date<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>QDate<span class="token punctuation">,</span> time<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>QTime<span class="token punctuation">,</span> timeZone<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>QTimeZone<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QDateTime<span class="token punctuation">(</span>other<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>QDateTime<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="日期时间类qdatetime的常用方法" tabindex="-1"><a class="header-anchor" href="#日期时间类qdatetime的常用方法" aria-hidden="true">#</a> 日期时间类QDateTime的常用方法</h4><p>日期时间类QDateTime的常用方法如表所示其大部分方法与QDate 和QTime的方法相同。</p><p>利用QDateTime将日期时间与字符串进行相互转换时,可以参考 QDate 和QTime的格式字符。.</p><table><thead><tr><th>QDateTime的方法及参数类型</th><th>返回值的类型</th><th>说 明</th></tr></thead><tbody><tr><td>setDate(date:QDate)</td><td>None</td><td>设置日期</td></tr><tr><td>setTime(time: QTime)</td><td>None</td><td>设置时间</td></tr><tr><td>date()</td><td>QDate</td><td>获取日期</td></tr><tr><td>time()</td><td>QTime</td><td>获取时间</td></tr><tr><td>setTimeSpec(spec:Qt.TimeSpec)</td><td>None</td><td>设置计时准则</td></tr><tr><td>setSecsSinceEpoch(secs: int)</td><td>None</td><td>设置从1970年1月1日零时开始的时间(秒)</td></tr><tr><td>setMSecsSinceEpoch(msecs；int)</td><td>None</td><td>将日期时间设置为从1970年1月1日零时开 始的时间</td></tr><tr><td>setOffsetFromUtc(offsetSeconds:int)</td><td>None</td><td>将日期时间设置为国际统一时间偏移指定 offsetSeconds秒开始的时间,偏移时间不超 过士14小时</td></tr><tr><td>addYears(years:int)</td><td>QDateTime</td><td>增加年</td></tr><tr><td>addMonths(months:int)</td><td>QDateTime</td><td>增加月</td></tr><tr><td>addDays(days:int)</td><td>QDateTime</td><td>增加天</td></tr><tr><td>addSecs(secs:int)</td><td>QDateTime</td><td>增加秒</td></tr><tr><td>addMSecs(msecs:int)</td><td>QDateTime</td><td>增加毫秒</td></tr><tr><td>[static]currentDateTime()</td><td>QDateTime</td><td>获取当前系统的日期和时间</td></tr><tr><td>[static]currentDateTimeUtc()</td><td>QDateTime</td><td>获取当前世界统一时间</td></tr><tr><td>[static]currentSecsSinceEpoch()</td><td>int(秒)</td><td>返回从1970年1月1日零时到现在为止的秒数</td></tr><tr><td>[static]currentMSecsSinceEpoch()</td><td>int</td><td>返回从1970年1月1日零时到现在为止的毫秒数</td></tr><tr><td>daysTo(QDateTime)</td><td>int(天)</td><td>获取与指定日期时间的间隔</td></tr><tr><td>secsTo(QDateTime)</td><td>int(秒)</td><td>获取与指定日期时间的间隔</td></tr><tr><td>msecsTo(QDateTime)</td><td>int(毫秒)</td><td>获取与指定日期时间的间隔</td></tr><tr><td>[static]fromString(str, format: Qt.DateFormat=Qt.TextDate)</td><td>QDateTime</td><td>将字符串转换成日期时间</td></tr><tr><td>[static]fromString(str,format: str,cal: QCalendar=Default(QCalendar))</td><td>QDate Time</td><td>将字符串转换成日期时间</td></tr><tr><td>[static]fromSecsSinceEpoch(secs:int, spec:Qt.TimeSpec=Qt.LocalTime, offsetFromUtc:int=0)</td><td>QDateTime</td><td>指定秒创建日期时间</td></tr><tr><td>[static]fromMSecsSinceEpoch(msecs: int, spec: Qt.TimeSpec=Qt.LocalTime, offsetFromUte: int=0)</td><td>QDateTime</td><td>指定毫秒创建日期时间</td></tr><tr><td>toString(format: str, cal: QCalendar=Default(QCalendar))</td><td>str</td><td>根据格式将日期时间转换成字符串</td></tr><tr><td>toString(format=Qt.TextDate)</td><td>Str</td><td>根据格式将日期时间转换成字符串</td></tr><tr><td>toUTC()</td><td>QDateTime</td><td>转换成国际统一时间</td></tr><tr><td>toTimeSpec(spec;Qt.TimeSpec)</td><td>QDateTime</td><td>转换成指定的计时时间</td></tr><tr><td>toSecsSinceEpoch()</td><td>int(秒)</td><td>返回从1970年1月1日开始计时的秒数</td></tr><tr><td>toMSecsSinceEpoch()</td><td>int(毫秒)</td><td>返回从1970年1月1日开始计时的毫秒数</td></tr><tr><td>toLocalTime()</td><td>QDateTime</td><td>转换成当地时间</td></tr><tr><td>isNull()</td><td>boo1</td><td>所记录的日期时间是否为空</td></tr><tr><td>isValid()</td><td>b001</td><td>所记录的日期时间是否有效</td></tr></tbody></table><h3 id="日历控件qcalenderwidget" tabindex="-1"><a class="header-anchor" href="#日历控件qcalenderwidget" aria-hidden="true">#</a> 日历控件QCalenderWidget</h3><figure><img src="`+p+`" alt="QCalendarWidget" tabindex="0" loading="lazy"><figcaption>QCalendarWidget</figcaption></figure><h4 id="日历控件qcalenderwidget的构造方法" tabindex="-1"><a class="header-anchor" href="#日历控件qcalenderwidget的构造方法" aria-hidden="true">#</a> 日历控件QCalenderWidget的构造方法</h4><p>日历控件QCalendarWidget 主要用于显示日期星期和周数,可以设置日历控件显示的最小日期和最大日期,还可以设置日历表头的样式。</p><p>用QCalendarWidget类创建实例对象的方法如下所示其中parent是日历控件所在的窗体或容器控件。QCalendarWidget 继承自QWidget类。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> QCalendarWidget

QCalendarWidget<span class="token punctuation">(</span>parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="日历控件qcalendarwidget的常用方法" tabindex="-1"><a class="header-anchor" href="#日历控件qcalendarwidget的常用方法" aria-hidden="true">#</a> 日历控件QCalendarWidget的常用方法</h4><p>日历控件QCalendarWidget 的常用方法如表所示,主要方法介绍如下。</p><ul><li>日期选择和选择模式 <ul><li>用selectedDate()方法可以获取当前选择的日期;</li><li>用setSelectedDate(QDate)方法可以用代码选中某个日期;</li><li>用setDateRange(min:QDate,max:QDate)方法或setMaximumDate(date:QDate)和 setMinimumDate(date:QDate)方法可以设置选择的日期范围;</li><li>用setSelectionMode(QCalendarWidget,SelectionMode)方法可以设置选择日期的模式,其中参数QCalendarWidget.SelectionMode可以取: <ul><li>QCalendarWidget,NoSelection(不允许选择)</li><li>QCalendarWidget,SingleSelection(单选)</li></ul></li></ul></li><li>显示指定时间段 <ul><li>用showSelectedDate()方法可以跳转到选中的日期</li><li>用setCurrentPage(yearmonth)方法可以显示指定年指定月的日历</li><li>用showNextMonth()showNextYear()方法可以显示下个月、明年同一日期的日历。</li></ul></li><li>日历控件外观 <ul><li>用setGridVisible(bool)方法可以设置是否显示网格线,</li><li>用setNavigationBarVisible(bool)方法可以设置是否显示导航条。</li><li>用setVerticalHeaderFormat((QCalendarWidget.VerticalHeaderFormat)方法可以设置竖直表头的格式,其中参数 QCalendarWidget.VerticalHeaderFormat 可以取: <ul><li>QCalendarWidget,ISOWeekNumbers(标准格式的周数)</li><li>QCalendarWidget,NoVerticalHeader(隐藏周数)。</li></ul></li><li>用setHorizontalHeaderFormat(QCalendarWidget.HorizontalHeaderFormat)方法可以设置水平表头的格式其中参数QCalendarWidget.HorizontalHeaderFormat 可以取: <ul><li>QCalendarWidget.SingleLetterDayNames(用单个字母代替全拼,如M代表Monday)</li><li>QCalendarWidget.ShortDayNames(用缩写代替全拼,如Mon 代表Monday)</li><li>QCalendarWidget,LongDayNames(全名)</li><li>QCalendarWidget.NoHorizontalHeader(隐藏表头)。</li></ul></li><li>用setFirstDayOfWeek(Qt.DayOfWeek)方法可以设置一周中哪天排在最前面,其中参数 QtDayOfWeek 可以取Qt.Monday~Qt.Sunday。</li></ul></li></ul><table><thead><tr><th>QCalendarWidget 的方法及参数类型</th><th>返回值的类型</th><th>说明</th></tr></thead><tbody><tr><td>[slot]setSelectedDate(date:QDate)</td><td>None</td><td>用代码设置选中的日期</td></tr><tr><td>selectedDate()</td><td>QDate</td><td>获取选中的日期</td></tr><tr><td>setCalendar(calendar:QCalendar)</td><td>None</td><td>设置日历</td></tr><tr><td>calendar()</td><td>QCalendar</td><td>获取日历</td></tr><tr><td>[slot]setCurrentPage(year:int,month:int)</td><td>None</td><td>设置当前显示的年和月</td></tr><tr><td>setDateTextFormat(QDate,QTextCharFormat)</td><td>None</td><td>设置表格的样式</td></tr><tr><td>dateTextFormat(date:QDate) .</td><td>QTextCharFormat</td><td>获取表格的样式</td></tr><tr><td>setFirstDayOfWeek(Qt.DayOfWeek)</td><td>None</td><td>设置一周第一天显示哪天</td></tr><tr><td>firstDayOfWeek()</td><td>Qt.DayOfWeek</td><td>获取一周第一天显示的是哪天</td></tr><tr><td>[slot]setGridVisible(bool)</td><td>None</td><td>设置是否显示网格线</td></tr><tr><td>isGridVisible()</td><td>bool</td><td>获取是否已经显示网格线</td></tr><tr><td>setHorizontalHeaderFormat(QCalendarWidget.HorizontalHeaderFormat)</td><td>None</td><td>设置水平表头的格式</td></tr><tr><td>setVerticalHeaderFormat(QCalendarWidget.VerticalHeaderFormat)</td><td>None</td><td>设置竖直表头的格式</td></tr><tr><td>[slot]setDateRange(min:QDate.max: QDate)</td><td>None</td><td>设置日历控件可选择的最小日期 和最大日期</td></tr><tr><td>setMaximumDate(date: QDate)</td><td>None</td><td>设置日历控件可选的最大日期</td></tr><tr><td>maximumDate()</td><td>QDate</td><td>获取日历控件可选的最大日期</td></tr><tr><td>setMinimumDate(date:QDate)</td><td>None</td><td>设置日历控件可选的最小日期</td></tr><tr><td>minimumDate()</td><td>QDate</td><td>获取日历控件可选的最小日期</td></tr><tr><td>setSelectionMode(QCalendarWidget.SelectionMode)</td><td>None</td><td>设置选择模式</td></tr><tr><td>[slot]setNavigationBarVisible(bool)</td><td>None</td><td>设置导航条是否可见</td></tr><tr><td>isNavigationBarVisible()</td><td>bo01</td><td>获取导航条是否可见</td></tr><tr><td>[slot]showSelectedDate()</td><td>None</td><td>显示已经选中日期的日历</td></tr><tr><td>[slot]showNextMonth()</td><td>None</td><td>显示下个月的日历</td></tr><tr><td>[slot]showNextYear()</td><td>None</td><td>显示明年的日历</td></tr><tr><td>[slot]showPreviousMonth()</td><td>None</td><td>显示上个月的日历</td></tr><tr><td>[slot]showPreviousYear()</td><td>None</td><td>显示去年的日历</td></tr><tr><td>[slot]showToday()</td><td>None</td><td>显示当前日期的日历</td></tr><tr><td>monthShown()</td><td>int</td><td>获取日历显示的月份</td></tr><tr><td>yearShown()</td><td>Int</td><td>获取日历显示的年份</td></tr></tbody></table><h4 id="日历控件qcalendarwidget例1" tabindex="-1"><a class="header-anchor" href="#日历控件qcalendarwidget例1" aria-hidden="true">#</a> 日历控件QCalendarWidget例1</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: UTF-8 -*-</span>
<span class="token comment"># File date: Hi_2023/2/28 23:03</span>
<span class="token comment"># File_name: 01-QCalendarWidget 例子.py</span>


<span class="token keyword">import</span> sys
<span class="token keyword">from</span> PySide6 <span class="token keyword">import</span> QtCore
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtGui <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> QDate


<span class="token keyword">class</span> <span class="token class-name">CalendarExample</span><span class="token punctuation">(</span>QWidget<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>CalendarExample<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setGeometry<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span><span class="token string">&#39;Calendar 例子&#39;</span><span class="token punctuation">)</span>
        layout <span class="token operator">=</span> QVBoxLayout<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>dateTimeEdit <span class="token operator">=</span> QDateTimeEdit<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>dateTimeEdit<span class="token punctuation">.</span>setCalendarPopup<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>cal <span class="token operator">=</span> QCalendarWidget<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>setMinimumDate<span class="token punctuation">(</span>QDate<span class="token punctuation">(</span><span class="token number">1980</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>setMaximumDate<span class="token punctuation">(</span>QDate<span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>setGridVisible<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>setSelectedDate<span class="token punctuation">(</span>QDate<span class="token punctuation">(</span><span class="token number">2010</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>setHorizontalHeaderFormat<span class="token punctuation">(</span>QCalendarWidget<span class="token punctuation">.</span>LongDayNames<span class="token punctuation">)</span>
        <span class="token comment"># self.cal.setFirstDayOfWeek(Qt.Wednesday)</span>
        self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>setFirstDayOfWeek<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>Wednesday<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>label <span class="token operator">=</span> QLabel<span class="token punctuation">(</span><span class="token string">&#39;此处会显示选择日期信息&#39;</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>showDate<span class="token punctuation">(</span>self<span class="token punctuation">.</span>cal<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>dateTimeEdit<span class="token punctuation">.</span>dateChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>setSelectedDate<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> self<span class="token punctuation">.</span>dateTimeEdit<span class="token punctuation">.</span>setDate<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>

        layout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>dateTimeEdit<span class="token punctuation">)</span>
        layout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>cal<span class="token punctuation">)</span>
        layout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>label<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setLayout<span class="token punctuation">(</span>layout<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">showDate</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> cal<span class="token punctuation">)</span><span class="token punctuation">:</span>
        date <span class="token operator">=</span> cal<span class="token punctuation">.</span>selectedDate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toString<span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd dddd&quot;</span><span class="token punctuation">)</span>
        month <span class="token operator">=</span> cal<span class="token punctuation">.</span>monthShown<span class="token punctuation">(</span><span class="token punctuation">)</span>
        year <span class="token operator">=</span> cal<span class="token punctuation">.</span>yearShown<span class="token punctuation">(</span><span class="token punctuation">)</span>
        _str <span class="token operator">=</span> <span class="token string">&#39;当前选择日期: %s;\\n当前选择月份: %s;\\n当前选择年份: %s;&#39;</span> <span class="token operator">%</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> month<span class="token punctuation">,</span> year<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>label<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>_str<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
    demo <span class="token operator">=</span> CalendarExample<span class="token punctuation">(</span><span class="token punctuation">)</span>
    demo<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="日历控件qcalendarwidget例2" tabindex="-1"><a class="header-anchor" href="#日历控件qcalendarwidget例2" aria-hidden="true">#</a> 日历控件QCalendarWidget例2</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: UTF-8 -*-</span>
<span class="token comment"># File date: Hi_2023/3/19 15:54</span>
<span class="token comment"># File_name: 01-例2.py</span>


<span class="token keyword">import</span> sys
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtGui <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> PySide6 <span class="token keyword">import</span> QtCore
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> QDate


<span class="token keyword">class</span> <span class="token class-name">CalendarExample</span><span class="token punctuation">(</span>QWidget<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>CalendarExample<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>initUI<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">initUI</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># 实例化日历控件</span>
        self<span class="token punctuation">.</span>cal <span class="token operator">=</span> QCalendarWidget<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        <span class="token comment"># 设置日历的最小日期</span>
        self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>setMinimumDate<span class="token punctuation">(</span>QDate<span class="token punctuation">(</span><span class="token number">1980</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment"># 设置日历的最大日期</span>
        self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>setMaximumDate<span class="token punctuation">(</span>QDate<span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment"># 设置日历的网格是否可见</span>
        self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>setGridVisible<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        <span class="token comment"># 控件位置移动</span>
        self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
        <span class="token comment"># 点击绑定自定义的槽函数</span>
        self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>clicked<span class="token punctuation">[</span>QtCore<span class="token punctuation">.</span>QDate<span class="token punctuation">]</span><span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>showDate<span class="token punctuation">)</span>

        <span class="token comment"># 创建标签</span>
        self<span class="token punctuation">.</span>lb1 <span class="token operator">=</span> QLabel<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        <span class="token comment"># 设置标签的文本为日历控件所选中的日期，并转为str数据显示</span>
        date <span class="token operator">=</span> self<span class="token punctuation">.</span>cal<span class="token punctuation">.</span>selectedDate<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>lb1<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>date<span class="token punctuation">.</span>toString<span class="token punctuation">(</span><span class="token string">&#39;yyyy-MM-dd dddd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token comment"># 标签移动位置</span>
        self<span class="token punctuation">.</span>lb1<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span>
        <span class="token comment"># 设置主窗口的位置及初始大小和标题</span>
        self<span class="token punctuation">.</span>setGeometry<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span><span class="token string">&#39;Calendar例子&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">showDate</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> date<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># 设置标签的文本值</span>
        self<span class="token punctuation">.</span>lb1<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>date<span class="token punctuation">.</span>toString<span class="token punctuation">(</span><span class="token string">&#39;yyyy-MM-dd dddd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
    demo <span class="token operator">=</span> CalendarExample<span class="token punctuation">(</span><span class="token punctuation">)</span>
    demo<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span>exec_<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="日期时间控件qdatetimeedit" tabindex="-1"><a class="header-anchor" href="#日期时间控件qdatetimeedit" aria-hidden="true">#</a> 日期时间控件QDateTimeEdit</h3><p>日期时间控件包括QDateTimeEdit,QDateEdit 和QTimeEdit 三个控件。</p><p>这三个控件可以显示日期时间,但更多的是用于输入日期时间,</p><ul><li>QDateTimeEdit可以输入日期和时间,QDateTimeEdit是有下拉列表的日历控件用于选择日期</li><li>QDateEdit 只能输入日期</li><li>QTimeEdit 只能输人时间</li></ul><p>用QDateTimeEdit、QDateEdit和QTimeEdit类创建实例对象的方法如下所示,其中parent是控件所在的窗体或容器控件。</p><p>QDateTimeEdit是从QAbstractSpinBox类继承而来的</p><p>QDateEdit和QTimeEdit都是从QDateTimeEdit类继承而来的。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> QDateTimeEdit<span class="token punctuation">,</span> QTimeEdit<span class="token punctuation">,</span> QDateEdit

QDateTimeEdit<span class="token punctuation">(</span>d<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>QDate<span class="token punctuation">,</span> parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QDateTimeEdit<span class="token punctuation">(</span>dt<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>QDateTime<span class="token punctuation">,</span> parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QDateTimeEdit<span class="token punctuation">(</span>parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QDateTimeEdit<span class="token punctuation">(</span>t<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>QTime<span class="token punctuation">,</span> parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QDateTimeEdit<span class="token punctuation">(</span>val<span class="token punctuation">:</span> Any<span class="token punctuation">,</span> parserType<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>QMetaType<span class="token punctuation">.</span>Type<span class="token punctuation">,</span> parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>

QDateEdit<span class="token punctuation">(</span>date<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>QDate<span class="token punctuation">,</span> parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QDateEdit<span class="token punctuation">(</span>parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>

QTimeEdit<span class="token punctuation">(</span>parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QTimeEdit<span class="token punctuation">(</span>time<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtCore<span class="token punctuation">.</span>QTime<span class="token punctuation">,</span> parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="qdatetimeedit、qdateedit和qtimeedit的方法" tabindex="-1"><a class="header-anchor" href="#qdatetimeedit、qdateedit和qtimeedit的方法" aria-hidden="true">#</a> QDateTimeEdit、QDateEdit和QTimeEdit的方法</h4><p>日期时间控件 QDateTimeEdit 的常用方法如表所示。</p><p>由于QDateEdit 和QTimeEdit 都继承自QDateTimeEdit,因此 QDateEdit 和 QTimeEdit 的方法与QDateTimeEdit 的大多数方法相同。</p><p>QDateTimeEdit 的主要方法介绍如下:</p><ul><li>设置时间日期 <ul><li>用setDate(QDate),setTime(QTime)和 setDateTime(QDateTime)方法为时间和日期控件QDateEditQTimeEdit 和 QDateTimeEdit 设置日期和时间</li><li>用setDateRange(QDate, QDate),setTimeRange(QTime, QTime)或 setDateTimeRange(QDateTime, QDateTime)方法设置日期和时间的最小值和最大值</li></ul></li><li>时间格式和获取 <ul><li>用setDisplayFormat(format)方法可以设置QDateTimeEdit 显示日期时间的格式</li><li>用displayFormat()方法获取显示格式。关于格式符号的使用,请参考日期类和时间类的内容。</li></ul></li><li>字符串和日期时间对象转换 <ul><li>用dateTimeFromText(str)方法可以将字符串转换成日期时间对象</li><li>用textFromDateTime(QDateTime)方法可以将日期时间转换成字符串</li></ul></li><li>日期时间控件的输入部分被分割成年、月、日、时、分、秒、毫秒多个部分, <ul><li>用setSelectedSection(QDateTimeEdit.Section)方法可以使某个部分被选中,其中QDateTimeEdit.Section可以取: <ul><li>QDateTimeEdit.NoSection</li><li>QDateTimeEdit.AmPmSection AM/PM</li><li>QDateTimeEdit, MSecSection 毫秒</li><li>QDateTimeEdit.SecondSection 秒</li><li>QDateTimeEdit.MinuteSection 分</li><li>QDateTimeEdit.HourSection 时</li><li>QDateTimeEdit.DavSection 日</li><li>QDateTimeEdit.MonthSection 月</li><li>QDateTimeEdit.YearSection 年</li></ul></li><li>用sectionText(section:QDateTimeEdit.Section)方法可以获取各个部分的文本;</li><li>用sectionAtindex:int)方法可以根据索引获取对应部分,例如sectionAt(0)为QDateTimeEdit.YearSection。</li></ul></li></ul><table><thead><tr><th>QDateTimeEdit的方法及参数类型</th><th>返回值的类型</th><th>说明</th></tr></thead><tbody><tr><td>[slot]setTime(time: QTime)</td><td>None</td><td>设置时间</td></tr><tr><td>time()</td><td>QTime</td><td>获取时间</td></tr><tr><td>[slot]setDate(date: QDate)</td><td>None</td><td>设置日期</td></tr><tr><td>date()</td><td>QDate</td><td>获取日期</td></tr><tr><td>[slot]setDateTime(dateTime: QDateTime)</td><td>None</td><td>设置日期时间</td></tr><tr><td>dateTime()</td><td>QDateTime</td><td>获取日期时间</td></tr><tr><td>setDateRange(min:QDate, max: QDate)</td><td>None</td><td>设置日期的范围</td></tr><tr><td>setTimeRange(min: QTime,max: QTime)</td><td>None</td><td>设置时间的范围</td></tr><tr><td>setDateTimeRange(min: QDateTime, max: QDateTime)</td><td>None</td><td>设置日期时间的范围</td></tr><tr><td>sefMaximumDate(max: QDate)<br>setMaximumDateTime(dt:QDateTime)<br>setMaximumTime(max: QTime)</td><td>None</td><td>设置显示的最大日期时间</td></tr><tr><td>setMinimumDate(min:QDate)<br>setMinimumDateTime(dt:QDateTime)<br>setMinimumTime(min:QTime)</td><td>None</td><td>设置显示的最小日期时间</td></tr><tr><td>clearMaximumDate()<br>clearMaximumDateTime()<br>clearMaximumTime()</td><td>None</td><td>清除最大日期时间限制</td></tr><tr><td>clearMinimumDate()<br>clearMinimumDateTime()<br>clearMinimumTime()</td><td>None</td><td>清除最小日期时间限制</td></tr><tr><td>setCalendarPopup(bool)</td><td>None</td><td>设置是否有日历控件</td></tr><tr><td>calendarPopup()</td><td>bool</td><td>获取是否有日历控件</td></tr><tr><td>setCalendarWidget(QCalendarWidget)</td><td>None</td><td>设置日历控件</td></tr><tr><td>setDisplayFormat(format:str)</td><td>None</td><td>设置显示格式</td></tr><tr><td>displayFormat()</td><td>str</td><td>获取显示格式</td></tr><tr><td>dateTimeFromText(str)</td><td>QDateTime</td><td>将字符串转换成日期时间对象</td></tr><tr><td>textFromDateTime(QDateTime)</td><td>str</td><td>将日期时间对象转换成字符串</td></tr><tr><td>setCalendar(QCalendar)</td><td>None</td><td>设置日历</td></tr><tr><td>setSelectedSection(QDateTimeEdit.Section)</td><td>None</td><td>设置被选中的部分</td></tr><tr><td>sectionText(section:QDateTimeEdit.Section)</td><td>Str</td><td>获取对应部分的文本</td></tr><tr><td>sectionCount()</td><td>int</td><td>获取总共分几部分</td></tr><tr><td>setTimeSpec(spec: Qt.TimeSpec)</td><td>None</td><td>设置时间计时参考点</td></tr></tbody></table><h4 id="qdatetimeedit、qdateedit和qtimeedit的信号" tabindex="-1"><a class="header-anchor" href="#qdatetimeedit、qdateedit和qtimeedit的信号" aria-hidden="true">#</a> QDateTimeEdit、QDateEdit和QTimeEdit的信号</h4><p>日期时间控件的信号有</p><ul><li>当日期改变时发送 dateChanged(QDate)信号</li><li>当日期或时间改变时发送dateTimeChanged(QDateTime)信号</li><li>当时间改变时发送timeChangedQTime)信号</li><li>当编辑完成按Enter 键或失去焦点时发送editingFinished()信号</li></ul><h4 id="qdatetime、qdate、qtime例子" tabindex="-1"><a class="header-anchor" href="#qdatetime、qdate、qtime例子" aria-hidden="true">#</a> QDateTime、QDate、QTime例子</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> sys
<span class="token keyword">import</span> time

<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtGui <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> <span class="token operator">*</span>


<span class="token keyword">class</span> <span class="token class-name">Window</span><span class="token punctuation">(</span>QWidget<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span><span class="token string">&quot;QDateTime&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setup_ui<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">setup_ui</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># QDateTime QDate QTime 这三个类之间没有继承关系</span>

        <span class="token comment"># QDateTime</span>
        <span class="token comment"># -------------创建----------------</span>
        <span class="token comment"># dt = QDateTime()</span>
        <span class="token comment"># dt = QDateTime(2021, 5, 8, 12, 30)  # 创建时设置年、月、日、时、分</span>
        dt <span class="token operator">=</span> QDateTime<span class="token punctuation">.</span>currentDateTime<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 静态方法，获取当前时间</span>
        <span class="token comment"># dt = QDateTime.currentDateTimeUtc()  # 静态方法，获取当前的UTC时间</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;dt:&quot;</span><span class="token punctuation">,</span> dt<span class="token punctuation">)</span>

        <span class="token comment"># -------------调整日期时间------------</span>
        dt_add_year <span class="token operator">=</span> dt<span class="token punctuation">.</span>addYears<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment"># 增加1年，返回一个新的QDateTime对象</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;dt_add_year:&quot;</span><span class="token punctuation">,</span> dt_add_year<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;dt_add_secs&quot;</span><span class="token punctuation">,</span> dt<span class="token punctuation">.</span>addSecs<span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 增加小时或分钟没有专门的函数，需要通过增加秒来设置</span>
        dt<span class="token punctuation">.</span>setTime<span class="token punctuation">(</span>QTime<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 设置时间</span>

        <span class="token comment"># -----------计算时间差-----------</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;offset from UTC&quot;</span><span class="token punctuation">,</span> QDateTime<span class="token punctuation">.</span>offsetFromUtc<span class="token punctuation">(</span>QDateTime<span class="token punctuation">.</span>currentDateTime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 本地时间与UTC时间之差(单位为s)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>dt<span class="token punctuation">.</span>secsTo<span class="token punctuation">(</span>QDateTime<span class="token punctuation">.</span>currentDateTime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 计算两个时间之差，单位s</span>

        <span class="token comment"># ----------展示时间-------</span>
        dte <span class="token operator">=</span> QDateTimeEdit<span class="token punctuation">(</span>dt<span class="token punctuation">,</span> self<span class="token punctuation">)</span>  <span class="token comment"># 方便查看起见，展示一下dt的信息</span>
        dte<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>

        <span class="token comment"># QDate</span>
        <span class="token comment"># ---------构造----------</span>
        <span class="token comment"># qd = QDate(2020, 1, 1)  # 构造时传入年月日信息</span>
        qd <span class="token operator">=</span> QDate<span class="token punctuation">.</span>currentDate<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>QDate<span class="token punctuation">.</span>currentDate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 获取当前日期</span>

        <span class="token comment"># --------调整日期------</span>
        <span class="token comment"># 类似QDateTime</span>

        <span class="token comment"># ---------计算时间差-----</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;dates to 2001.1.1:&quot;</span><span class="token punctuation">,</span> QDate<span class="token punctuation">(</span><span class="token number">2001</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>daysTo<span class="token punctuation">(</span>qd<span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token comment"># ---------获取时间--------</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;day of week&quot;</span><span class="token punctuation">,</span> qd<span class="token punctuation">.</span>dayOfWeek<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 这一周的第几日</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;day of year&quot;</span><span class="token punctuation">,</span> qd<span class="token punctuation">.</span>dayOfYear<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 这一年的第几日</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;days in month&quot;</span><span class="token punctuation">,</span> qd<span class="token punctuation">.</span>daysInMonth<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 这一月总共多少天</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;days in year&quot;</span><span class="token punctuation">,</span> qd<span class="token punctuation">.</span>daysInYear<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 这一年总共多少天</span>

        <span class="token comment"># QTime</span>
        <span class="token comment"># --------构造--------</span>
        my_time <span class="token operator">=</span> QTime<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">00</span><span class="token punctuation">)</span>
        <span class="token comment"># my_time = QTime.currentTime()</span>

        <span class="token comment"># -------调整时间-------</span>
        <span class="token comment"># 类似QDAteTime</span>

        <span class="token comment"># --------计算时间差------</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;secs to:&quot;</span><span class="token punctuation">,</span> my_time<span class="token punctuation">.</span>secsTo<span class="token punctuation">(</span>QTime<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>

    window <span class="token operator">=</span> Window<span class="token punctuation">(</span><span class="token punctuation">)</span>
    window<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>

    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;
dt: PySide6.QtCore.QDateTime(2023, 3, 19, 16, 10, 34, 323, 0)
dt_add_year: PySide6.QtCore.QDateTime(2024, 3, 19, 16, 10, 34, 323, 0)
dt_add_secs PySide6.QtCore.QDateTime(2023, 3, 19, 16, 20, 34, 323, 0)
offset from UTC 28800
14703
PySide6.QtCore.QDate(2023, 3, 19)
dates to 2001.1.1: 8112
day of week 7
day of year 78
days in month 31
days in year 365
secs to: 0
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="datetimeedit-例子" tabindex="-1"><a class="header-anchor" href="#datetimeedit-例子" aria-hidden="true">#</a> DateTimeEdit 例子</h4><figure><img src="`+o+`" alt="image-20230319161242142" tabindex="0" loading="lazy"><figcaption>image-20230319161242142</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: UTF-8 -*-</span>
<span class="token comment"># File date: Hi_2023/2/28 23:03</span>
<span class="token comment"># File_name: 04-DateTimeEdit 例子.py</span>


<span class="token keyword">import</span> sys
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtGui <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> QDate<span class="token punctuation">,</span> QDateTime<span class="token punctuation">,</span> QTime


<span class="token keyword">class</span> <span class="token class-name">DateTimeEditDemo</span><span class="token punctuation">(</span>QWidget<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>DateTimeEditDemo<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>initUI<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">initUI</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span><span class="token string">&#39;QDateTimeEdit例子&#39;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span>
        vlayout <span class="token operator">=</span> QVBoxLayout<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>label <span class="token operator">=</span> QLabel<span class="token punctuation">(</span><span class="token string">&#39;显示日期选择信息&#39;</span><span class="token punctuation">)</span>
        vlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>label<span class="token punctuation">)</span>

        <span class="token comment"># QDateTimeEdit示例</span>
        dateTimeLabel <span class="token operator">=</span> QLabel<span class="token punctuation">(</span><span class="token string">&#39;QDateTimeEdit示例:&#39;</span><span class="token punctuation">)</span>
        dateTimeEdit <span class="token operator">=</span> QDateTimeEdit<span class="token punctuation">(</span>QDateTime<span class="token punctuation">.</span>currentDateTime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        dateTimeEdit01 <span class="token operator">=</span> QDateTimeEdit<span class="token punctuation">(</span>QDate<span class="token punctuation">.</span>currentDate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        dateTimeEdit01<span class="token punctuation">.</span>setDate<span class="token punctuation">(</span>QDate<span class="token punctuation">(</span><span class="token number">2030</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        dateTimeEdit02 <span class="token operator">=</span> QDateTimeEdit<span class="token punctuation">(</span>QTime<span class="token punctuation">.</span>currentTime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        vlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>dateTimeLabel<span class="token punctuation">)</span>
        vlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>dateTimeEdit<span class="token punctuation">)</span>
        vlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>dateTimeEdit01<span class="token punctuation">)</span>
        vlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>dateTimeEdit02<span class="token punctuation">)</span>

        <span class="token comment"># QDateEdit 示例</span>
        dateEdit <span class="token operator">=</span> QDateEdit<span class="token punctuation">(</span>QDate<span class="token punctuation">.</span>currentDate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        dateEdit<span class="token punctuation">.</span>setDateRange<span class="token punctuation">(</span>QDate<span class="token punctuation">(</span><span class="token number">2015</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> QDate<span class="token punctuation">(</span><span class="token number">2030</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        dateLabel <span class="token operator">=</span> QLabel<span class="token punctuation">(</span><span class="token string">&#39;QDateEdit示例:&#39;</span><span class="token punctuation">)</span>
        vlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>dateLabel<span class="token punctuation">)</span>
        vlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>dateEdit<span class="token punctuation">)</span>

        <span class="token comment"># QTimeEdit 示例</span>
        timeEdit <span class="token operator">=</span> QTimeEdit<span class="token punctuation">(</span>QTime<span class="token punctuation">.</span>currentTime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        timeEdit<span class="token punctuation">.</span>setTimeRange<span class="token punctuation">(</span>QTime<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> QTime<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        timeLabel <span class="token operator">=</span> QLabel<span class="token punctuation">(</span><span class="token string">&#39;QTimeEdit示例:&#39;</span><span class="token punctuation">)</span>
        vlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>timeLabel<span class="token punctuation">)</span>
        vlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>timeEdit<span class="token punctuation">)</span>

        <span class="token comment"># 设置日期和时间格式</span>
        meetingEdit <span class="token operator">=</span> QDateTimeEdit<span class="token punctuation">(</span>QDateTime<span class="token punctuation">.</span>currentDateTime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        formatLabel <span class="token operator">=</span> QLabel<span class="token punctuation">(</span><span class="token string">&quot;选择日期和时间格式:&quot;</span><span class="token punctuation">)</span>
        formatComboBox <span class="token operator">=</span> QComboBox<span class="token punctuation">(</span><span class="token punctuation">)</span>
        formatComboBox<span class="token punctuation">.</span>addItems<span class="token punctuation">(</span>
           <span class="token punctuation">[</span><span class="token string">&quot;yyyy-MM-dd hh:mm:ss(zzz &#39;ms&#39;)&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hh:mm:ss MM/dd/yyyy&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hh:mm:ss dd/MM/yyyy&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;北京时间: hh:mm:ss&quot;</span><span class="token punctuation">,</span>
             <span class="token string">&quot;hh:mm ap&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        formatComboBox<span class="token punctuation">.</span>textActivated<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>
            <span class="token keyword">lambda</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>setFormatString<span class="token punctuation">(</span>formatComboBox<span class="token punctuation">.</span>currentText<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> meetingEdit<span class="token punctuation">)</span><span class="token punctuation">)</span>
        vlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>formatLabel<span class="token punctuation">)</span>
        vlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>meetingEdit<span class="token punctuation">)</span>
        vlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>formatComboBox<span class="token punctuation">)</span>

        <span class="token comment"># 弹出日历小部件</span>
        dateTimeEdit_cal <span class="token operator">=</span> QDateTimeEdit<span class="token punctuation">(</span>QDateTime<span class="token punctuation">.</span>currentDateTime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        dateTimeEdit_cal<span class="token punctuation">.</span>setCalendarPopup<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        vlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>QLabel<span class="token punctuation">(</span><span class="token string">&#39;弹出日历小部件&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        vlayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>dateTimeEdit_cal<span class="token punctuation">)</span>

        <span class="token comment"># 信号与槽</span>
        dateTimeEdit<span class="token punctuation">.</span>dateTimeChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>showDate<span class="token punctuation">(</span>dateTimeEdit<span class="token punctuation">)</span><span class="token punctuation">)</span>
        dateTimeEdit01<span class="token punctuation">.</span>dateTimeChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>showDate<span class="token punctuation">(</span>dateTimeEdit01<span class="token punctuation">)</span><span class="token punctuation">)</span>
        dateTimeEdit02<span class="token punctuation">.</span>dateTimeChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>showDate<span class="token punctuation">(</span>dateTimeEdit02<span class="token punctuation">)</span><span class="token punctuation">)</span>
        dateEdit<span class="token punctuation">.</span>dateTimeChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>showDate<span class="token punctuation">(</span>dateEdit<span class="token punctuation">)</span><span class="token punctuation">)</span>
        timeEdit<span class="token punctuation">.</span>dateTimeChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>showDate<span class="token punctuation">(</span>timeEdit<span class="token punctuation">)</span><span class="token punctuation">)</span>
        meetingEdit<span class="token punctuation">.</span>dateTimeChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>showDate<span class="token punctuation">(</span>meetingEdit<span class="token punctuation">)</span><span class="token punctuation">)</span>
        dateTimeEdit_cal<span class="token punctuation">.</span>dateTimeChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>showDate<span class="token punctuation">(</span>dateTimeEdit_cal<span class="token punctuation">)</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>setLayout<span class="token punctuation">(</span>vlayout<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">showDate</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> dateEdit<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># 当前日期时间</span>
        dateTime <span class="token operator">=</span> dateEdit<span class="token punctuation">.</span>dateTime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toString<span class="token punctuation">(</span><span class="token punctuation">)</span>
        date <span class="token operator">=</span> dateEdit<span class="token punctuation">.</span>date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toString<span class="token punctuation">(</span><span class="token string">&#39;yyyy-MM-dd&#39;</span><span class="token punctuation">)</span>
        time <span class="token operator">=</span> dateEdit<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toString<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment"># 最大最小日期时间</span>
        maxDateTime <span class="token operator">=</span> dateEdit<span class="token punctuation">.</span>maximumDateTime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toString<span class="token punctuation">(</span><span class="token string">&#39;yyyy-MM-dd hh:mm:ss&#39;</span><span class="token punctuation">)</span>
        minDateTime <span class="token operator">=</span> dateEdit<span class="token punctuation">.</span>minimumDateTime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toString<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>ISODate<span class="token punctuation">)</span>

        <span class="token comment"># 最大最小日期</span>
        maxDate <span class="token operator">=</span> dateEdit<span class="token punctuation">.</span>maximumDate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toString<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>ISODate<span class="token punctuation">)</span>
        minDate <span class="token operator">=</span> dateEdit<span class="token punctuation">.</span>minimumDate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toString<span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token comment"># 最大最小时间</span>
        maxTime <span class="token operator">=</span> dateEdit<span class="token punctuation">.</span>maximumTime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toString<span class="token punctuation">(</span><span class="token punctuation">)</span>
        minTime <span class="token operator">=</span> dateEdit<span class="token punctuation">.</span>minimumTime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toString<span class="token punctuation">(</span><span class="token punctuation">)</span>

        _str <span class="token operator">=</span> <span class="token string">&#39;当前日期时间：{}\\n当前日期：{}\\n当前时间：{}\\n最大日期时间：{}\\n最小日期时间：{}\\n最大日期：{}\\n最小日期：{}\\n最大时间：{}\\n最小时间：{}\\n&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>
            dateTime<span class="token punctuation">,</span> date<span class="token punctuation">,</span> time<span class="token punctuation">,</span> maxDateTime<span class="token punctuation">,</span> minDateTime<span class="token punctuation">,</span> maxDate<span class="token punctuation">,</span> minDate<span class="token punctuation">,</span> maxTime<span class="token punctuation">,</span> minTime<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>label<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>_str<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">setFormatString</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> formatString<span class="token punctuation">,</span> meetingEdit<span class="token punctuation">)</span><span class="token punctuation">:</span>
        meetingEdit<span class="token punctuation">.</span>setDisplayFormat<span class="token punctuation">(</span>formatString<span class="token punctuation">)</span>

        <span class="token keyword">if</span> meetingEdit<span class="token punctuation">.</span>displayedSections<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> QDateTimeEdit<span class="token punctuation">.</span>DateSections_Mask<span class="token punctuation">:</span>
            meetingEdit<span class="token punctuation">.</span>setDateRange<span class="token punctuation">(</span>QDate<span class="token punctuation">(</span><span class="token number">2004</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> QDate<span class="token punctuation">(</span><span class="token number">2005</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            meetingEdit<span class="token punctuation">.</span>setTimeRange<span class="token punctuation">(</span>QTime<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> QTime<span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
    demo <span class="token operator">=</span> DateTimeEditDemo<span class="token punctuation">(</span><span class="token punctuation">)</span>
    demo<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="网页浏览qwebengineview" tabindex="-1"><a class="header-anchor" href="#网页浏览qwebengineview" aria-hidden="true">#</a> 网页浏览QWebEngineView</h2><p>PySide6 提供了可以浏览网页的控件 QWebEngineView 和 QWebEnginePage;可以利用它们编写网页浏览器,它们位于QtWebEngineWidgets 模块中</p><h4 id="网页浏览器控件qwebengineview" tabindex="-1"><a class="header-anchor" href="#网页浏览器控件qwebengineview" aria-hidden="true">#</a> 网页浏览器控件QWebEngineView</h4><p>网页浏览器控件QWebEngineView 继承自QWidget,用于管理其内部的网页QWebEnginePage,设置内部网页的一些属性。</p><p>用QWebEngineView 创建网页浏览器控件的方法如下所示,其中parent 是网页浏览器控件所在的窗体或容器控件。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWebEngineWidgets <span class="token keyword">import</span> QWebEngineView

QWebEngineView<span class="token punctuation">(</span>page<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtWebEngineCore<span class="token punctuation">.</span>QWebEnginePage<span class="token punctuation">,</span> parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QWebEngineView<span class="token punctuation">(</span>parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QWebEngineView<span class="token punctuation">(</span>profile<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtWebEngineCore<span class="token punctuation">.</span>QWebEngineProfile<span class="token punctuation">,</span> parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="网页浏览器控件qwebengineview的常用方法" tabindex="-1"><a class="header-anchor" href="#网页浏览器控件qwebengineview的常用方法" aria-hidden="true">#</a> 网页浏览器控件QWebEngineView的常用方法</h5><p>网页浏览器控件 QWebEngineView 的常用方法如表所示,主要方法:</p><ul><li>用load(url: Union[QUrl,str])方法或 setUrl(url: Union[QUrl,str])方法加载网页;</li><li>用url()方法获取当前网页的 QUrl 地址;</li><li>根据浏览历史记录,用forward()方法向前浏览网页;用back()方法向后浏览网页;用history()方法获取览记录QWebEngineHistory</li><li>用reload()方法重新加载网页,如果已经有 HTML 格式的文本,用setHtml(html:str)方法显示 HTML格式的文本内容。</li><li>对于网页中需要弹出新窗日的链接,需要创建 QWebEngineView的子类,并重写 createWindow(QWebEnginePage.WebWindowType)函数,其中枚举类型参数QWebEnginePage.WebWindowType 用于判断链接的类型,可取以下值,分别对应的值是 0~3。: <ul><li>QWebEnginePage.WebBrowserWindow(纯浏览器窗口)</li><li>QWebEnginePage.WebBrowserTab(浏览器切换卡)</li><li>QWebEnginePage.WebDialog(网页对话框)</li><li>QWebEnginePage.WebBrowserBackgroundTab(没有隐藏当前可见的网页浏览器控件的切换卡)</li></ul></li></ul><table><thead><tr><th>QWebEngineView的方法及参数类型</th><th>返回值的类型</th><th>说明</th></tr></thead><tbody><tr><td>load(url:Union[QUrl,str])</td><td>None</td><td>加载网页</td></tr><tr><td>setUrl(url:Union[QUrl,str])</td><td>None</td><td>加载网页</td></tr><tr><td>[slot]reload()</td><td>None</td><td>重新加载网页</td></tr><tr><td>[slot]forward()</td><td>None</td><td>向前浏览网页</td></tr><tr><td>[slot]back()</td><td>None</td><td>向后浏览网页</td></tr><tr><td>[slot]stop()</td><td>None</td><td>停止加载网页</td></tr><tr><td>url()</td><td>QUrl</td><td>获取网页的 url 地址</td></tr><tr><td>title()</td><td>str</td><td>获取当前网页中用HTML 定义 的标题</td></tr><tr><td>createStandardContextMenu()</td><td>QMenu</td><td>创建标准的快捷菜单</td></tr><tr><td>createWindow(QWebEnginePage.WebWindowType)</td><td>QWebEngineView</td><td>创建QWebEngineView的子类,并重写 该函数,用于弹出新的窗口</td></tr><tr><td>findText(subString:str)</td><td>None</td><td>查找网页中的文本</td></tr><tr><td>hasSelection()</td><td>b001</td><td>获取当前页中是否有选中的内容</td></tr><tr><td>selectedText()</td><td>str</td><td>获取当前页中选中的内容</td></tr><tr><td>history()</td><td>QWebEngineHistory</td><td>返回浏览器中当前网页的访问记录</td></tr><tr><td>icon()</td><td>QIcon</td><td>获取当前页的图标</td></tr><tr><td>iconUrl()</td><td>QUrI</td><td>获取当前页的图标的 QUrI地址</td></tr><tr><td>print(printer:QPrinter)</td><td>None</td><td>默认用A4纸打印网页</td></tr><tr><td>printToPdf(filePath: str)</td><td>None</td><td>将网页输出成pdf文档</td></tr><tr><td>setHtml(html; str)</td><td>None</td><td>显示HTML格式的文本</td></tr><tr><td>setPage(page:QWebEnginePage)</td><td>None</td><td>设置网页</td></tr><tr><td>page()</td><td>QWebEnginePage</td><td>取当前的网页</td></tr><tr><td>setZoomFactor(factor: float)</td><td>None</td><td>设置网页的缩放比例,参数取值范围为 0.25~5.0,耿认是1.0</td></tr><tr><td>zoomFactor()</td><td>float</td><td>获取缩放比例</td></tr><tr><td>[static]forPage(QWebEnginePage)</td><td>QWebEngineView</td><td>返回与网页关联的网页浏览器</td></tr></tbody></table><h5 id="网页浏览器控件qwebengineview-的信号" tabindex="-1"><a class="header-anchor" href="#网页浏览器控件qwebengineview-的信号" aria-hidden="true">#</a> 网页浏览器控件QWebEngineView 的信号</h5><p>网页浏览器控件 QWebEngineView 的信号如表所示</p><p>主要信号 urlChanged(QUrl),当网页地址发生改变时发送该信号,开始加载网页时发送 loadStarted()信号;</p><p>加载网页元素时发送loadProgress(int)信号,参数的范数是0~100,可以用QProgressBar 布局来显示加载进度;</p><p>网页加载完成时发送 loadFinished(bool)信号,成功是 True,出现错误是False。</p><table><thead><tr><th>QWebEngineView的信号及参数类型</th><th>说明</th></tr></thead><tbody><tr><td>urlChanged(QUrl)</td><td>网页地址发生改变时发送信号</td></tr><tr><td>iconChanged(QIcon)</td><td>网页图标发生改变时发送信号</td></tr><tr><td>iconUrlChanged(QUrl)</td><td>网页图标的url地址发生改变时发送信号</td></tr><tr><td>loadFinished(bool)</td><td>网页加载完成时发送信号,成功是True,出现错误 是 False</td></tr><tr><td>loadProgress(int)</td><td>加载网页元素时发送信号,参数的范数是0~100</td></tr><tr><td>loadStarted()</td><td>开始加载网页时发送信号</td></tr><tr><td>pdfPrintingFinished(filePath: str,success:bool)</td><td>打印成pdf文件结束时发送信号</td></tr><tr><td>printFinished(success:bool)</td><td>打印完成时发送信号</td></tr><tr><td>printRequested()</td><td>请求打印时发送信号</td></tr><tr><td>selectionChanged()</td><td>网页中选择的内容发生改变时发送信号</td></tr><tr><td>titleChanged(title:str)</td><td>网页标题名称发生改变时发送信号</td></tr></tbody></table><h5 id="网页浏览器控件的应用实例" tabindex="-1"><a class="header-anchor" href="#网页浏览器控件的应用实例" aria-hidden="true">#</a> 网页浏览器控件的应用实例</h5><p>下面的程序创建一个简单的浏览器,用QWebEngineView 类创建子类myWebView,并重写了createWindow()函数这样在单击 QWebEnginePage,WebBrowserTab(浏览器切换卡)类型的链接时能够显示链接的内容如果是非QWebEnginePage WebBrowserTab 类型的链接,则根据浏览记录可以向前和向后导航。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: UTF-8 -*-</span>
<span class="token comment"># File date: Hi_2023/3/3 12:57</span>
<span class="token comment"># File_name: 01-网页浏览器控件的应用实例.py.py</span>


<span class="token keyword">import</span> sys
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> QApplication<span class="token punctuation">,</span> QWidget<span class="token punctuation">,</span> QLabel<span class="token punctuation">,</span> QPushButton<span class="token punctuation">,</span> QLineEdit<span class="token punctuation">,</span> QHBoxLayout<span class="token punctuation">,</span> QVBoxLayout<span class="token punctuation">,</span> QTabWidget<span class="token punctuation">,</span> QProgressBar
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWebEngineWidgets <span class="token keyword">import</span> QWebEngineView
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> QUrl<span class="token punctuation">,</span> Qt
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtGui <span class="token keyword">import</span> QIcon


<span class="token keyword">class</span> <span class="token class-name">WidgetInTab</span><span class="token punctuation">(</span>QWidget<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 切换卡中的控件 # 参数tab用于切换卡控件的传递</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> tab<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>parent<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>tab <span class="token operator">=</span> tab
        self<span class="token punctuation">.</span>urlLabel <span class="token operator">=</span> QLabel<span class="token punctuation">(</span><span class="token string">&quot;网址(&amp;D):&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>urlLine <span class="token operator">=</span> QLineEdit<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 地址栏</span>
        self<span class="token punctuation">.</span>urlLabel<span class="token punctuation">.</span>setBuddy<span class="token punctuation">(</span>self<span class="token punctuation">.</span>urlLine<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>backBtn <span class="token operator">=</span> QPushButton<span class="token punctuation">(</span>icon<span class="token operator">=</span>QIcon<span class="token punctuation">(</span><span class="token string">&quot;../../../Resources/Icons/FlatIcon-regular-rounded/arrow-small-left.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 后退按钮</span>
        self<span class="token punctuation">.</span>forwardBtn <span class="token operator">=</span> QPushButton<span class="token punctuation">(</span>icon<span class="token operator">=</span>QIcon<span class="token punctuation">(</span><span class="token string">&quot;../../../Resources/Icons/FlatIcon-regular-rounded/arrow-small-right.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 前进按钮</span>
        self<span class="token punctuation">.</span>reloadBtn <span class="token operator">=</span> QPushButton<span class="token punctuation">(</span>icon<span class="token operator">=</span>QIcon<span class="token punctuation">(</span><span class="token string">&quot;../../../Resources/Icons/FlatIcon-regular-rounded/refresh.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 重新加载按钮</span>
        self<span class="token punctuation">.</span>homeBtn <span class="token operator">=</span> self<span class="token punctuation">.</span>homeBtn <span class="token operator">=</span> QPushButton<span class="token punctuation">(</span>icon<span class="token operator">=</span>QIcon<span class="token punctuation">(</span><span class="token string">&quot;../../../Resources/Icons/FlatIcon-regular-rounded/home.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 主页按钮</span>

        self<span class="token punctuation">.</span>webView <span class="token operator">=</span> self<span class="token punctuation">.</span>webView <span class="token operator">=</span> QWebEngineView<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 浏览器控件</span>
        self<span class="token punctuation">.</span>webPage <span class="token operator">=</span> self<span class="token punctuation">.</span>webView<span class="token punctuation">.</span>page<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 浏览器内部的网页</span>
        self<span class="token punctuation">.</span>history <span class="token operator">=</span> self<span class="token punctuation">.</span>webPage<span class="token punctuation">.</span>history<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 网页上的历史记录</span>
        self<span class="token punctuation">.</span>progressBar <span class="token operator">=</span> QProgressBar<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 进度条控件</span>

        self<span class="token punctuation">.</span>progressBar<span class="token punctuation">.</span>setRange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment"># 进度条</span>
        self<span class="token punctuation">.</span>progressBar<span class="token punctuation">.</span>setAlignment<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>AlignCenter<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>progressBar<span class="token punctuation">.</span>setFormat<span class="token punctuation">(</span><span class="token string">&quot;加载中,已完成%p%&quot;</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>homeAddress <span class="token operator">=</span> <span class="token string">&quot;https://www.sohu.com&quot;</span>  <span class="token comment"># 主页地址</span>
        self<span class="token punctuation">.</span>webPage<span class="token punctuation">.</span>setUrl<span class="token punctuation">(</span>self<span class="token punctuation">.</span>homeAddress<span class="token punctuation">)</span>

        H <span class="token operator">=</span> QHBoxLayout<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 水平布局</span>
        H<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>urlLabel<span class="token punctuation">)</span>
        H<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>urlLine<span class="token punctuation">)</span>
        H<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>backBtn<span class="token punctuation">)</span>
        H<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>forwardBtn<span class="token punctuation">)</span>
        H<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>reloadBtn<span class="token punctuation">)</span>
        H<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>homeBtn<span class="token punctuation">)</span>

        V <span class="token operator">=</span> QVBoxLayout<span class="token punctuation">(</span>self<span class="token punctuation">)</span>  <span class="token comment"># 竖直布局</span>
        V<span class="token punctuation">.</span>addLayout<span class="token punctuation">(</span>H<span class="token punctuation">)</span>
        V<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>webView<span class="token punctuation">)</span>
        V<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>progressBar<span class="token punctuation">)</span>  <span class="token comment"># 布局添加控件</span>

        <span class="token comment"># 信号与槽函数的连接</span>
        self<span class="token punctuation">.</span>urlLine<span class="token punctuation">.</span>returnPressed<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>urlLine_returnPressed<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>webPage<span class="token punctuation">.</span>urlChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>url_changed<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>webPage<span class="token punctuation">.</span>titleChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>title_changed<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>webPage<span class="token punctuation">.</span>iconChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>icon_changed<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>webPage<span class="token punctuation">.</span>newWindowRequested<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>new_WindowRequested<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>forwardBtn<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>forwardBtn_clicked<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>backBtn<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>backBtn_clicked<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>reloadBtn<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>webView<span class="token punctuation">.</span><span class="token builtin">reload</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>homeBtn<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>homeBtn_clicked<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>webPage<span class="token punctuation">.</span>loadProgress<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>progressBar<span class="token punctuation">.</span>setValue<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>webPage<span class="token punctuation">.</span>loadFinished<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>load_finished<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>webPage<span class="token punctuation">.</span>loadStarted<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>load_started<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">urlLine_returnPressed</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 输人新地址并按Enter键后的槽函数</span>
        url <span class="token operator">=</span> QUrl<span class="token punctuation">.</span>fromUserInput<span class="token punctuation">(</span>self<span class="token punctuation">.</span>urlLine<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> url<span class="token punctuation">.</span>isValid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>webPage<span class="token punctuation">.</span>load<span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token comment"># 加载网页</span>

    <span class="token keyword">def</span> <span class="token function">url_changed</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># URL地址发生变化时的槽函数</span>
        self<span class="token punctuation">.</span>urlLine<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>url<span class="token punctuation">.</span>toString<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 显示新的地址</span>
        self<span class="token punctuation">.</span>backBtn<span class="token punctuation">.</span>setEnabled<span class="token punctuation">(</span>self<span class="token punctuation">.</span>history<span class="token punctuation">.</span>canGoBack<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>forwardBtn<span class="token punctuation">.</span>setEnabled<span class="token punctuation">(</span>self<span class="token punctuation">.</span>history<span class="token punctuation">.</span>canGoForward<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">title_changed</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> title<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 网页地址发生变化时的槽函数</span>
        tab_index <span class="token operator">=</span> self<span class="token punctuation">.</span>tab<span class="token punctuation">.</span>indexOf<span class="token punctuation">(</span>self<span class="token punctuation">)</span>  <span class="token comment"># 获取当前页的索引</span>
        self<span class="token punctuation">.</span>tab<span class="token punctuation">.</span>setTabText<span class="token punctuation">(</span>tab_index<span class="token punctuation">,</span> title<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">icon_changed</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> icon<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 网页图标发生变化时的槽函数</span>
        tab_index <span class="token operator">=</span> self<span class="token punctuation">.</span>tab<span class="token punctuation">.</span>indexOf<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>tab<span class="token punctuation">.</span>setTabIcon<span class="token punctuation">(</span>tab_index<span class="token punctuation">,</span> icon<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">new_WindowRequested</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 需要新网页时的槽函数</span>
        tab_index <span class="token operator">=</span> self<span class="token punctuation">.</span>tab<span class="token punctuation">.</span>indexOf<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        newWindow <span class="token operator">=</span> WidgetInTab<span class="token punctuation">(</span>parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> tab<span class="token operator">=</span>self<span class="token punctuation">.</span>tab<span class="token punctuation">)</span>  <span class="token comment"># 创建切换卡内部的控件</span>
        self<span class="token punctuation">.</span>tab<span class="token punctuation">.</span>insertTab<span class="token punctuation">(</span>tab_index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> newWindow<span class="token punctuation">,</span> <span class="token string">&#39;加载中．．．&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 插入新卡片</span>
        self<span class="token punctuation">.</span>tab<span class="token punctuation">.</span>setCurrentIndex<span class="token punctuation">(</span>tab_index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment"># 将新插入的卡片作为当前卡片</span>
        newWindow<span class="token punctuation">.</span>webPage<span class="token punctuation">.</span>load<span class="token punctuation">(</span>request<span class="token punctuation">.</span>requestedUrl<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 加载新网页</span>

    <span class="token keyword">def</span> <span class="token function">load_started</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 网页开始加载时的槽函数</span>
        self<span class="token punctuation">.</span>progressBar<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">load_finished</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> ok<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 网页加载结束时的槽函数</span>
        self<span class="token punctuation">.</span>progressBar<span class="token punctuation">.</span>hide<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">backBtn_clicked</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 后退按钮的槽函数</span>
        self<span class="token punctuation">.</span>history<span class="token punctuation">.</span>back<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>history<span class="token punctuation">.</span>canGoBack<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>backBtn<span class="token punctuation">.</span>setEnabled<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">forwardBtn_clicked</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 前进按钮的槽函数</span>
        self<span class="token punctuation">.</span>history<span class="token punctuation">.</span>forward<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>history<span class="token punctuation">.</span>canGoForward<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>forwardBtn<span class="token punctuation">.</span>setEnabled<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">homeBtn_clicked</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 主页按钮的槽函数</span>
        self<span class="token punctuation">.</span>webPage<span class="token punctuation">.</span>load<span class="token punctuation">(</span>self<span class="token punctuation">.</span>homeAddress<span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">MyWindow</span><span class="token punctuation">(</span>QWidget<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 主窗口</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>parent<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span><span class="token string">&quot;QWebEnginePage的应用实例&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setupUi<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">setupUi</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>tab <span class="token operator">=</span> QTabWidget<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 切换卡控件</span>
        self<span class="token punctuation">.</span>tab<span class="token punctuation">.</span>setTabsClosable<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>tab<span class="token punctuation">.</span>setElideMode<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>TextElideMode<span class="token punctuation">.</span>ElideMiddle<span class="token punctuation">)</span>
        H <span class="token operator">=</span> QHBoxLayout<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        H<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>tab<span class="token punctuation">)</span>
        firstTab <span class="token operator">=</span> WidgetInTab<span class="token punctuation">(</span>parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> tab<span class="token operator">=</span>self<span class="token punctuation">.</span>tab<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>tab<span class="token punctuation">.</span>addTab<span class="token punctuation">(</span>firstTab<span class="token punctuation">,</span> firstTab<span class="token punctuation">.</span>webPage<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 第一个卡片中的内容</span>

        self<span class="token punctuation">.</span>tab<span class="token punctuation">.</span>tabCloseRequested<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>tab_closeRequested<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">tab_closeRequested</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>tab<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>tab<span class="token punctuation">.</span>removeTab<span class="token punctuation">(</span>index<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
    win <span class="token operator">=</span> MyWindow<span class="token punctuation">(</span><span class="token punctuation">)</span>

    win<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="网页qwebenginepage" tabindex="-1"><a class="header-anchor" href="#网页qwebenginepage" aria-hidden="true">#</a> 网页QWebEnginePage</h4><p>网页QWebEnginePage 是指网页浏览器控件QWebEngineView中的网页内容。</p><ul><li>用QWebEngineView 的page()方法可以取QWebEnginePage,</li><li>用setPage(page:QWebEnginePage)方法可以给浏览器控件设置网页。</li></ul><p>用QWebEnginePage创建网页实例的方法如下所示,其中参数 profile 是对网页的设置、脚本、缓存地址、cookie 的保存策略等。QWebEnginePage 继承自QObject。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWebEngineWidgets <span class="token keyword">import</span> QWebEngineView

QWebEngineView<span class="token punctuation">(</span>page<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtWebEngineCore<span class="token punctuation">.</span>QWebEnginePage<span class="token punctuation">,</span> parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QWebEngineView<span class="token punctuation">(</span>parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
QWebEngineView<span class="token punctuation">(</span>profile<span class="token punctuation">:</span> PySide6<span class="token punctuation">.</span>QtWebEngineCore<span class="token punctuation">.</span>QWebEngineProfile<span class="token punctuation">,</span> parent<span class="token punctuation">:</span> Union<span class="token punctuation">[</span>PySide6<span class="token punctuation">.</span>QtWidgets<span class="token punctuation">.</span>QWidget<span class="token punctuation">,</span> NoneType<span class="token punctuation">]</span><span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="网页qwebenginepage的常用方法" tabindex="-1"><a class="header-anchor" href="#网页qwebenginepage的常用方法" aria-hidden="true">#</a> 网页QWebEnginePage的常用方法</h5><p>网页QWebEnginePage 的常用方法如表所示,主要方法介绍如下</p><ul><li><p>用setUrl(url:Union[QUrl,str])方法或 load(url:Union[QUrl,str])方法设置网页地址;用requestedUrl()方法或 url()方法获取当前网页的地址</p></li><li><p>重写createWindow(QWebEnginePageWebWindowType)函数单击链接后需要产生新网页时可以创建新的网页如果不重写该函数或者返回值不是QWebEnginePage对象,将发送newWindowRequested()信号;</p></li><li><p>重写acceptNavigationRequest(url:Union[QUrl;str],QWebEnginePage.NavigationType;isMainFrame:bool)函数方法可以设置导航到新地址的处理方式其中枚举值QWebEnginePageNavigationType确定导航的原因可取:</p><ul><li>QWebEnginePage, NavigationTypeLinkClicked(单击链接)</li><li>QWebEnginePageNavigationTypeTyped(加载)</li><li>QWebEnginePage NavigationTypeFormSubmitted(表格提交)</li><li>QWebEnginePageNavigationTypeBackForward(前进或后退动作)</li><li>QWebEnginePageNavigationTypeReload(重新加载)</li><li>QWebEnginePage.avigationTypeRedirect(目录或服务器重新定位或自动重新加载)</li><li>QWebEnginePageNavigationTypeOther(除以上方式之外的其他方式)</li></ul></li><li><p>用findText(str,QWebEnginePage.FindFlags,function(QWebEngineFindTextResult))方法</p><ul><li>可以在网页中查找指定的文本,查找结束后会发送indTextFinished(QWebEngineFindTextResult)信号和调用function(QWebEngineFindTextResult)函数, <ul><li>参数QWebEngineFindTextResult 是查找后的结果对象,其有两个方法numberOfMatches()和 activeMatch(),分别获取匹配的个数和当前匹配的索引;</li><li>参数QWebEnginePage.FindFlags 设置查找方向,可以取(默认向前查找和大小写不敏感。): <ul><li>QWebEnginePage.FindBackward(向后查找)</li><li>QWebEnginePage.FindCaseSensitively(大小写敏感)</li></ul></li></ul></li></ul></li><li><p>用setFeaturePermission(securityOrigin; Union[QUrl,str], feature:QWebEnginePage,Feature,policy;QWebEnginePage.PermissionPolicy)方法可以给网页需要的一些设备进行权限设置</p><ul><li><p>其中参数 feature 是QWebEnginePage.Feature枚举值,可取值如表所示:</p><table><thead><tr><th>QWebEnginePage.Feature的取值</th><th>值</th><th>说 明</th></tr></thead><tbody><tr><td>QWebEnginePage.Notifications</td><td>0</td><td>网站通知最终用户</td></tr><tr><td>QWebEnginePage.Geolocation</td><td>1</td><td>当地硬件或服务</td></tr><tr><td>QWebEnginePage.MediaAudioCapture</td><td>2</td><td>音频设备.如麦克风</td></tr><tr><td>QWebEnginePage.MediaVideoCapture</td><td>3</td><td>视频设备.如摄像头</td></tr><tr><td>QWebEnginePage.MediaAudioVideoCapture</td><td>4</td><td>音频和视频设备</td></tr><tr><td>QWebEnginePage.MouseLock</td><td>5</td><td>将光标锁定在浏览器中.通常用于游戏中</td></tr><tr><td>QWebEnginePage.DesktopVideoCapture</td><td>6</td><td>视频输出.如多人可共享桌面</td></tr><tr><td>QWebEnginePage.DesktopAudioVideoCapture</td><td>7</td><td>视频和音频输出</td></tr></tbody></table></li><li><p>policy设置权限可取:</p><ul><li>QWebEnginePagePermissionUnknown(不确定是否已经用户授权)</li><li>QWebEnginePage.PermissionGrantedByUser(用户已经授权)</li><li>QWebEnginePage.PermissionDeniedByUser(用户已经拒绝)</li></ul></li></ul></li><li><p>网页中有一些默认的动作,由动作构成右键快捷菜单,有关动作的内容参见动作节,网页中的动作由 action(action:QWebEnginePage.WebAction)方法获取,其中放举值QWebEnginePage.WebAction 可取值如表所示</p><table><thead><tr><th>QWebEnginePage.WebAction的取值</th><th>值</th><th>QWebEnginePage.WebAction 的取值</th><th>值</th></tr></thead><tbody><tr><td>QWebEnginePage.NoWebAction</td><td>-1</td><td>QWebEnginePage.ToggleMediaPlayPause</td><td>23</td></tr><tr><td>QWebEnginePage.Back</td><td>0</td><td>QWebEnginePage.ToggleMediaMute</td><td>24</td></tr><tr><td>QWebEnginePage.Forward</td><td>1</td><td>QWebEnginePage.DownloadLinkToDisk</td><td>16</td></tr><tr><td>QWebEnginePage.Stop</td><td>2</td><td>QWebEnginePage.DownloadImageToDisk</td><td>19</td></tr><tr><td>QWebEnginePage.Reload</td><td>3</td><td>QWebEnginePage.DownloadMediaToDisk</td><td>25</td></tr><tr><td>QWebEnginePage.Cut</td><td>4</td><td>QWebEnginePage.InspectElement</td><td>26</td></tr><tr><td>QWebEnginePage.Copy</td><td>5</td><td>QWebEnginePage.ExitFullScreen</td><td>27</td></tr><tr><td>QWebEnginePage.Paste</td><td>6</td><td>QWebEnginePage.RequestClose</td><td>28</td></tr><tr><td>QWebEnginePage.Undo</td><td>7</td><td>QWebEnginePage.Unselect</td><td>29</td></tr><tr><td>QWebEnginePage.Redo</td><td>8</td><td>QWebEnginePage.SavePage</td><td>30</td></tr><tr><td>QWebEnginePage.SelectAll</td><td>9</td><td>QWebEnginePage.ViewSource</td><td>32</td></tr><tr><td>QWebEnginePage.ReloadAndBypassCache</td><td>10</td><td>QWebEnginePage.ToggleBold</td><td>33</td></tr><tr><td>QWebEnginePage.PasteAndMatchStyle</td><td>11</td><td>QWebEnginePage.ToggleItalic</td><td>34</td></tr><tr><td>QWebEnginePage.OpenLinkInThisWindow</td><td>12</td><td>QWebEnginePage.ToggleUnderline</td><td>35</td></tr><tr><td>QWebEnginePage.OpenLinkInNewWindow</td><td>13</td><td>QWebEnginePage.ToggleStrikethrough</td><td>36</td></tr><tr><td>QWebEnginePage.OpenLinkInNewTab</td><td>14</td><td>QWebEnginePage.AlignLeft.</td><td>37</td></tr><tr><td>QWebEnginePage.CopyLinkToClipboard</td><td>15</td><td>QWebEnginePage.AlignCenter</td><td>38</td></tr><tr><td>QWebEnginePage.CopylmageToClipboard</td><td>17</td><td>QWebEnginePage.AlignRight</td><td>39</td></tr><tr><td>QWebEnginePage.CopyImageUrlToClipboard</td><td>18</td><td>QWebEnginePage.AlignJustified</td><td>40</td></tr><tr><td>QWebEnginePage.CopyMediaUrlToClipboard</td><td>20</td><td>QWebEnginePage.Indent</td><td>41</td></tr><tr><td>QWebEnginePage.ToggleMediaControls</td><td>21</td><td>QWebEnginePage, Outdent</td><td>42</td></tr><tr><td>QWebEnginePage.ToggleMediaLoop</td><td>22</td><td>QWebEnginePage.InsertOrderedList</td><td>43</td></tr><tr><td>QWebEnginePage.OpenLinkInNewBackgroundTab</td><td>31</td><td>QWebEnginePage.InsertUnorderedList</td><td>44</td></tr></tbody></table><ul><li>用triggerAction(action;QWebEnginePage,WebAction,checked;bool=False)方法可以激发某个动作</li></ul></li><li><p>用chooseFiles(QWebEnginePage.FileSelectionMode, oldFiles: Sequence[str])方法设置网页中选择文件时(如上传文件)的文件选择模式,其中QWebEnginePage.FileSelectionMode枚举值可取以下值；oldFiles 是提供建议的文件名前半部分。</p><ul><li>QWebEnginePage.FileSelectOpen(只能选择一个文件)</li><li>QWebEnginePage.FileSelectOpenMultiple(可选多个文件)</li><li>QWebEnginePage FileSelectUploadFolder(选择文件夹);</li></ul></li><li><p>用save(filePath:str,format: QWebEngineDownloadRequest, SavePageFormat)方法保存网页内容到指定文件,其中参数format设置文件格式,可取:</p><ul><li>QWebEngineDownloadRequest.UnknownSaveFormat</li><li>QWebEngineDownloadRequest.SingleHtmlSaveFormat(保存到一个HTML文件中,有些信息如图片不保持)</li><li>QWebEngineDownloadRequest,CompleteHtmlSaveFormat(保存整个 HTML文件,有些信息如图片保存到文件夹中)</li><li>QWebEngineDownloadRequest,MimeHtmlSaveFormat(保存成MIMEHTML格式)</li></ul></li></ul><table><thead><tr><th>QWebEnginePage的方法及参数类型</th><th>返回值的类型</th><th>说明</th></tr></thead><tbody><tr><td>setUrl(url: Union[QUrl,str])</td><td>None</td><td>加载指定的网页地址</td></tr><tr><td>load(url: Union[QUrl,str])</td><td>None</td><td>加载QUrl地址网页</td></tr><tr><td>load(request: QWebEngineHttpRequest)</td><td>None</td><td>加载特定的网页</td></tr><tr><td>requestedUrl()</td><td>QUrI</td><td>获取当前网页的地址</td></tr><tr><td>url()</td><td>QUrI</td><td>获取当前网页的地址</td></tr><tr><td>isLoading()</td><td>bool</td><td>获取网页是否在加载</td></tr><tr><td>createWindow(QWebEnginePage.WebWindowType)</td><td>QWebEnginePage</td><td>重写该方法创建新网页</td></tr><tr><td>acceptNavigationRequest(url: Union[QUrl, str], QWebEnginePage.NavigationType, isMainFrame:bool)</td><td>bool</td><td>重写该函数,设置导航到新地 址的处理方式</td></tr><tr><td>setFeaturePermission(securityOrigin:Union[QUr1,str],feature:QWebEnginePage.Feature,policy: QWebEnginePage.PermissionPolicy)</td><td>None</td><td>给网页需要的设备进行权限 设置</td></tr><tr><td>setUrlRequestInterceptor(interceptor: QWebEngineUrlRequestInterceptor)</td><td>None</td><td>设置拦截器</td></tr><tr><td>action(action: QWebEnginePage.WebAction)</td><td>QAction</td><td>获取网页的指定动作,用于创 建右键快捷菜单</td></tr><tr><td>triggerAction(action: QWebEnginePage.WebAction,checked: bool=False)</td><td>None</td><td>执行指定的动作</td></tr><tr><td>setBackgroundColor(color:Union[QColor,Qt.GlobalColor,str])</td><td>None</td><td>设置背景颜色</td></tr><tr><td>backgroundColor()</td><td>QColor</td><td>获取网页背景颜色</td></tr><tr><td>contentsSize()</td><td>QSizeF</td><td>获取网页内容的尺寸</td></tr><tr><td>setDevToolsPage(page:QWebEnginePage)</td><td>None</td><td>设置开发者工具</td></tr><tr><td>devToolsPage()</td><td>QWebEnginePage</td><td>获取开发工具网页</td></tr><tr><td>download(url: Union[QUrl,str].filename:str=&#39;&#39;)</td><td>None</td><td>下载资源到文件中</td></tr><tr><td>findText(str:QWebEnginePage FindFlags,function(QWebEngineFindTextResult))</td><td>None</td><td>调用指定的函数查找,函数参 数是查找结果</td></tr><tr><td>findText(subString: str,QWebEnginePage.FindFlags=})</td><td>None</td><td>查找指定的内容</td></tr><tr><td>hasSelection()</td><td>bool</td><td>获取是否有选中的内容</td></tr><tr><td>history()</td><td>QWebEngineHistory</td><td>获取历史导航</td></tr><tr><td>icon()</td><td>QIcon</td><td>获取网页的图标</td></tr><tr><td>iconUrl()</td><td>QUrI</td><td>获取网页的地址</td></tr><tr><td>title()</td><td>str</td><td>获取网页标题</td></tr><tr><td>chooseFiles(QWebEnginePage.FileSelectionMode, oldFiles: Sequence[str])</td><td>ListCstr]</td><td>设置选择文件时(如上传文 件),文件选择模式</td></tr><tr><td>setAudioMuted(muted: bool)</td><td>None</td><td>设置网页静音状态</td></tr><tr><td>isAudioMuted()</td><td>bool</td><td>获取是否处于静音状态</td></tr><tr><td>setVisible(visible:bool)</td><td>None</td><td>设置网页是否可见</td></tr><tr><td>isVisible()</td><td>bool</td><td>获取网页是否可见</td></tr><tr><td>printToPdf(filePath:str)</td><td>None</td><td>将网页转换成 pdl 文档</td></tr><tr><td>profile()</td><td>QWebEngineProfile</td><td>获取 QWebEngineProile</td></tr><tr><td>recentlyAudible()</td><td>bool</td><td>获取是否播放过音频</td></tr><tr><td>renderProcessPid()</td><td>int</td><td>获取渲染进度</td></tr><tr><td>replaceMisspelledWord(replacement: str)</td><td>None</td><td>用指定的文本替换不能识别的 文本</td></tr><tr><td>runJavaScript(scriptSource: str,worldId:int= 0,function(any))</td><td>None</td><td>运行 Java 脚本</td></tr><tr><td>runJavaScript(seriptSource: str,function(any))</td><td>None</td><td>运行 Java 脚本</td></tr><tr><td>save(filePath: str,format: QWebEngineDownloadRequest SavePageFormat)</td><td>None</td><td>保存网页内容到文件中</td></tr><tr><td>scrollPosition()</td><td>QPointF</td><td>获取网页滚动的位置</td></tr><tr><td>selectedText()</td><td>str</td><td>获取网页上选中的文本</td></tr><tr><td>setHtml(html: str, baseUrl: Union[QUrl, str])</td><td>None</td><td>显示HTML文档内容</td></tr><tr><td>setWebChannel(QWebChannel,worldId:int=0)</td><td>None</td><td>设置网络通道</td></tr><tr><td>webChannel()</td><td>QWebChannel</td><td>获取当前的网络通道</td></tr><tr><td>setZoomFactor(factor:float)</td><td>None</td><td>设置缩放系数</td></tr><tr><td>zoomFactor()</td><td>float</td><td>获取当前的缩放系数</td></tr><tr><td>settings()</td><td>QWebEngineSettings</td><td>获取对网页的设置</td></tr></tbody></table><h5 id="网页qwebenginepage-的信号" tabindex="-1"><a class="header-anchor" href="#网页qwebenginepage-的信号" aria-hidden="true">#</a> 网页QWebEnginePage 的信号</h5><p>网页QWebEnginePage的信号如表所示,主要信号介绍如下</p><ul><li><p>当网页的QUrl地址发生改变时,发送urChanged(QUrl)信号开始加载网页内容时发送loadStarted()信号;</p><ul><li>加载过程中发送 loadProgress(int)参数的值是加载进度取值范围是0~100;</li><li>加载结束时发送 loadFinished(bool)信号,如果加载成功则参数是 True。</li></ul></li><li><p>网页加载发生改变时发送 loadingChanged(QWebEngineLoadingInfo)信号;</p><ul><li><p>其中QWebEngineLoadingInfo记录加载过程信息,用QWebEngineLoadingInfo 的 url()方法获取加载网页的QUrl 地址;</p></li><li><p>用isErrorPage()方法判断加载过程是否出错;</p></li><li><p>status()方法获取加载状态,返回值可能是以下值,对应的值分别是0~3:</p><blockquote><ul><li>QWebEngineLoadingInfoLoadStartedStatus(加载开始)</li><li>QWebEngineLoadingInfo.LoadStoppedStatus(加载停止)</li><li>QWebEngineLoadingInfo,LoadSucceededStatus(加载成功)</li><li>QWebEngineLoadingInfo.LoadFailedStatus(加载失败)</li></ul></blockquote><ul><li>如果加载失败,可以用errorDomain()方法获取失败类型返值可能是以下值,对应的值分别是0~6: <ul><li>QWebEngineLoadingInfo.NoErrorDomain(出错类型未知)</li><li>QWebEngineLoadingInfoInternalErrorDomain(内容不能被 PySide识别)</li><li>QWebEngineLoadingInfoConnectionErrorDomain(网络连接出错)</li><li>QWebEngineLoadingInfo CertificateErrorDomain(证书出错)</li><li>QWebEngineLoadingInfo.HttpErrorDomain(HTTP连接出错)</li><li>QWebEngineLoadingInfo.FtpErrorDomain(FTE连接出错)</li><li>QWebEngineLoadingInfo.DnsErrorDomain(DNS 连接出错)</li></ul></li></ul></li></ul></li><li><p>当网页中视频播放器需要全屏显示时发送ullScreenRequested(QWebEngineFullScreenRequest)信号,信号的参数是 QWebEngineFullScreenRequest 对象</p><ul><li>可以用QWebEngineFullScreenRequest 对象的accept()方法接受全屏模式;用reject()方法放弃全屏模式;</li><li>如果 toggleOn()方法的返回值是True,则表示处于全屏状态</li><li>另外用origin()方法获取全屏状态时的 QUrl地址。</li></ul></li><li><p>网页上需要输人授权(用户名和密码)时发送authenticationRequired(QUrl,QAuthenticator)信号</p><ul><li>其中QUrl是需要授权的网页地址</li><li>QAuthenticator 用于记录用户名和密码的类 <ul><li>可以用setUser(str)和 setPassWord(str)方法分别设置用户名和密码</li><li>用user()和 password()方法获取用户名和密码</li></ul></li></ul></li><li><p>需要设备授权时发送featurePermissionRequested(QUrl,QWebEnginePage Feature)信号</p><ul><li>设备使用完不再需要设备授权时发送 featurePermissionRequestCanceled(QUrl,QWebEnginePageFeature)信号。</li></ul></li><li><p>在网页上搜索文本,搜索完成时发送 findTextFinished(QWebEngineFindTextResult)信号</p><ul><li>其中QWebEngineFindTextResult 记录查询到的与目标匹配的结果的个数和当前匹配的索引。 <ul><li>用QWebEngineFindTextResult 的 nuberOfMatches()方法获取匹配的个数用activeMatch()方法获取当前匹配的索引。</li></ul></li></ul></li><li><p>调用acceptNavigationRequest()方法时发送 navigationRequested(QWebEngineNavigationRequest)信号</p><ul><li>利用QWehEngineNavigationRequest 的accept()或 reject()方法可以接受或拒绝导航到指定网页;</li><li>用url()方法获取要导航到的网页地址。</li></ul></li><li><p>需要在另外一个窗口中加载新网页时发送newWindowRequested(QWebEngineNewWindowRequest)信号,如果用户重写了 createWindow()函数则不会发送该信号。</p><ul><li>QWebEngineNewWindowRequest 的openIn(QWebEnginePage)方法指定在哪个网页中打开;</li><li>isUserInitiated()方法获取是否由用户(键盘或鼠标事件)引起requestedUrl()方法取新网页的 QUrl 地址</li><li>requestedGeometry()方法获取新网页的尺寸QRect;</li><li>destination()方法获取新网页的类型,返回值是枚举类型QWebEngineNewWindowRequest,DestinationType可取以下值,对应的值分别是0~3。: <ul><li>QWebEngineNewWindowRequest.InNewWindow(新窗口中)</li><li>QWebEngineNewWindowRequest, InNewTab(同窗的切换卡中)</li><li>QWebEngineNewWindowRequest,InNewDialog(在没有切换卡、工具栏和 URL输人框的新窗口中)</li><li>QWebEngineNewWindowRequest.InNewBackgroundTab(在同一个窗口中,没有隐藏当前可见的浏览器)</li></ul></li></ul></li><li><p>需要获取比应用程序分配的更大存储空间时发送quotaRequested(QWebEngineQuotaRequest)信号</p><ul><li>用QWebEngineQuotaRequest 的 accept()方法或reject()方法接受请求或拒绝请求;</li><li>用requestedSize()方法获取需要的存储空间(单位是 B);</li><li>用origin()方法获取发出请求的网页地址 QUrl。</li></ul></li><li><p>选择客户证书时发送 selectClientCertificate(QWebEngineClientCertificateSelection)信号</p><ul><li>用QWebEngineClientCertificateSelection 的 certificates()方法获取可选的证书列表List[QSslCertificate];</li><li>用select(QSslCertificate)方法选择一个证书;</li><li>用selectNone()方法不选择任何证书继续加载网页;</li><li>用host()方法获取需要客户证书的服务器的地址 QUrI(主机名和端口)。</li></ul></li><li><p>渲染非正常中断时发送renderProcessTerminated(QWebEnginePage.RenderProcessTerminationStatus,exitCode:int)信号,举值QWebEnginePage.RenderProcessTerminationStatus 可取以下值,分别对应0~3:</p><ul><li>QWebEnginePage NormalTerminationStatus</li><li>QWebEnginePage AbnormalTerminationStatus</li><li>QWebEnginePage.CrashedTerminationStatus</li><li>QWebEnginePage KilledTerminationStatus</li></ul></li></ul><table><thead><tr><th>QWebEnginePage 的信号及参数类型</th><th>说明</th></tr></thead><tbody><tr><td>urlChanged(QUrl)</td><td>网页地址发生改变时发送信号</td></tr><tr><td>selectionChanged()</td><td>网页所选内容发生改变时发送信号</td></tr><tr><td>iconChanged(QIcon)</td><td>网页图标发生改变时发送信号</td></tr><tr><td>iconUrlChanged(QUrl)</td><td>网页图标的地址发生改变时发送信号</td></tr><tr><td>titleChanged(str)</td><td>网页标题发生改变时发送信号</td></tr><tr><td>visibleChanged(bool)</td><td>可见性发生改变时发送信号</td></tr><tr><td>contentsSizeChanged(QSizeF)</td><td>网页的尺寸发生改变时发送信号</td></tr><tr><td>geometryChangeRequested(QRect)</td><td>网页位置和尺寸发生改变时发送信号</td></tr><tr><td>fullScreenRequested(QWebEngineFullScreenRequest)</td><td>全屏显示时(如播放视频)发送信号</td></tr><tr><td>windowCloseRequested()</td><td>需要关闭窗口时发送信号</td></tr><tr><td>audioMutedChanged(bool)</td><td>网页静音状态发生改变时发送信号</td></tr><tr><td>scrollPositionChanged(QPointF)</td><td>滚动位置发生改变时发送信号</td></tr><tr><td>linkHovered(str)</td><td>光标移到网页中的链接时发送信号</td></tr><tr><td>new WindowRequested(QWebEngineNewWindowRequest)</td><td>在另一个窗口中加载新网页时发送信号</td></tr><tr><td>authenticationRequired(QUrl,QAuthenticator)</td><td>网页上需要输人授权(用户名和密码)时发送信号</td></tr><tr><td>certificateError(QWebEngineCertificateError)</td><td>证书出错时发送信号</td></tr><tr><td>featurePermissionRequested(QUrl; QWebEnginePage, Feature)</td><td>需要设备授权时发送信号</td></tr><tr><td>featurePermissionRequestCanceled(QUrl, QWebEnginePage.Feature)</td><td>不再需要设备授权时发送信号</td></tr><tr><td>findTextFinished(QWebEngineFindTextResult)</td><td>查找结束时发送信号</td></tr><tr><td>loadStarted()</td><td>开始加载网页内容时发送信号</td></tr><tr><td>loadProgress(int)</td><td>加载过程中发送信号,参数值的范围是0~100</td></tr><tr><td>loadFinished(bool)</td><td>加载结束时发送信号</td></tr><tr><td>loadingChanged(QWebEngineLoadingInfo)</td><td>加载发生改变时发送信号</td></tr><tr><td>navigationRequested(QWebEngineNavigationRequest)</td><td>调用acceptNavigationRequest()方法时发送信号</td></tr><tr><td>pdfPrintingFinished(filePath: str, success: bool)</td><td>转换完pdf格式文档时发送信号</td></tr><tr><td>proxyAuthenticationRequired(QUrl, QAuthenticator, proxyHost: str)</td><td>需要代理授权时发送信号</td></tr><tr><td>quotaRequested(QWebEngineQuotaRequest)</td><td>需要获取比应用程序分配的更大存储空间时发送信号</td></tr><tr><td>recentlyAudibleChanged(recentlyAudible:bool)</td><td>静音状态发生改变时发送信号</td></tr><tr><td>renderProcessPidChanged(int)</td><td>渲染过程发生改变时发送信号</td></tr><tr><td>renderProcessTerminated(QWebEnginePage.RenderProcessTerminationStatus, exitCode: int)</td><td>渲染非正常中断时发送信号</td></tr><tr><td>selectClientCertificate(QWebEngineClientCertificateSelection)</td><td>选择客户证书时发送信号</td></tr></tbody></table><h5 id="qwebenginehistory-与-qwebenginehistoryltem" tabindex="-1"><a class="header-anchor" href="#qwebenginehistory-与-qwebenginehistoryltem" aria-hidden="true">#</a> QWebEngineHistory 与 QWebEngineHistoryltem</h5><p>每个网页都会有一个QWebEngineHistory 对象</p><ul><li>QWebEngineHistory 对象由多个历史记录构成,每个历史记录称为QWebEngineHistoryItem(历史项),</li><li>QWebEngineHistorylItem 项用于记录曾经访问过的QUrl地址和访问时间。</li></ul><p>用QWebEnginePage 或 QWebEngineView的 history()方法可以获得网页的 QWebEngineHistory 对象。</p><p>网页加载的内容是当前历史项记录的网址,如果当前历史项发生改变,则网页加载的内容也同时改变。</p><p>当前历史项将 QWebEngineHistory 中的历史项分为之前的历史项和之后的历史项。</p><ul><li>用QWebEngineHistory 的 currentItem()方法和currentItemIndex()方法可以分别获取当前的历史项和历史项的索引;</li><li>用back()方法和 forward)方法可以分别将当前项之前的历史项或之后的历史项作为当前历史项,网页也同时跳转,网页也同时跳转,</li><li>用goToItem(QWebEngineHistoryItem)方法可以将指定的历史项作为当前项,网页也同时跳转;</li><li>用canGoBack()方法或canGoForward()方法可以判断当前项之前或之后是否有历史项,如果有,则可以后退或前进;</li><li>用QWebEngineHistoryItem 的 url()方法可以获取历史项关联的网址;</li><li>用lastVisited()方法获取历史项关联的网页最后访问日期和时间。</li></ul><p><strong>QWebEngineHistory常用方法如表所示</strong></p><table><thead><tr><th>QWebEngineHistory的方法</th><th>返回值的类型</th><th>说明</th></tr></thead><tbody><tr><td>currentItem()</td><td>QWebEngineHistoryItem</td><td>获取当前的历史项</td></tr><tr><td>currentItemIndex()</td><td>int</td><td>获取当前历史项的索引</td></tr><tr><td>back()</td><td>None</td><td>将当前项之前的历史项作为当前项,网页也同时后退</td></tr><tr><td>forward()</td><td>None</td><td>将当前项之后的历史项作为当前项,网页也同时前进</td></tr><tr><td>goToItem(QWebEngineHistoryltem)</td><td>None</td><td>将指定的历史项作为当前项,网页也同时跳转</td></tr><tr><td>backItem()</td><td>QWebEngineHistoryItem</td><td>获取当前项之前的历史项</td></tr><tr><td>backItems(maxItems:int)</td><td>List[QWebEngineHistoryItem]</td><td>获取当前项之前的最多maxItems个历史项</td></tr><tr><td>forwardItem()</td><td>QWebEngineHistoryItem</td><td>获取当前项之后的历史项</td></tr><tr><td>forwardItems(maxItems:int)</td><td>List[QWebEngineHistoryItemJ</td><td>获取当前项之后的最多maxItems个历史项</td></tr><tr><td>canGoBack()</td><td>bool</td><td>获取是否可以后退</td></tr><tr><td>canGoForward()</td><td>bool</td><td>获取是否可以前进</td></tr><tr><td>itemAt(i:int)</td><td>QWebEngineHistoryltem</td><td>根据索引获取历史项</td></tr><tr><td>items()</td><td>List[QWebEngineHistoryItem]</td><td>获取所有的历史项</td></tr><tr><td>count()</td><td>int</td><td>获取记录的历史项的个数</td></tr><tr><td>clear()</td><td>None</td><td>清空所有记录</td></tr></tbody></table><p><strong>QWebEngineHistoryItem常用方法如表所示</strong></p><table><thead><tr><th>QWebEngineHistoryItem的方法</th><th>返回值的类型</th><th>说明</th></tr></thead><tbody><tr><td>url()</td><td>QUrl</td><td>获取历史项关联的网址</td></tr><tr><td>title()</td><td>Str</td><td>获取历史项关联的网页的标题</td></tr><tr><td>lastVisited()</td><td>QDateTime</td><td>获取历史项关联的网页最后访问日期和时间</td></tr><tr><td>iconUrl()</td><td>QUrI</td><td>获取历史项关联的图标的网址</td></tr><tr><td>isValid()</td><td>bool</td><td>获取历史项是否有效</td></tr><tr><td>originalUrl()</td><td>QUrI</td><td>获取历史项关联的初始网址</td></tr></tbody></table><h4 id="qwebenginepage-和-qwebenginehistory-的应用实例" tabindex="-1"><a class="header-anchor" href="#qwebenginepage-和-qwebenginehistory-的应用实例" aria-hidden="true">#</a> QWebEnginePage 和 QWebEngineHistory 的应用实例</h4><p>下面程序建立一个复杂些的网站浏览器,将浏览器放到切换卡控件中,在需要弹出窗口时自己添加卡片;可以进行页面的前进、后退导航,可以显示加载页面的进度</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: UTF-8 -*-</span>
<span class="token comment"># File date: Hi_2023/3/3 12:56</span>
<span class="token comment"># File_name: 02-QWebEnginePage 和 QWebEngineHistory的应用实例.py</span>

<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWidgets <span class="token keyword">import</span> QApplication<span class="token punctuation">,</span> QWidget<span class="token punctuation">,</span> QLabel<span class="token punctuation">,</span> QPushButton<span class="token punctuation">,</span> QLineEdit<span class="token punctuation">,</span> QHBoxLayout<span class="token punctuation">,</span> QVBoxLayout
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtWebEngineWidgets <span class="token keyword">import</span> QWebEngineView
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> QUrl
<span class="token keyword">from</span> PySide6<span class="token punctuation">.</span>QtGui <span class="token keyword">import</span> QIcon
<span class="token keyword">import</span> sys


<span class="token keyword">class</span> <span class="token class-name">myWebView</span><span class="token punctuation">(</span>QWebEngineView<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 创建QWebEngineView的子类</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>parent<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">createwindow</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 重写 createWindow()函数</span>
        <span class="token keyword">return</span> self


<span class="token keyword">class</span> <span class="token class-name">MyWindow</span><span class="token punctuation">(</span>QWidget<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>parent<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span><span class="token string">&quot;QWebEngineView的应用实例&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setupUi<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">setupUi</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>urlLabel <span class="token operator">=</span> QLabel<span class="token punctuation">(</span><span class="token string">&quot;网址(&amp;D):&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>urlLine <span class="token operator">=</span> QLineEdit<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 地址栏</span>
        self<span class="token punctuation">.</span>urlLabel<span class="token punctuation">.</span>setBuddy<span class="token punctuation">(</span>self<span class="token punctuation">.</span>urlLine<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>backBtn <span class="token operator">=</span> QPushButton<span class="token punctuation">(</span>icon<span class="token operator">=</span>QIcon<span class="token punctuation">(</span><span class="token string">&quot;../../../Resources/Icons/FlatIcon-regular-rounded/arrow-small-left.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 后退按钮</span>
        self<span class="token punctuation">.</span>forwardBtn <span class="token operator">=</span> QPushButton<span class="token punctuation">(</span>icon<span class="token operator">=</span>QIcon<span class="token punctuation">(</span><span class="token string">&quot;../../../Resources/Icons/FlatIcon-regular-rounded/arrow-small-right.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 前进按钮</span>
        self<span class="token punctuation">.</span>reloadBtn <span class="token operator">=</span> QPushButton<span class="token punctuation">(</span>icon<span class="token operator">=</span>QIcon<span class="token punctuation">(</span><span class="token string">&quot;../../../Resources/Icons/FlatIcon-regular-rounded/refresh.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 重新加载按钮</span>
        self<span class="token punctuation">.</span>homeBtn <span class="token operator">=</span> self<span class="token punctuation">.</span>homeBtn <span class="token operator">=</span> QPushButton<span class="token punctuation">(</span>icon<span class="token operator">=</span>QIcon<span class="token punctuation">(</span><span class="token string">&quot;../../../Resources/Icons/FlatIcon-regular-rounded/home.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 主页按钮</span>

        self<span class="token punctuation">.</span>webEngineView <span class="token operator">=</span> myWebView<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 用QWebEngineView的子类创建浏览器</span>
        self<span class="token punctuation">.</span>homeAddress <span class="token operator">=</span> <span class="token string">&quot;https://www.sohu.com&quot;</span>  <span class="token comment"># 主页地址</span>
        self<span class="token punctuation">.</span>webEngineView<span class="token punctuation">.</span>setUrl<span class="token punctuation">(</span>self<span class="token punctuation">.</span>homeAddress<span class="token punctuation">)</span>

        H <span class="token operator">=</span> QHBoxLayout<span class="token punctuation">(</span><span class="token punctuation">)</span>
        H<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>urlLabel<span class="token punctuation">)</span>
        H<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>urlLine<span class="token punctuation">)</span>
        H<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>backBtn<span class="token punctuation">)</span>
        H<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>forwardBtn<span class="token punctuation">)</span>
        H<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>reloadBtn<span class="token punctuation">)</span>
        H<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>homeBtn<span class="token punctuation">)</span>

        V <span class="token operator">=</span> QVBoxLayout<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        V<span class="token punctuation">.</span>addLayout<span class="token punctuation">(</span>H<span class="token punctuation">)</span>
        V<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>webEngineView<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>urlLine<span class="token punctuation">.</span>returnPressed<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>urlLine_return_Pressed<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>webEngineView<span class="token punctuation">.</span>titleChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>webEngineView<span class="token punctuation">.</span>urlChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>urChanged<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>webEngineView<span class="token punctuation">.</span>iconChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>setWindowIcon<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>forwardBtn<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>webEngineView<span class="token punctuation">.</span>forward<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>backBtn<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>webEngineView<span class="token punctuation">.</span>back<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>reloadBtn<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>webEngineView<span class="token punctuation">.</span><span class="token builtin">reload</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>homeBtn<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>homeBtn_clicked<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">urlLine_return_Pressed</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        url <span class="token operator">=</span> QUrl<span class="token punctuation">.</span>fromUserInput<span class="token punctuation">(</span>self<span class="token punctuation">.</span>urlLine<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> url<span class="token punctuation">.</span>isValid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>webEngineView<span class="token punctuation">.</span>load<span class="token punctuation">(</span>url<span class="token punctuation">)</span>  <span class="token comment"># 加载网页</span>

    <span class="token keyword">def</span> <span class="token function">urChanged</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>urlLine<span class="token punctuation">.</span>setText<span class="token punctuation">(</span>url<span class="token punctuation">.</span>toString<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 显示新的地址</span>

    <span class="token keyword">def</span> <span class="token function">homeBtn_clicked</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>webEngineView<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">&quot;https;//www.sohu.com&quot;</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
    win <span class="token operator">=</span> MyWindow<span class="token punctuation">(</span><span class="token punctuation">)</span>

    win<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,138)]))}const r=s(i,[["render",c],["__file","09时间网页及音视频控件.html.vue"]]);export{r as default};
